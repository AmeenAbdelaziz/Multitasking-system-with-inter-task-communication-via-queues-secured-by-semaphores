
Aufgabe5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ca  00800200  00002324  000023b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002324  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000019f5  008002ca  008002ca  00002482  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002482  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000024b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000498  00000000  00000000  000024f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00007411  00000000  00000000  0000298c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002630  00000000  00000000  00009d9d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000035f8  00000000  00000000  0000c3cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000012b4  00000000  00000000  0000f9c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001e21  00000000  00000000  00010c7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00005179  00000000  00000000  00012a9d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004f8  00000000  00000000  00017c16  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	73 c0       	rjmp	.+230    	; 0xe8 <_ZL7wdt_offv>
       2:	00 00       	nop
       4:	01 c1       	rjmp	.+514    	; 0x208 <__bad_interrupt>
       6:	00 00       	nop
       8:	ff c0       	rjmp	.+510    	; 0x208 <__bad_interrupt>
       a:	00 00       	nop
       c:	fd c0       	rjmp	.+506    	; 0x208 <__bad_interrupt>
       e:	00 00       	nop
      10:	fb c0       	rjmp	.+502    	; 0x208 <__bad_interrupt>
      12:	00 00       	nop
      14:	f9 c0       	rjmp	.+498    	; 0x208 <__bad_interrupt>
      16:	00 00       	nop
      18:	f7 c0       	rjmp	.+494    	; 0x208 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	f5 c0       	rjmp	.+490    	; 0x208 <__bad_interrupt>
      1e:	00 00       	nop
      20:	f3 c0       	rjmp	.+486    	; 0x208 <__bad_interrupt>
      22:	00 00       	nop
      24:	fc c3       	rjmp	.+2040   	; 0x81e <__vector_9>
      26:	00 00       	nop
      28:	2d c4       	rjmp	.+2138   	; 0x884 <__vector_10>
      2a:	00 00       	nop
      2c:	5e c4       	rjmp	.+2236   	; 0x8ea <__vector_11>
      2e:	00 00       	nop
      30:	eb c0       	rjmp	.+470    	; 0x208 <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 b8 0a 	jmp	0x1570	; 0x1570 <__vector_13>
      38:	0c 94 eb 0a 	jmp	0x15d6	; 0x15d6 <__vector_14>
      3c:	e5 c0       	rjmp	.+458    	; 0x208 <__bad_interrupt>
      3e:	00 00       	nop
      40:	e3 c0       	rjmp	.+454    	; 0x208 <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 1e 0b 	jmp	0x163c	; 0x163c <__vector_17>
      48:	0c 94 51 0b 	jmp	0x16a2	; 0x16a2 <__vector_18>
      4c:	0c 94 84 0b 	jmp	0x1708	; 0x1708 <__vector_19>
      50:	0c 94 b7 0b 	jmp	0x176e	; 0x176e <__vector_20>
      54:	0c 94 52 0a 	jmp	0x14a4	; 0x14a4 <__vector_21>
      58:	0c 94 85 0a 	jmp	0x150a	; 0x150a <__vector_22>
      5c:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__vector_23>
      60:	d3 c0       	rjmp	.+422    	; 0x208 <__bad_interrupt>
      62:	00 00       	nop
      64:	d1 c0       	rjmp	.+418    	; 0x208 <__bad_interrupt>
      66:	00 00       	nop
      68:	cf c0       	rjmp	.+414    	; 0x208 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	cd c0       	rjmp	.+410    	; 0x208 <__bad_interrupt>
      6e:	00 00       	nop
      70:	cb c0       	rjmp	.+406    	; 0x208 <__bad_interrupt>
      72:	00 00       	nop
      74:	c9 c0       	rjmp	.+402    	; 0x208 <__bad_interrupt>
      76:	00 00       	nop
      78:	c7 c0       	rjmp	.+398    	; 0x208 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	c5 c0       	rjmp	.+394    	; 0x208 <__bad_interrupt>
      7e:	00 00       	nop
      80:	0c 94 ea 0b 	jmp	0x17d4	; 0x17d4 <__vector_32>
      84:	0c 94 1d 0c 	jmp	0x183a	; 0x183a <__vector_33>
      88:	0c 94 50 0c 	jmp	0x18a0	; 0x18a0 <__vector_34>
      8c:	0c 94 83 0c 	jmp	0x1906	; 0x1906 <__vector_35>
      90:	bb c0       	rjmp	.+374    	; 0x208 <__bad_interrupt>
      92:	00 00       	nop
      94:	b9 c0       	rjmp	.+370    	; 0x208 <__bad_interrupt>
      96:	00 00       	nop
      98:	b7 c0       	rjmp	.+366    	; 0x208 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	b5 c0       	rjmp	.+362    	; 0x208 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	b3 c0       	rjmp	.+358    	; 0x208 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	b1 c0       	rjmp	.+354    	; 0x208 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0c 94 b6 0c 	jmp	0x196c	; 0x196c <__vector_42>
      ac:	0c 94 e9 0c 	jmp	0x19d2	; 0x19d2 <__vector_43>
      b0:	0c 94 1c 0d 	jmp	0x1a38	; 0x1a38 <__vector_44>
      b4:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__vector_45>
      b8:	a7 c0       	rjmp	.+334    	; 0x208 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 82 0d 	jmp	0x1b04	; 0x1b04 <__vector_47>
      c0:	0c 94 b5 0d 	jmp	0x1b6a	; 0x1b6a <__vector_48>
      c4:	0c 94 e8 0d 	jmp	0x1bd0	; 0x1bd0 <__vector_49>
      c8:	0c 94 1b 0e 	jmp	0x1c36	; 0x1c36 <__vector_50>
      cc:	9d c0       	rjmp	.+314    	; 0x208 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	9b c0       	rjmp	.+310    	; 0x208 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	99 c0       	rjmp	.+306    	; 0x208 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	97 c0       	rjmp	.+302    	; 0x208 <__bad_interrupt>
      da:	00 00       	nop
      dc:	95 c0       	rjmp	.+298    	; 0x208 <__bad_interrupt>
      de:	00 00       	nop
      e0:	93 c0       	rjmp	.+294    	; 0x208 <__bad_interrupt>
	...

000000e4 <__ctors_start>:
      e4:	4a 03       	fmul	r20, r18
      e6:	93 09       	sbc	r25, r3

000000e8 <_ZL7wdt_offv>:
// ausgeschaltet werden, sonst ensteht eine endlose RESET-Schleife. 
// Zu diesem Zweck wird der Aufruf von wdt_off() in die frueheste init-Sektion
// eingebaut - dieser Code wird unmittelbar nach RESET ausgefuehrt.

static void wdt_off (void) __attribute__((section(".init0"),naked, used));
static void wdt_off (void) {MCUSR = 0; wdt_disable();}
      e8:	14 be       	out	0x34, r1	; 52
				"out __SREG__,__tmp_reg__"   "\n\t"
				: [TEMPREG] "=d" (temp_reg)
				: [WDTREG]  "n"  (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
				[WDCE_WDE]  "n"  ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE)))
				: "r0"
		);
      ea:	0f b6       	in	r0, 0x3f	; 63
      ec:	f8 94       	cli
      ee:	a8 95       	wdr
      f0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
      f4:	88 61       	ori	r24, 0x18	; 24
      f6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
      fa:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
      fe:	0f be       	out	0x3f, r0	; 63

00000100 <_ZL7wdt_offv>:
     100:	14 be       	out	0x34, r1	; 52
     102:	0f b6       	in	r0, 0x3f	; 63
     104:	f8 94       	cli
     106:	a8 95       	wdr
     108:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     10c:	88 61       	ori	r24, 0x18	; 24
     10e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     112:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     116:	0f be       	out	0x3f, r0	; 63

00000118 <_ZL7wdt_offv>:
     118:	14 be       	out	0x34, r1	; 52
     11a:	0f b6       	in	r0, 0x3f	; 63
     11c:	f8 94       	cli
     11e:	a8 95       	wdr
     120:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     124:	88 61       	ori	r24, 0x18	; 24
     126:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     12a:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     12e:	0f be       	out	0x3f, r0	; 63

00000130 <_ZL7wdt_offv>:
     130:	14 be       	out	0x34, r1	; 52
     132:	0f b6       	in	r0, 0x3f	; 63
     134:	f8 94       	cli
     136:	a8 95       	wdr
     138:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     13c:	88 61       	ori	r24, 0x18	; 24
     13e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     142:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     146:	0f be       	out	0x3f, r0	; 63

00000148 <_ZL7wdt_offv>:
     148:	14 be       	out	0x34, r1	; 52
     14a:	0f b6       	in	r0, 0x3f	; 63
     14c:	f8 94       	cli
     14e:	a8 95       	wdr
     150:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     154:	88 61       	ori	r24, 0x18	; 24
     156:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     15a:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     15e:	0f be       	out	0x3f, r0	; 63

00000160 <_ZL7wdt_offv>:
     160:	14 be       	out	0x34, r1	; 52
     162:	0f b6       	in	r0, 0x3f	; 63
     164:	f8 94       	cli
     166:	a8 95       	wdr
     168:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     16c:	88 61       	ori	r24, 0x18	; 24
     16e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     172:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     176:	0f be       	out	0x3f, r0	; 63

00000178 <_ZL7wdt_offv>:
     178:	14 be       	out	0x34, r1	; 52
     17a:	0f b6       	in	r0, 0x3f	; 63
     17c:	f8 94       	cli
     17e:	a8 95       	wdr
     180:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     184:	88 61       	ori	r24, 0x18	; 24
     186:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     18a:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     18e:	0f be       	out	0x3f, r0	; 63

00000190 <_ZL7wdt_offv>:
     190:	14 be       	out	0x34, r1	; 52
     192:	0f b6       	in	r0, 0x3f	; 63
     194:	f8 94       	cli
     196:	a8 95       	wdr
     198:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     19c:	88 61       	ori	r24, 0x18	; 24
     19e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     1a2:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     1a6:	0f be       	out	0x3f, r0	; 63
     1a8:	11 24       	eor	r1, r1
     1aa:	1f be       	out	0x3f, r1	; 63
     1ac:	cf ef       	ldi	r28, 0xFF	; 255
     1ae:	d1 e2       	ldi	r29, 0x21	; 33
     1b0:	de bf       	out	0x3e, r29	; 62
     1b2:	cd bf       	out	0x3d, r28	; 61
     1b4:	00 e0       	ldi	r16, 0x00	; 0
     1b6:	0c bf       	out	0x3c, r16	; 60

000001b8 <__do_copy_data>:
     1b8:	12 e0       	ldi	r17, 0x02	; 2
     1ba:	a0 e0       	ldi	r26, 0x00	; 0
     1bc:	b2 e0       	ldi	r27, 0x02	; 2
     1be:	e4 e2       	ldi	r30, 0x24	; 36
     1c0:	f3 e2       	ldi	r31, 0x23	; 35
     1c2:	00 e0       	ldi	r16, 0x00	; 0
     1c4:	0b bf       	out	0x3b, r16	; 59
     1c6:	02 c0       	rjmp	.+4      	; 0x1cc <__do_copy_data+0x14>
     1c8:	07 90       	elpm	r0, Z+
     1ca:	0d 92       	st	X+, r0
     1cc:	aa 3c       	cpi	r26, 0xCA	; 202
     1ce:	b1 07       	cpc	r27, r17
     1d0:	d9 f7       	brne	.-10     	; 0x1c8 <__do_copy_data+0x10>

000001d2 <__do_clear_bss>:
     1d2:	2c e1       	ldi	r18, 0x1C	; 28
     1d4:	aa ec       	ldi	r26, 0xCA	; 202
     1d6:	b2 e0       	ldi	r27, 0x02	; 2
     1d8:	01 c0       	rjmp	.+2      	; 0x1dc <.do_clear_bss_start>

000001da <.do_clear_bss_loop>:
     1da:	1d 92       	st	X+, r1

000001dc <.do_clear_bss_start>:
     1dc:	af 3b       	cpi	r26, 0xBF	; 191
     1de:	b2 07       	cpc	r27, r18
     1e0:	e1 f7       	brne	.-8      	; 0x1da <.do_clear_bss_loop>

000001e2 <__do_global_ctors>:
     1e2:	10 e0       	ldi	r17, 0x00	; 0
     1e4:	c4 e7       	ldi	r28, 0x74	; 116
     1e6:	d0 e0       	ldi	r29, 0x00	; 0
     1e8:	00 e0       	ldi	r16, 0x00	; 0
     1ea:	06 c0       	rjmp	.+12     	; 0x1f8 <__do_global_ctors+0x16>
     1ec:	21 97       	sbiw	r28, 0x01	; 1
     1ee:	01 09       	sbc	r16, r1
     1f0:	80 2f       	mov	r24, r16
     1f2:	fe 01       	movw	r30, r28
     1f4:	0e 94 88 11 	call	0x2310	; 0x2310 <__tablejump2__>
     1f8:	c2 37       	cpi	r28, 0x72	; 114
     1fa:	d1 07       	cpc	r29, r17
     1fc:	80 e0       	ldi	r24, 0x00	; 0
     1fe:	08 07       	cpc	r16, r24
     200:	a9 f7       	brne	.-22     	; 0x1ec <__do_global_ctors+0xa>
     202:	fc d0       	rcall	.+504    	; 0x3fc <main>
     204:	0c 94 90 11 	jmp	0x2320	; 0x2320 <_exit>

00000208 <__bad_interrupt>:
     208:	fb ce       	rjmp	.-522    	; 0x0 <__vectors>

0000020a <_Z9Blinker_1v>:
	}							
}

// Callback function for the Timer 1:
void Blinker_1() {
	if (counter1 < counter1_limit) counter1++;
     20a:	20 91 39 03 	lds	r18, 0x0339	; 0x800339 <counter1>
     20e:	30 91 3a 03 	lds	r19, 0x033A	; 0x80033a <counter1+0x1>
     212:	80 91 35 03 	lds	r24, 0x0335	; 0x800335 <counter1_limit>
     216:	90 91 36 03 	lds	r25, 0x0336	; 0x800336 <counter1_limit+0x1>
     21a:	28 17       	cp	r18, r24
     21c:	39 07       	cpc	r19, r25
     21e:	48 f4       	brcc	.+18     	; 0x232 <_Z9Blinker_1v+0x28>
     220:	80 91 39 03 	lds	r24, 0x0339	; 0x800339 <counter1>
     224:	90 91 3a 03 	lds	r25, 0x033A	; 0x80033a <counter1+0x1>
     228:	01 96       	adiw	r24, 0x01	; 1
     22a:	90 93 3a 03 	sts	0x033A, r25	; 0x80033a <counter1+0x1>
     22e:	80 93 39 03 	sts	0x0339, r24	; 0x800339 <counter1>
	
	if(counter1 >= counter1_limit) {
     232:	20 91 39 03 	lds	r18, 0x0339	; 0x800339 <counter1>
     236:	30 91 3a 03 	lds	r19, 0x033A	; 0x80033a <counter1+0x1>
     23a:	80 91 35 03 	lds	r24, 0x0335	; 0x800335 <counter1_limit>
     23e:	90 91 36 03 	lds	r25, 0x0336	; 0x800336 <counter1_limit+0x1>
     242:	28 17       	cp	r18, r24
     244:	39 07       	cpc	r19, r25
     246:	78 f0       	brcs	.+30     	; 0x266 <_Z9Blinker_1v+0x5c>
    /*! \brief Invertiere die durch bits spezifizierten Bits des Ports.
		\param [in] bits Bitmuster in active-high Logik. Default 0xFF. Bitpositionen, die
		            beim Port zur Eingabe konfiguriert sind, werden dabei ignoriert.
	*/
	inline void toggle (uint8_t bits=0xFF) {
		*(base + OUT_OFFSET) ^= (uint8_t)(OUT_MASK & bits);
     248:	ac e0       	ldi	r26, 0x0C	; 12
     24a:	b3 e0       	ldi	r27, 0x03	; 3
     24c:	ed 91       	ld	r30, X+
     24e:	fc 91       	ld	r31, X
     250:	11 97       	sbiw	r26, 0x01	; 1
     252:	92 81       	ldd	r25, Z+2	; 0x02
     254:	12 96       	adiw	r26, 0x02	; 2
     256:	8c 91       	ld	r24, X
     258:	8f 70       	andi	r24, 0x0F	; 15
     25a:	89 27       	eor	r24, r25
     25c:	82 83       	std	Z+2, r24	; 0x02
		leds.toggle(0b00001111);
		counter1 = 0;
     25e:	10 92 3a 03 	sts	0x033A, r1	; 0x80033a <counter1+0x1>
     262:	10 92 39 03 	sts	0x0339, r1	; 0x800339 <counter1>
     266:	08 95       	ret

00000268 <_Z9Blinker_2v>:
	}
}

// Callback function for the Timer 2:
void Blinker_2() {
	if (counter2 < counter2_limit) counter2++;
     268:	20 91 37 03 	lds	r18, 0x0337	; 0x800337 <counter2>
     26c:	30 91 38 03 	lds	r19, 0x0338	; 0x800338 <counter2+0x1>
     270:	80 91 33 03 	lds	r24, 0x0333	; 0x800333 <counter2_limit>
     274:	90 91 34 03 	lds	r25, 0x0334	; 0x800334 <counter2_limit+0x1>
     278:	28 17       	cp	r18, r24
     27a:	39 07       	cpc	r19, r25
     27c:	48 f4       	brcc	.+18     	; 0x290 <_Z9Blinker_2v+0x28>
     27e:	80 91 37 03 	lds	r24, 0x0337	; 0x800337 <counter2>
     282:	90 91 38 03 	lds	r25, 0x0338	; 0x800338 <counter2+0x1>
     286:	01 96       	adiw	r24, 0x01	; 1
     288:	90 93 38 03 	sts	0x0338, r25	; 0x800338 <counter2+0x1>
     28c:	80 93 37 03 	sts	0x0337, r24	; 0x800337 <counter2>
	
	if(counter2 >= counter2_limit) {
     290:	20 91 37 03 	lds	r18, 0x0337	; 0x800337 <counter2>
     294:	30 91 38 03 	lds	r19, 0x0338	; 0x800338 <counter2+0x1>
     298:	80 91 33 03 	lds	r24, 0x0333	; 0x800333 <counter2_limit>
     29c:	90 91 34 03 	lds	r25, 0x0334	; 0x800334 <counter2_limit+0x1>
     2a0:	28 17       	cp	r18, r24
     2a2:	39 07       	cpc	r19, r25
     2a4:	78 f0       	brcs	.+30     	; 0x2c4 <_Z9Blinker_2v+0x5c>
     2a6:	ac e0       	ldi	r26, 0x0C	; 12
     2a8:	b3 e0       	ldi	r27, 0x03	; 3
     2aa:	ed 91       	ld	r30, X+
     2ac:	fc 91       	ld	r31, X
     2ae:	11 97       	sbiw	r26, 0x01	; 1
     2b0:	92 81       	ldd	r25, Z+2	; 0x02
     2b2:	12 96       	adiw	r26, 0x02	; 2
     2b4:	8c 91       	ld	r24, X
     2b6:	80 7f       	andi	r24, 0xF0	; 240
     2b8:	89 27       	eor	r24, r25
     2ba:	82 83       	std	Z+2, r24	; 0x02
		leds.toggle(0b11110000);
		counter2 = 0;
     2bc:	10 92 38 03 	sts	0x0338, r1	; 0x800338 <counter2+0x1>
     2c0:	10 92 37 03 	sts	0x0337, r1	; 0x800337 <counter2>
     2c4:	08 95       	ret

000002c6 <_Z8Viewer_1v>:
		
		/*! \brief Liefere Anzahl aktuell noch freier Stellen der Queue. */
		uint8_t get_free_size ();

		/*! \brief Liefere Anzahl aktuell besetzter Stellen der Queue. */
		uint8_t get_used_size () {return count;};
     2c6:	80 91 d9 02 	lds	r24, 0x02D9	; 0x8002d9 <queue1+0x1>

void Viewer_1 () {				
	
	do {
		char c = 0;
		while(queue1.get_used_size()) {
     2ca:	88 23       	and	r24, r24
     2cc:	19 f1       	breq	.+70     	; 0x314 <_Z8Viewer_1v+0x4e>
			c = queue1.read();
     2ce:	88 ed       	ldi	r24, 0xD8	; 216
     2d0:	92 e0       	ldi	r25, 0x02	; 2
     2d2:	19 d2       	rcall	.+1074   	; 0x706 <_ZN12BoundedQueue4readEv>
     2d4:	c8 2f       	mov	r28, r24
			if(c == '1') {
     2d6:	81 33       	cpi	r24, 0x31	; 49
     2d8:	29 f4       	brne	.+10     	; 0x2e4 <_Z8Viewer_1v+0x1e>
				m = 0;
     2da:	10 92 28 03 	sts	0x0328, r1	; 0x800328 <m>
				n = 0;
     2de:	10 92 27 03 	sts	0x0327, r1	; 0x800327 <n>
     2e2:	07 c0       	rjmp	.+14     	; 0x2f2 <_Z8Viewer_1v+0x2c>
			} else if (c == '2') {
     2e4:	82 33       	cpi	r24, 0x32	; 50
     2e6:	29 f4       	brne	.+10     	; 0x2f2 <_Z8Viewer_1v+0x2c>
				m = 1;
     2e8:	81 e0       	ldi	r24, 0x01	; 1
     2ea:	80 93 28 03 	sts	0x0328, r24	; 0x800328 <m>
				n = 0;
     2ee:	10 92 27 03 	sts	0x0327, r1	; 0x800327 <n>
			}
			mein_display.set_pos(m,n);
     2f2:	40 91 27 03 	lds	r20, 0x0327	; 0x800327 <n>
     2f6:	60 91 28 03 	lds	r22, 0x0328	; 0x800328 <m>
     2fa:	8b e1       	ldi	r24, 0x1B	; 27
     2fc:	93 e0       	ldi	r25, 0x03	; 3
     2fe:	5a d4       	rcall	.+2228   	; 0xbb4 <_ZN3LCD7set_posEhh>
			mein_display.write_char(c);
     300:	6c 2f       	mov	r22, r28
     302:	8b e1       	ldi	r24, 0x1B	; 27
     304:	93 e0       	ldi	r25, 0x03	; 3
     306:	6d d5       	rcall	.+2778   	; 0xde2 <_ZN3LCD10write_charEc>
			n++;			
     308:	80 91 27 03 	lds	r24, 0x0327	; 0x800327 <n>
     30c:	8f 5f       	subi	r24, 0xFF	; 255
     30e:	80 93 27 03 	sts	0x0327, r24	; 0x800327 <n>
		}
		yield();		
     312:	d9 cf       	rjmp	.-78     	; 0x2c6 <_Z8Viewer_1v>
     314:	5d d6       	rcall	.+3258   	; 0xfd0 <_Z5yieldv>
}


void Viewer_1 () {				
	
	do {
     316:	d7 cf       	rjmp	.-82     	; 0x2c6 <_Z8Viewer_1v>

00000318 <_Z8Viewer_2v>:
     318:	80 91 cb 02 	lds	r24, 0x02CB	; 0x8002cb <__data_end+0x1>


void Viewer_2 () {					
	do {
		char c = 0;
		while(queue2.get_used_size()) {
     31c:	88 23       	and	r24, r24
     31e:	21 f1       	breq	.+72     	; 0x368 <_Z8Viewer_2v+0x50>
			c = queue2.read();
     320:	8a ec       	ldi	r24, 0xCA	; 202
     322:	92 e0       	ldi	r25, 0x02	; 2
     324:	f0 d1       	rcall	.+992    	; 0x706 <_ZN12BoundedQueue4readEv>
     326:	c8 2f       	mov	r28, r24
			
			
			if(c == '3') {
     328:	83 33       	cpi	r24, 0x33	; 51
     32a:	31 f4       	brne	.+12     	; 0x338 <_Z8Viewer_2v+0x20>
				p = 2;
     32c:	82 e0       	ldi	r24, 0x02	; 2
     32e:	80 93 26 03 	sts	0x0326, r24	; 0x800326 <p>
				q = 0;
     332:	10 92 25 03 	sts	0x0325, r1	; 0x800325 <q>
     336:	07 c0       	rjmp	.+14     	; 0x346 <_Z8Viewer_2v+0x2e>
				} else if (c == '4') {
     338:	84 33       	cpi	r24, 0x34	; 52
     33a:	29 f4       	brne	.+10     	; 0x346 <_Z8Viewer_2v+0x2e>
				p = 3;
     33c:	83 e0       	ldi	r24, 0x03	; 3
     33e:	80 93 26 03 	sts	0x0326, r24	; 0x800326 <p>
				q = 0;
     342:	10 92 25 03 	sts	0x0325, r1	; 0x800325 <q>
				} 				
			mein_display.set_pos(p,q);
     346:	40 91 25 03 	lds	r20, 0x0325	; 0x800325 <q>
     34a:	60 91 26 03 	lds	r22, 0x0326	; 0x800326 <p>
     34e:	8b e1       	ldi	r24, 0x1B	; 27
     350:	93 e0       	ldi	r25, 0x03	; 3
     352:	30 d4       	rcall	.+2144   	; 0xbb4 <_ZN3LCD7set_posEhh>
			mein_display.write_char(c);
     354:	6c 2f       	mov	r22, r28
     356:	8b e1       	ldi	r24, 0x1B	; 27
     358:	93 e0       	ldi	r25, 0x03	; 3
     35a:	43 d5       	rcall	.+2694   	; 0xde2 <_ZN3LCD10write_charEc>
			q++;			
     35c:	80 91 25 03 	lds	r24, 0x0325	; 0x800325 <q>
     360:	8f 5f       	subi	r24, 0xFF	; 255
     362:	80 93 25 03 	sts	0x0325, r24	; 0x800325 <q>
		}
		yield();
     366:	d8 cf       	rjmp	.-80     	; 0x318 <_Z8Viewer_2v>
     368:	33 d6       	rcall	.+3174   	; 0xfd0 <_Z5yieldv>
	} while(1);
}


void Viewer_2 () {					
	do {
     36a:	d6 cf       	rjmp	.-84     	; 0x318 <_Z8Viewer_2v>

0000036c <_Z41__static_initialization_and_destruction_0ii>:
	
	if(counter2 >= counter2_limit) {
		leds.toggle(0b11110000);
		counter2 = 0;
	}
     36c:	ef 92       	push	r14
     36e:	ff 92       	push	r15
     370:	0f 93       	push	r16
     372:	1f 93       	push	r17
     374:	01 97       	sbiw	r24, 0x01	; 1
     376:	09 f0       	breq	.+2      	; 0x37a <_Z41__static_initialization_and_destruction_0ii+0xe>
     378:	3c c0       	rjmp	.+120    	; 0x3f2 <_Z41__static_initialization_and_destruction_0ii+0x86>
     37a:	6f 3f       	cpi	r22, 0xFF	; 255
     37c:	7f 4f       	sbci	r23, 0xFF	; 255
     37e:	c9 f5       	brne	.+114    	; 0x3f2 <_Z41__static_initialization_and_destruction_0ii+0x86>

void string_write_loop(char *input, BoundedQueue *pointer);	// Funktion zum Schreiben der Strings im Loop
void toggle_task (uint8_t task_id);

// Initializations
LCD mein_display   (PC, LCD_Type_40x4, DISPLAY_ON | CURSOR_ON | BLINK_ON | WRAPPING_ON);
     380:	2f e8       	ldi	r18, 0x8F	; 143
     382:	49 e0       	ldi	r20, 0x09	; 9
     384:	62 e0       	ldi	r22, 0x02	; 2
     386:	8b e1       	ldi	r24, 0x1B	; 27
     388:	93 e0       	ldi	r25, 0x03	; 3
     38a:	f8 d4       	rcall	.+2544   	; 0xd7c <_ZN3LCDC1Eh10LCD_Type_th>
DigiPortIRPT keys(PK, SET_IN_PORT);
     38c:	00 e0       	ldi	r16, 0x00	; 0
     38e:	10 e0       	ldi	r17, 0x00	; 0
     390:	20 e0       	ldi	r18, 0x00	; 0
     392:	40 e0       	ldi	r20, 0x00	; 0
     394:	69 e0       	ldi	r22, 0x09	; 9
     396:	80 e1       	ldi	r24, 0x10	; 16
     398:	93 e0       	ldi	r25, 0x03	; 3
     39a:	da d2       	rcall	.+1460   	; 0x950 <_ZN12DigiPortIRPTC1EhhhPFvvE>
DigiPortRaw	 leds   (PA, SET_OUT_PORT);
     39c:	20 e0       	ldi	r18, 0x00	; 0
     39e:	4f ef       	ldi	r20, 0xFF	; 255
     3a0:	60 e0       	ldi	r22, 0x00	; 0
     3a2:	8c e0       	ldi	r24, 0x0C	; 12
     3a4:	93 e0       	ldi	r25, 0x03	; 3
     3a6:	19 d2       	rcall	.+1074   	; 0x7da <_ZN11DigiPortRawC1Ehhh>
Timer16	tick_1	    (TC1, Blinker_1);
     3a8:	e1 2c       	mov	r14, r1
     3aa:	f1 2c       	mov	r15, r1
     3ac:	20 e0       	ldi	r18, 0x00	; 0
     3ae:	30 e0       	ldi	r19, 0x00	; 0
     3b0:	45 e0       	ldi	r20, 0x05	; 5
     3b2:	51 e0       	ldi	r21, 0x01	; 1
     3b4:	61 e0       	ldi	r22, 0x01	; 1
     3b6:	8a ef       	ldi	r24, 0xFA	; 250
     3b8:	92 e0       	ldi	r25, 0x02	; 2
     3ba:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <_ZN7Timer16C1EhPFvvES1_S1_S1_>
Timer16 tick_2	    (TC3, Blinker_2);
     3be:	20 e0       	ldi	r18, 0x00	; 0
     3c0:	30 e0       	ldi	r19, 0x00	; 0
     3c2:	44 e3       	ldi	r20, 0x34	; 52
     3c4:	51 e0       	ldi	r21, 0x01	; 1
     3c6:	63 e0       	ldi	r22, 0x03	; 3
     3c8:	88 ee       	ldi	r24, 0xE8	; 232
     3ca:	92 e0       	ldi	r25, 0x02	; 2
     3cc:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <_ZN7Timer16C1EhPFvvES1_S1_S1_>
class BinarySemaphor {
	private:
		uint8_t owner;
		
	public:
		BinarySemaphor () : owner(0) {};
     3d0:	10 92 e7 02 	sts	0x02E7, r1	; 0x8002e7 <semaphor1>
     3d4:	10 92 e6 02 	sts	0x02E6, r1	; 0x8002e6 <semaphor2>
		     \param [in]  m Steuert das Verhalten bei Vollaufen der Queue. 
			 
			 Im Modus NO_OVERWRITE lehnt die Queue weitere Schreibevorgaenge ab (der Aufruf 
			 scheitert), wenn die Queue voll ist. Im Modus ALLOW_OVERWRITE wird in diesem
			 Fall der aelteste Eintrag der Queue ueberschrieben. */
	    BoundedQueue (uint8_t m = NO_OVERWRITE) {read_pos = 0; write_pos = 0; count = 0; mode = m;};
     3d8:	e8 ed       	ldi	r30, 0xD8	; 216
     3da:	f2 e0       	ldi	r31, 0x02	; 2
     3dc:	13 82       	std	Z+3, r1	; 0x03
     3de:	12 82       	std	Z+2, r1	; 0x02
     3e0:	11 82       	std	Z+1, r1	; 0x01
     3e2:	81 e0       	ldi	r24, 0x01	; 1
     3e4:	80 83       	st	Z, r24
     3e6:	ea ec       	ldi	r30, 0xCA	; 202
     3e8:	f2 e0       	ldi	r31, 0x02	; 2
     3ea:	13 82       	std	Z+3, r1	; 0x03
     3ec:	12 82       	std	Z+2, r1	; 0x02
     3ee:	11 82       	std	Z+1, r1	; 0x01
     3f0:	80 83       	st	Z, r24
	
	if(counter2 >= counter2_limit) {
		leds.toggle(0b11110000);
		counter2 = 0;
	}
     3f2:	1f 91       	pop	r17
     3f4:	0f 91       	pop	r16
     3f6:	ff 90       	pop	r15
     3f8:	ef 90       	pop	r14
     3fa:	08 95       	ret

000003fc <main>:
BinarySemaphor semaphor2;
BoundedQueue   queue1;
BoundedQueue   queue2;
int main(void)
{
	task_id [0] = task_insert(Task_1,High);
     3fc:	60 e0       	ldi	r22, 0x00	; 0
     3fe:	8f e8       	ldi	r24, 0x8F	; 143
     400:	92 e0       	ldi	r25, 0x02	; 2
     402:	2c d5       	rcall	.+2648   	; 0xe5c <_Z11task_insertPFvvE8Priority>
     404:	cd e2       	ldi	r28, 0x2D	; 45
     406:	d3 e0       	ldi	r29, 0x03	; 3
     408:	88 83       	st	Y, r24
	task_id [1] = task_insert(Task_2,Medium);
     40a:	62 e0       	ldi	r22, 0x02	; 2
     40c:	86 ea       	ldi	r24, 0xA6	; 166
     40e:	92 e0       	ldi	r25, 0x02	; 2
     410:	25 d5       	rcall	.+2634   	; 0xe5c <_Z11task_insertPFvvE8Priority>
     412:	89 83       	std	Y+1, r24	; 0x01
	task_id [2] = task_insert(Task_3,Low);
     414:	64 e0       	ldi	r22, 0x04	; 4
     416:	8d eb       	ldi	r24, 0xBD	; 189
     418:	92 e0       	ldi	r25, 0x02	; 2
     41a:	20 d5       	rcall	.+2624   	; 0xe5c <_Z11task_insertPFvvE8Priority>
     41c:	8a 83       	std	Y+2, r24	; 0x02
	task_id [3] = task_insert(Task_4,Low);
     41e:	64 e0       	ldi	r22, 0x04	; 4
     420:	84 ed       	ldi	r24, 0xD4	; 212
     422:	92 e0       	ldi	r25, 0x02	; 2
     424:	1b d5       	rcall	.+2614   	; 0xe5c <_Z11task_insertPFvvE8Priority>
     426:	8b 83       	std	Y+3, r24	; 0x03
	task_id [4] = task_insert(Viewer_1);
     428:	60 e0       	ldi	r22, 0x00	; 0
     42a:	83 e6       	ldi	r24, 0x63	; 99
     42c:	91 e0       	ldi	r25, 0x01	; 1
     42e:	16 d5       	rcall	.+2604   	; 0xe5c <_Z11task_insertPFvvE8Priority>
     430:	8c 83       	std	Y+4, r24	; 0x04
	task_id [5] = task_insert(Viewer_2);
     432:	60 e0       	ldi	r22, 0x00	; 0
     434:	8c e8       	ldi	r24, 0x8C	; 140
     436:	91 e0       	ldi	r25, 0x01	; 1
     438:	11 d5       	rcall	.+2594   	; 0xe5c <_Z11task_insertPFvvE8Priority>
     43a:	8d 83       	std	Y+5, r24	; 0x05
	
	task_insert(Task_read_keys);
     43c:	60 e0       	ldi	r22, 0x00	; 0
     43e:	8b ee       	ldi	r24, 0xEB	; 235
     440:	92 e0       	ldi	r25, 0x02	; 2
     442:	0c d5       	rcall	.+2584   	; 0xe5c <_Z11task_insertPFvvE8Priority>
     444:	ee 24       	eor	r14, r14
	
	tick_1.start_ms(100);
     446:	ea 94       	dec	r14
     448:	00 e0       	ldi	r16, 0x00	; 0
     44a:	10 e0       	ldi	r17, 0x00	; 0
     44c:	20 e0       	ldi	r18, 0x00	; 0
     44e:	30 e0       	ldi	r19, 0x00	; 0
     450:	40 e0       	ldi	r20, 0x00	; 0
     452:	50 e0       	ldi	r21, 0x00	; 0
     454:	64 e6       	ldi	r22, 0x64	; 100
     456:	70 e0       	ldi	r23, 0x00	; 0
     458:	8a ef       	ldi	r24, 0xFA	; 250
     45a:	92 e0       	ldi	r25, 0x02	; 2
     45c:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <_ZN7Timer168start_msEjjjjh>
     460:	20 e0       	ldi	r18, 0x00	; 0
	tick_2.start_ms(200);
     462:	30 e0       	ldi	r19, 0x00	; 0
     464:	40 e0       	ldi	r20, 0x00	; 0
     466:	50 e0       	ldi	r21, 0x00	; 0
     468:	68 ec       	ldi	r22, 0xC8	; 200
     46a:	70 e0       	ldi	r23, 0x00	; 0
     46c:	88 ee       	ldi	r24, 0xE8	; 232
     46e:	92 e0       	ldi	r25, 0x02	; 2
     470:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <_ZN7Timer168start_msEjjjjh>
	
	kernel();
     474:	60 e0       	ldi	r22, 0x00	; 0
     476:	70 e0       	ldi	r23, 0x00	; 0
     478:	80 e0       	ldi	r24, 0x00	; 0
     47a:	94 d5       	rcall	.+2856   	; 0xfa4 <_Z6kernel14SchedulingTypePFvhE>

0000047c <_Z17string_write_loopPcP12BoundedQueue>:
     47c:	ef 92       	push	r14
		yield();
	}
}


void string_write_loop (char *input, BoundedQueue *pointer) {
     47e:	ff 92       	push	r15
     480:	0f 93       	push	r16
     482:	1f 93       	push	r17
     484:	cf 93       	push	r28
     486:	8c 01       	movw	r16, r24
     488:	7b 01       	movw	r14, r22
	uint8_t i = 0;
     48a:	c0 e0       	ldi	r28, 0x00	; 0
	while(i < strlen(input) && pointer -> write(input[i])){
     48c:	8c 2f       	mov	r24, r28
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	f8 01       	movw	r30, r16
     492:	01 90       	ld	r0, Z+
     494:	00 20       	and	r0, r0
     496:	e9 f7       	brne	.-6      	; 0x492 <_Z17string_write_loopPcP12BoundedQueue+0x16>
     498:	31 97       	sbiw	r30, 0x01	; 1
     49a:	e0 1b       	sub	r30, r16
     49c:	f1 0b       	sbc	r31, r17
     49e:	8e 17       	cp	r24, r30
     4a0:	9f 07       	cpc	r25, r31
     4a2:	38 f4       	brcc	.+14     	; 0x4b2 <_Z17string_write_loopPcP12BoundedQueue+0x36>
     4a4:	f8 01       	movw	r30, r16
     4a6:	e8 0f       	add	r30, r24
     4a8:	f9 1f       	adc	r31, r25
     4aa:	60 81       	ld	r22, Z
     4ac:	c7 01       	movw	r24, r14
     4ae:	43 d1       	rcall	.+646    	; 0x736 <_ZN12BoundedQueue5writeEh>
     4b0:	01 c0       	rjmp	.+2      	; 0x4b4 <_Z17string_write_loopPcP12BoundedQueue+0x38>
     4b2:	80 e0       	ldi	r24, 0x00	; 0
     4b4:	88 23       	and	r24, r24
     4b6:	19 f0       	breq	.+6      	; 0x4be <_Z17string_write_loopPcP12BoundedQueue+0x42>
			i++;
			yield();
     4b8:	cf 5f       	subi	r28, 0xFF	; 255
     4ba:	8a d5       	rcall	.+2836   	; 0xfd0 <_Z5yieldv>
}


void string_write_loop (char *input, BoundedQueue *pointer) {
	uint8_t i = 0;
	while(i < strlen(input) && pointer -> write(input[i])){
     4bc:	e7 cf       	rjmp	.-50     	; 0x48c <_Z17string_write_loopPcP12BoundedQueue+0x10>
			i++;
			yield();
	} 
}
     4be:	cf 91       	pop	r28
     4c0:	1f 91       	pop	r17
     4c2:	0f 91       	pop	r16
     4c4:	ff 90       	pop	r15
     4c6:	ef 90       	pop	r14
     4c8:	08 95       	ret

000004ca <_Z11toggle_taskh>:


void toggle_task (uint8_t task_nr)
{
     4ca:	cf 93       	push	r28
     4cc:	df 93       	push	r29
	if (!is_active(task_id[task_nr]))	{											
     4ce:	c8 2f       	mov	r28, r24
     4d0:	d0 e0       	ldi	r29, 0x00	; 0
     4d2:	fe 01       	movw	r30, r28
     4d4:	e3 5d       	subi	r30, 0xD3	; 211
     4d6:	fc 4f       	sbci	r31, 0xFC	; 252
     4d8:	80 81       	ld	r24, Z
     4da:	4f d5       	rcall	.+2718   	; 0xf7a <_Z9is_activeh>
     4dc:	81 11       	cpse	r24, r1
     4de:	05 c0       	rjmp	.+10     	; 0x4ea <_Z11toggle_taskh+0x20>
		activate(task_id[task_nr]);									
     4e0:	c3 5d       	subi	r28, 0xD3	; 211
     4e2:	dc 4f       	sbci	r29, 0xFC	; 252
     4e4:	88 81       	ld	r24, Y
     4e6:	25 d5       	rcall	.+2634   	; 0xf32 <_Z8activateh>
     4e8:	17 c0       	rjmp	.+46     	; 0x518 <_Z11toggle_taskh+0x4e>
	}else if (task_toggle_request[task_nr] == true){
     4ea:	fe 01       	movw	r30, r28
     4ec:	e7 5d       	subi	r30, 0xD7	; 215
     4ee:	fc 4f       	sbci	r31, 0xFC	; 252
     4f0:	80 81       	ld	r24, Z
     4f2:	81 30       	cpi	r24, 0x01	; 1
     4f4:	49 f4       	brne	.+18     	; 0x508 <_Z11toggle_taskh+0x3e>
		deactivate(task_id[task_nr]);
     4f6:	fe 01       	movw	r30, r28
     4f8:	e3 5d       	subi	r30, 0xD3	; 211
     4fa:	fc 4f       	sbci	r31, 0xFC	; 252
     4fc:	80 81       	ld	r24, Z
     4fe:	94 d5       	rcall	.+2856   	; 0x1028 <_Z10deactivateh>
		task_toggle_request[task_nr] = false;
     500:	c7 5d       	subi	r28, 0xD7	; 215
     502:	dc 4f       	sbci	r29, 0xFC	; 252
     504:	18 82       	st	Y, r1
     506:	08 c0       	rjmp	.+16     	; 0x518 <_Z11toggle_taskh+0x4e>
	}else if (task_toggle_request[task_nr] == false){
     508:	fe 01       	movw	r30, r28
     50a:	e7 5d       	subi	r30, 0xD7	; 215
     50c:	fc 4f       	sbci	r31, 0xFC	; 252
     50e:	80 81       	ld	r24, Z
     510:	81 11       	cpse	r24, r1
     512:	02 c0       	rjmp	.+4      	; 0x518 <_Z11toggle_taskh+0x4e>
		task_toggle_request[task_nr] = true;
     514:	81 e0       	ldi	r24, 0x01	; 1
     516:	80 83       	st	Z, r24
	}							
}
     518:	df 91       	pop	r29
     51a:	cf 91       	pop	r28
     51c:	08 95       	ret

0000051e <_Z6Task_1v>:
}

// Implementation for the first task
void Task_1() {
	do {
		semaphor1.wait_aquire();
     51e:	87 ee       	ldi	r24, 0xE7	; 231
     520:	92 e0       	ldi	r25, 0x02	; 2
     522:	be d0       	rcall	.+380    	; 0x6a0 <_ZN14BinarySemaphor11wait_aquireEv>
		queue1.write('1');
     524:	61 e3       	ldi	r22, 0x31	; 49
     526:	88 ed       	ldi	r24, 0xD8	; 216
     528:	92 e0       	ldi	r25, 0x02	; 2
     52a:	05 d1       	rcall	.+522    	; 0x736 <_ZN12BoundedQueue5writeEh>
		string_write_loop(string_1, &queue1);
     52c:	68 ed       	ldi	r22, 0xD8	; 216
     52e:	72 e0       	ldi	r23, 0x02	; 2
     530:	8b e1       	ldi	r24, 0x1B	; 27
     532:	92 e0       	ldi	r25, 0x02	; 2
     534:	a3 df       	rcall	.-186    	; 0x47c <_Z17string_write_loopPcP12BoundedQueue>
		semaphor1.release();
     536:	87 ee       	ldi	r24, 0xE7	; 231
     538:	92 e0       	ldi	r25, 0x02	; 2
     53a:	ce d0       	rcall	.+412    	; 0x6d8 <_ZN14BinarySemaphor7releaseEv>
     53c:	80 91 29 03 	lds	r24, 0x0329	; 0x800329 <task_toggle_request>
		if (task_toggle_request[0]){toggle_task(0);}
     540:	88 23       	and	r24, r24
     542:	11 f0       	breq	.+4      	; 0x548 <_Z6Task_1v+0x2a>
     544:	80 e0       	ldi	r24, 0x00	; 0
     546:	c1 df       	rcall	.-126    	; 0x4ca <_Z11toggle_taskh>
		yield();
     548:	43 d5       	rcall	.+2694   	; 0xfd0 <_Z5yieldv>
     54a:	e9 cf       	rjmp	.-46     	; 0x51e <_Z6Task_1v>

0000054c <_Z6Task_2v>:
	
}

// Implementation for the first task
void Task_1() {
	do {
     54c:	87 ee       	ldi	r24, 0xE7	; 231


// Implementation for the second task
void Task_2() {
	do {
		semaphor1.wait_aquire();
     54e:	92 e0       	ldi	r25, 0x02	; 2
     550:	a7 d0       	rcall	.+334    	; 0x6a0 <_ZN14BinarySemaphor11wait_aquireEv>
		queue1.write('2');
     552:	62 e3       	ldi	r22, 0x32	; 50
     554:	88 ed       	ldi	r24, 0xD8	; 216
     556:	92 e0       	ldi	r25, 0x02	; 2
     558:	ee d0       	rcall	.+476    	; 0x736 <_ZN12BoundedQueue5writeEh>
		string_write_loop(string_2, &queue1);
     55a:	68 ed       	ldi	r22, 0xD8	; 216
     55c:	72 e0       	ldi	r23, 0x02	; 2
     55e:	82 e1       	ldi	r24, 0x12	; 18
     560:	92 e0       	ldi	r25, 0x02	; 2
     562:	8c df       	rcall	.-232    	; 0x47c <_Z17string_write_loopPcP12BoundedQueue>
		semaphor1.release();
     564:	87 ee       	ldi	r24, 0xE7	; 231
     566:	92 e0       	ldi	r25, 0x02	; 2
     568:	b7 d0       	rcall	.+366    	; 0x6d8 <_ZN14BinarySemaphor7releaseEv>
     56a:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <task_toggle_request+0x1>
		if (task_toggle_request[1]){toggle_task(1);}
     56e:	88 23       	and	r24, r24
     570:	11 f0       	breq	.+4      	; 0x576 <_Z6Task_2v+0x2a>
     572:	81 e0       	ldi	r24, 0x01	; 1
     574:	aa df       	rcall	.-172    	; 0x4ca <_Z11toggle_taskh>
		yield();
     576:	2c d5       	rcall	.+2648   	; 0xfd0 <_Z5yieldv>
     578:	e9 cf       	rjmp	.-46     	; 0x54c <_Z6Task_2v>

0000057a <_Z6Task_3v>:
}


// Implementation for the second task
void Task_2() {
	do {
     57a:	86 ee       	ldi	r24, 0xE6	; 230
}

// Implementation for the third task
void Task_3() {
	do {
		semaphor2.wait_aquire();
     57c:	92 e0       	ldi	r25, 0x02	; 2
     57e:	90 d0       	rcall	.+288    	; 0x6a0 <_ZN14BinarySemaphor11wait_aquireEv>
		queue2.write('3');
     580:	63 e3       	ldi	r22, 0x33	; 51
     582:	8a ec       	ldi	r24, 0xCA	; 202
     584:	92 e0       	ldi	r25, 0x02	; 2
     586:	d7 d0       	rcall	.+430    	; 0x736 <_ZN12BoundedQueue5writeEh>
		string_write_loop(string_3, &queue2);
     588:	6a ec       	ldi	r22, 0xCA	; 202
     58a:	72 e0       	ldi	r23, 0x02	; 2
     58c:	89 e0       	ldi	r24, 0x09	; 9
     58e:	92 e0       	ldi	r25, 0x02	; 2
     590:	75 df       	rcall	.-278    	; 0x47c <_Z17string_write_loopPcP12BoundedQueue>
		semaphor2.release();
     592:	86 ee       	ldi	r24, 0xE6	; 230
     594:	92 e0       	ldi	r25, 0x02	; 2
     596:	a0 d0       	rcall	.+320    	; 0x6d8 <_ZN14BinarySemaphor7releaseEv>
     598:	80 91 2b 03 	lds	r24, 0x032B	; 0x80032b <task_toggle_request+0x2>
		if (task_toggle_request[2]){toggle_task(2);}
     59c:	88 23       	and	r24, r24
     59e:	11 f0       	breq	.+4      	; 0x5a4 <_Z6Task_3v+0x2a>
     5a0:	82 e0       	ldi	r24, 0x02	; 2
     5a2:	93 df       	rcall	.-218    	; 0x4ca <_Z11toggle_taskh>
		yield();
     5a4:	15 d5       	rcall	.+2602   	; 0xfd0 <_Z5yieldv>
     5a6:	e9 cf       	rjmp	.-46     	; 0x57a <_Z6Task_3v>

000005a8 <_Z6Task_4v>:
	} while(1);
}

// Implementation for the third task
void Task_3() {
	do {
     5a8:	86 ee       	ldi	r24, 0xE6	; 230
}

// Implementation for the fourth task
void Task_4() {
	do {
		semaphor2.wait_aquire();
     5aa:	92 e0       	ldi	r25, 0x02	; 2
     5ac:	79 d0       	rcall	.+242    	; 0x6a0 <_ZN14BinarySemaphor11wait_aquireEv>
		queue2.write('4');
     5ae:	64 e3       	ldi	r22, 0x34	; 52
     5b0:	8a ec       	ldi	r24, 0xCA	; 202
     5b2:	92 e0       	ldi	r25, 0x02	; 2
     5b4:	c0 d0       	rcall	.+384    	; 0x736 <_ZN12BoundedQueue5writeEh>
		string_write_loop(string_4, &queue2);
     5b6:	6a ec       	ldi	r22, 0xCA	; 202
     5b8:	72 e0       	ldi	r23, 0x02	; 2
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	92 e0       	ldi	r25, 0x02	; 2
     5be:	5e df       	rcall	.-324    	; 0x47c <_Z17string_write_loopPcP12BoundedQueue>
		semaphor2.release();
     5c0:	86 ee       	ldi	r24, 0xE6	; 230
     5c2:	92 e0       	ldi	r25, 0x02	; 2
     5c4:	89 d0       	rcall	.+274    	; 0x6d8 <_ZN14BinarySemaphor7releaseEv>
     5c6:	80 91 2c 03 	lds	r24, 0x032C	; 0x80032c <task_toggle_request+0x3>
		if (task_toggle_request[3]){toggle_task(3);}
     5ca:	88 23       	and	r24, r24
     5cc:	11 f0       	breq	.+4      	; 0x5d2 <_Z6Task_4v+0x2a>
     5ce:	83 e0       	ldi	r24, 0x03	; 3
     5d0:	7c df       	rcall	.-264    	; 0x4ca <_Z11toggle_taskh>
		yield();
     5d2:	fe d4       	rcall	.+2556   	; 0xfd0 <_Z5yieldv>
     5d4:	e9 cf       	rjmp	.-46     	; 0x5a8 <_Z6Task_4v>

000005d6 <_Z14Task_read_keysv>:
	} while(1);
}

// Implementation for the fourth task
void Task_4() {
	do {
     5d6:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <keys+0x9>
		einem der selektierten Pins eine fallende Flanke erkannt wurde. Der Funktionswert
		spezifiziert in active high Logik diejenigen Pins mit erkannter Flanke.
	*/
	inline uint8_t wait_falling_edge (uint8_t mask=0xFF) {
		uint8_t result;
		while(!(result = (uint8_t)(mask & falling_edge_detected)));
     5da:	88 23       	and	r24, r24
     5dc:	e1 f3       	breq	.-8      	; 0x5d6 <_Z14Task_read_keysv>
		falling_edge_detected &= (uint8_t)(~mask);
     5de:	e0 e1       	ldi	r30, 0x10	; 16
     5e0:	f3 e0       	ldi	r31, 0x03	; 3
     5e2:	91 85       	ldd	r25, Z+9	; 0x09
     5e4:	11 86       	std	Z+9, r1	; 0x09
}

void Task_read_keys()
{
	while (1){
		switch(keys.wait_falling_edge()){			//Keys einlesen
     5e6:	88 30       	cpi	r24, 0x08	; 8
     5e8:	e9 f0       	breq	.+58     	; 0x624 <_Z14Task_read_keysv+0x4e>
     5ea:	40 f4       	brcc	.+16     	; 0x5fc <_Z14Task_read_keysv+0x26>
     5ec:	82 30       	cpi	r24, 0x02	; 2
     5ee:	a1 f0       	breq	.+40     	; 0x618 <_Z14Task_read_keysv+0x42>
     5f0:	84 30       	cpi	r24, 0x04	; 4
     5f2:	a9 f0       	breq	.+42     	; 0x61e <_Z14Task_read_keysv+0x48>
     5f4:	81 30       	cpi	r24, 0x01	; 1
     5f6:	09 f0       	breq	.+2      	; 0x5fa <_Z14Task_read_keysv+0x24>
     5f8:	4b c0       	rjmp	.+150    	; 0x690 <_Z14Task_read_keysv+0xba>
     5fa:	0b c0       	rjmp	.+22     	; 0x612 <_Z14Task_read_keysv+0x3c>
     5fc:	80 32       	cpi	r24, 0x20	; 32
     5fe:	f9 f0       	breq	.+62     	; 0x63e <_Z14Task_read_keysv+0x68>
     600:	18 f4       	brcc	.+6      	; 0x608 <_Z14Task_read_keysv+0x32>
     602:	80 31       	cpi	r24, 0x10	; 16
     604:	91 f0       	breq	.+36     	; 0x62a <_Z14Task_read_keysv+0x54>
     606:	44 c0       	rjmp	.+136    	; 0x690 <_Z14Task_read_keysv+0xba>
     608:	80 34       	cpi	r24, 0x40	; 64
     60a:	49 f1       	breq	.+82     	; 0x65e <_Z14Task_read_keysv+0x88>
     60c:	80 38       	cpi	r24, 0x80	; 128
     60e:	89 f1       	breq	.+98     	; 0x672 <_Z14Task_read_keysv+0x9c>
     610:	3f c0       	rjmp	.+126    	; 0x690 <_Z14Task_read_keysv+0xba>
			case 0b00000001: toggle_task(0); break;
     612:	80 e0       	ldi	r24, 0x00	; 0
     614:	5a df       	rcall	.-332    	; 0x4ca <_Z11toggle_taskh>
     616:	3c c0       	rjmp	.+120    	; 0x690 <_Z14Task_read_keysv+0xba>
			case 0b00000010: toggle_task(1); break;
     618:	81 e0       	ldi	r24, 0x01	; 1
     61a:	57 df       	rcall	.-338    	; 0x4ca <_Z11toggle_taskh>
     61c:	39 c0       	rjmp	.+114    	; 0x690 <_Z14Task_read_keysv+0xba>
			case 0b00000100: toggle_task(2); break;
     61e:	82 e0       	ldi	r24, 0x02	; 2
     620:	54 df       	rcall	.-344    	; 0x4ca <_Z11toggle_taskh>
     622:	36 c0       	rjmp	.+108    	; 0x690 <_Z14Task_read_keysv+0xba>
			case 0b00001000: toggle_task(3); break;
     624:	83 e0       	ldi	r24, 0x03	; 3
     626:	51 df       	rcall	.-350    	; 0x4ca <_Z11toggle_taskh>
     628:	33 c0       	rjmp	.+102    	; 0x690 <_Z14Task_read_keysv+0xba>
     62a:	80 91 35 03 	lds	r24, 0x0335	; 0x800335 <counter1_limit>
			case 0b00010000: counter1_limit += 2; break;
     62e:	90 91 36 03 	lds	r25, 0x0336	; 0x800336 <counter1_limit+0x1>
     632:	02 96       	adiw	r24, 0x02	; 2
     634:	90 93 36 03 	sts	0x0336, r25	; 0x800336 <counter1_limit+0x1>
     638:	80 93 35 03 	sts	0x0335, r24	; 0x800335 <counter1_limit>
     63c:	29 c0       	rjmp	.+82     	; 0x690 <_Z14Task_read_keysv+0xba>
     63e:	80 91 35 03 	lds	r24, 0x0335	; 0x800335 <counter1_limit>
			case 0b00100000: if (counter1_limit > 0) counter1_limit -= 2; break;
     642:	90 91 36 03 	lds	r25, 0x0336	; 0x800336 <counter1_limit+0x1>
     646:	89 2b       	or	r24, r25
     648:	19 f1       	breq	.+70     	; 0x690 <_Z14Task_read_keysv+0xba>
     64a:	80 91 35 03 	lds	r24, 0x0335	; 0x800335 <counter1_limit>
     64e:	90 91 36 03 	lds	r25, 0x0336	; 0x800336 <counter1_limit+0x1>
     652:	02 97       	sbiw	r24, 0x02	; 2
     654:	90 93 36 03 	sts	0x0336, r25	; 0x800336 <counter1_limit+0x1>
     658:	80 93 35 03 	sts	0x0335, r24	; 0x800335 <counter1_limit>
     65c:	19 c0       	rjmp	.+50     	; 0x690 <_Z14Task_read_keysv+0xba>
     65e:	80 91 33 03 	lds	r24, 0x0333	; 0x800333 <counter2_limit>
			case 0b01000000: counter2_limit += 2; break;
     662:	90 91 34 03 	lds	r25, 0x0334	; 0x800334 <counter2_limit+0x1>
     666:	02 96       	adiw	r24, 0x02	; 2
     668:	90 93 34 03 	sts	0x0334, r25	; 0x800334 <counter2_limit+0x1>
     66c:	80 93 33 03 	sts	0x0333, r24	; 0x800333 <counter2_limit>
     670:	0f c0       	rjmp	.+30     	; 0x690 <_Z14Task_read_keysv+0xba>
     672:	80 91 33 03 	lds	r24, 0x0333	; 0x800333 <counter2_limit>
			case 0b10000000: if (counter2_limit > 0) counter2_limit -= 2; break;
     676:	90 91 34 03 	lds	r25, 0x0334	; 0x800334 <counter2_limit+0x1>
     67a:	89 2b       	or	r24, r25
     67c:	49 f0       	breq	.+18     	; 0x690 <_Z14Task_read_keysv+0xba>
     67e:	80 91 33 03 	lds	r24, 0x0333	; 0x800333 <counter2_limit>
     682:	90 91 34 03 	lds	r25, 0x0334	; 0x800334 <counter2_limit+0x1>
     686:	02 97       	sbiw	r24, 0x02	; 2
     688:	90 93 34 03 	sts	0x0334, r25	; 0x800334 <counter2_limit+0x1>
     68c:	80 93 33 03 	sts	0x0333, r24	; 0x800333 <counter2_limit>
			default:;
		}
		yield();
     690:	9f d4       	rcall	.+2366   	; 0xfd0 <_Z5yieldv>
     692:	a1 cf       	rjmp	.-190    	; 0x5d6 <_Z14Task_read_keysv>

00000694 <_GLOBAL__sub_I_counter1>:
	} while(1);
}

void Task_read_keys()
{
	while (1){
     694:	6f ef       	ldi	r22, 0xFF	; 255
	
	if(counter2 >= counter2_limit) {
		leds.toggle(0b11110000);
		counter2 = 0;
	}
     696:	7f ef       	ldi	r23, 0xFF	; 255
     698:	81 e0       	ldi	r24, 0x01	; 1
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	67 ce       	rjmp	.-818    	; 0x36c <_Z41__static_initialization_and_destruction_0ii>
     69e:	08 95       	ret

000006a0 <_ZN14BinarySemaphor11wait_aquireEv>:
     6a0:	1f 93       	push	r17
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	ec 01       	movw	r28, r24
     6a8:	18 81       	ld	r17, Y
     6aa:	e6 d4       	rcall	.+2508   	; 0x1078 <_Z15current_task_idv>
     6ac:	18 17       	cp	r17, r24
     6ae:	81 f0       	breq	.+32     	; 0x6d0 <_ZN14BinarySemaphor11wait_aquireEv+0x30>
     6b0:	88 81       	ld	r24, Y
     6b2:	88 23       	and	r24, r24
     6b4:	21 f0       	breq	.+8      	; 0x6be <_ZN14BinarySemaphor11wait_aquireEv+0x1e>
     6b6:	e0 d4       	rcall	.+2496   	; 0x1078 <_Z15current_task_idv>
     6b8:	e2 d4       	rcall	.+2500   	; 0x107e <_Z8sem_waith>
     6ba:	8a d4       	rcall	.+2324   	; 0xfd0 <_Z5yieldv>
     6bc:	f5 cf       	rjmp	.-22     	; 0x6a8 <_ZN14BinarySemaphor11wait_aquireEv+0x8>
     6be:	1f b7       	in	r17, 0x3f	; 63
     6c0:	f8 94       	cli
     6c2:	88 81       	ld	r24, Y
     6c4:	81 11       	cpse	r24, r1
     6c6:	02 c0       	rjmp	.+4      	; 0x6cc <_ZN14BinarySemaphor11wait_aquireEv+0x2c>
     6c8:	d7 d4       	rcall	.+2478   	; 0x1078 <_Z15current_task_idv>
     6ca:	88 83       	st	Y, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     6cc:	1f bf       	out	0x3f, r17	; 63
    __asm__ volatile ("" ::: "memory");
     6ce:	ec cf       	rjmp	.-40     	; 0x6a8 <_ZN14BinarySemaphor11wait_aquireEv+0x8>
     6d0:	df 91       	pop	r29
     6d2:	cf 91       	pop	r28
     6d4:	1f 91       	pop	r17
     6d6:	08 95       	ret

000006d8 <_ZN14BinarySemaphor7releaseEv>:
     6d8:	0f 93       	push	r16
     6da:	1f 93       	push	r17
     6dc:	cf 93       	push	r28
     6de:	df 93       	push	r29
     6e0:	ec 01       	movw	r28, r24
     6e2:	1f b7       	in	r17, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     6e4:	f8 94       	cli
     6e6:	08 81       	ld	r16, Y
     6e8:	c7 d4       	rcall	.+2446   	; 0x1078 <_Z15current_task_idv>
     6ea:	08 13       	cpse	r16, r24
     6ec:	03 c0       	rjmp	.+6      	; 0x6f4 <_ZN14BinarySemaphor7releaseEv+0x1c>
     6ee:	18 82       	st	Y, r1
     6f0:	c1 e0       	ldi	r28, 0x01	; 1
     6f2:	01 c0       	rjmp	.+2      	; 0x6f6 <_ZN14BinarySemaphor7releaseEv+0x1e>
     6f4:	c0 e0       	ldi	r28, 0x00	; 0
     6f6:	1f bf       	out	0x3f, r17	; 63
     6f8:	6b d4       	rcall	.+2262   	; 0xfd0 <_Z5yieldv>
     6fa:	8c 2f       	mov	r24, r28
     6fc:	df 91       	pop	r29
     6fe:	cf 91       	pop	r28
     700:	1f 91       	pop	r17
     702:	0f 91       	pop	r16
     704:	08 95       	ret

00000706 <_ZN12BoundedQueue4readEv>:
     706:	fc 01       	movw	r30, r24
     708:	3f b7       	in	r19, 0x3f	; 63
     70a:	f8 94       	cli
     70c:	91 81       	ldd	r25, Z+1	; 0x01
     70e:	91 11       	cpse	r25, r1
     710:	02 c0       	rjmp	.+4      	; 0x716 <_ZN12BoundedQueue4readEv+0x10>
     712:	80 e0       	ldi	r24, 0x00	; 0
     714:	0e c0       	rjmp	.+28     	; 0x732 <_ZN12BoundedQueue4readEv+0x2c>
     716:	83 81       	ldd	r24, Z+3	; 0x03
     718:	21 e0       	ldi	r18, 0x01	; 1
     71a:	28 0f       	add	r18, r24
     71c:	23 83       	std	Z+3, r18	; 0x03
     71e:	df 01       	movw	r26, r30
     720:	a8 0f       	add	r26, r24
     722:	b1 1d       	adc	r27, r1
     724:	14 96       	adiw	r26, 0x04	; 4
     726:	8c 91       	ld	r24, X
     728:	91 50       	subi	r25, 0x01	; 1
     72a:	91 83       	std	Z+1, r25	; 0x01
     72c:	2a 30       	cpi	r18, 0x0A	; 10
     72e:	08 f0       	brcs	.+2      	; 0x732 <_ZN12BoundedQueue4readEv+0x2c>
     730:	13 82       	std	Z+3, r1	; 0x03
     732:	3f bf       	out	0x3f, r19	; 63
     734:	08 95       	ret

00000736 <_ZN12BoundedQueue5writeEh>:
     736:	fc 01       	movw	r30, r24
     738:	2f b7       	in	r18, 0x3f	; 63
     73a:	f8 94       	cli
     73c:	91 81       	ldd	r25, Z+1	; 0x01
     73e:	9a 30       	cpi	r25, 0x0A	; 10
     740:	a0 f0       	brcs	.+40     	; 0x76a <_ZN12BoundedQueue5writeEh+0x34>
     742:	80 81       	ld	r24, Z
     744:	81 30       	cpi	r24, 0x01	; 1
     746:	71 f0       	breq	.+28     	; 0x764 <_ZN12BoundedQueue5writeEh+0x2e>
     748:	83 81       	ldd	r24, Z+3	; 0x03
     74a:	8f 5f       	subi	r24, 0xFF	; 255
     74c:	8a 30       	cpi	r24, 0x0A	; 10
     74e:	10 f4       	brcc	.+4      	; 0x754 <_ZN12BoundedQueue5writeEh+0x1e>
     750:	83 83       	std	Z+3, r24	; 0x03
     752:	0b c0       	rjmp	.+22     	; 0x76a <_ZN12BoundedQueue5writeEh+0x34>
     754:	13 82       	std	Z+3, r1	; 0x03
     756:	8f ef       	ldi	r24, 0xFF	; 255
     758:	89 0f       	add	r24, r25
     75a:	81 83       	std	Z+1, r24	; 0x01
     75c:	06 c0       	rjmp	.+12     	; 0x76a <_ZN12BoundedQueue5writeEh+0x34>
     75e:	12 82       	std	Z+2, r1	; 0x02
     760:	81 e0       	ldi	r24, 0x01	; 1
     762:	01 c0       	rjmp	.+2      	; 0x766 <_ZN12BoundedQueue5writeEh+0x30>
     764:	80 e0       	ldi	r24, 0x00	; 0
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     766:	2f bf       	out	0x3f, r18	; 63
     768:	08 95       	ret
     76a:	82 81       	ldd	r24, Z+2	; 0x02
     76c:	91 e0       	ldi	r25, 0x01	; 1
     76e:	98 0f       	add	r25, r24
     770:	92 83       	std	Z+2, r25	; 0x02
     772:	df 01       	movw	r26, r30
     774:	a8 0f       	add	r26, r24
     776:	b1 1d       	adc	r27, r1
     778:	14 96       	adiw	r26, 0x04	; 4
     77a:	6c 93       	st	X, r22
     77c:	81 81       	ldd	r24, Z+1	; 0x01
     77e:	8f 5f       	subi	r24, 0xFF	; 255
     780:	81 83       	std	Z+1, r24	; 0x01
     782:	9a 30       	cpi	r25, 0x0A	; 10
     784:	60 f7       	brcc	.-40     	; 0x75e <_ZN12BoundedQueue5writeEh+0x28>
     786:	81 e0       	ldi	r24, 0x01	; 1
     788:	ee cf       	rjmp	.-36     	; 0x766 <_ZN12BoundedQueue5writeEh+0x30>

0000078a <_ZN12DigiPortIRPT6notifyEv>:
     78a:	fc 01       	movw	r30, r24
     78c:	2f b7       	in	r18, 0x3f	; 63
     78e:	f8 94       	cli
     790:	84 81       	ldd	r24, Z+4	; 0x04
     792:	98 2f       	mov	r25, r24
     794:	90 95       	com	r25
     796:	85 81       	ldd	r24, Z+5	; 0x05
     798:	8f 3f       	cpi	r24, 0xFF	; 255
     79a:	21 f4       	brne	.+8      	; 0x7a4 <_ZN12DigiPortIRPT6notifyEv+0x1a>
     79c:	a2 81       	ldd	r26, Z+2	; 0x02
     79e:	b3 81       	ldd	r27, Z+3	; 0x03
     7a0:	8c 91       	ld	r24, X
     7a2:	04 c0       	rjmp	.+8      	; 0x7ac <_ZN12DigiPortIRPT6notifyEv+0x22>
     7a4:	a2 81       	ldd	r26, Z+2	; 0x02
     7a6:	b3 81       	ldd	r27, Z+3	; 0x03
     7a8:	8c 91       	ld	r24, X
     7aa:	80 95       	com	r24
     7ac:	89 23       	and	r24, r25
     7ae:	2f bf       	out	0x3f, r18	; 63
     7b0:	92 85       	ldd	r25, Z+10	; 0x0a
     7b2:	20 85       	ldd	r18, Z+8	; 0x08
     7b4:	38 2f       	mov	r19, r24
     7b6:	30 95       	com	r19
     7b8:	93 23       	and	r25, r19
     7ba:	92 2b       	or	r25, r18
     7bc:	90 87       	std	Z+8, r25	; 0x08
     7be:	92 85       	ldd	r25, Z+10	; 0x0a
     7c0:	21 85       	ldd	r18, Z+9	; 0x09
     7c2:	90 95       	com	r25
     7c4:	98 23       	and	r25, r24
     7c6:	92 2b       	or	r25, r18
     7c8:	91 87       	std	Z+9, r25	; 0x09
     7ca:	82 87       	std	Z+10, r24	; 0x0a
     7cc:	06 80       	ldd	r0, Z+6	; 0x06
     7ce:	f7 81       	ldd	r31, Z+7	; 0x07
     7d0:	e0 2d       	mov	r30, r0
     7d2:	30 97       	sbiw	r30, 0x00	; 0
     7d4:	09 f0       	breq	.+2      	; 0x7d8 <_ZN12DigiPortIRPT6notifyEv+0x4e>
     7d6:	19 95       	eicall
     7d8:	08 95       	ret

000007da <_ZN11DigiPortRawC1Ehhh>:
     7da:	0f 93       	push	r16
     7dc:	1f 93       	push	r17
     7de:	cf 93       	push	r28
     7e0:	df 93       	push	r29
     7e2:	8c 01       	movw	r16, r24
     7e4:	86 2f       	mov	r24, r22
     7e6:	c4 2f       	mov	r28, r20
     7e8:	d2 2f       	mov	r29, r18
     7ea:	0e 94 3f 11 	call	0x227e	; 0x227e <_Z22port_handle_to_addressh>
     7ee:	d8 01       	movw	r26, r16
     7f0:	11 96       	adiw	r26, 0x01	; 1
     7f2:	9c 93       	st	X, r25
     7f4:	8e 93       	st	-X, r24
     7f6:	00 97       	sbiw	r24, 0x00	; 0
     7f8:	69 f0       	breq	.+26     	; 0x814 <_ZN11DigiPortRawC1Ehhh+0x3a>
     7fa:	13 96       	adiw	r26, 0x03	; 3
     7fc:	dc 93       	st	X, r29
     7fe:	13 97       	sbiw	r26, 0x03	; 3
     800:	12 96       	adiw	r26, 0x02	; 2
     802:	cc 93       	st	X, r28
     804:	12 97       	sbiw	r26, 0x02	; 2
     806:	fc 01       	movw	r30, r24
     808:	c1 83       	std	Z+1, r28	; 0x01
     80a:	ed 91       	ld	r30, X+
     80c:	fc 91       	ld	r31, X
     80e:	cd 2b       	or	r28, r29
     810:	c0 95       	com	r28
     812:	c2 83       	std	Z+2, r28	; 0x02
     814:	df 91       	pop	r29
     816:	cf 91       	pop	r28
     818:	1f 91       	pop	r17
     81a:	0f 91       	pop	r16
     81c:	08 95       	ret

0000081e <__vector_9>:
     81e:	1f 92       	push	r1
     820:	0f 92       	push	r0
     822:	0f b6       	in	r0, 0x3f	; 63
     824:	0f 92       	push	r0
     826:	11 24       	eor	r1, r1
     828:	0b b6       	in	r0, 0x3b	; 59
     82a:	0f 92       	push	r0
     82c:	2f 93       	push	r18
     82e:	3f 93       	push	r19
     830:	4f 93       	push	r20
     832:	5f 93       	push	r21
     834:	6f 93       	push	r22
     836:	7f 93       	push	r23
     838:	8f 93       	push	r24
     83a:	9f 93       	push	r25
     83c:	af 93       	push	r26
     83e:	bf 93       	push	r27
     840:	ef 93       	push	r30
     842:	ff 93       	push	r31
     844:	80 91 3b 03 	lds	r24, 0x033B	; 0x80033b <dp_obj>
     848:	90 91 3c 03 	lds	r25, 0x033C	; 0x80033c <dp_obj+0x1>
     84c:	00 97       	sbiw	r24, 0x00	; 0
     84e:	39 f0       	breq	.+14     	; 0x85e <__vector_9+0x40>
     850:	dc 01       	movw	r26, r24
     852:	ed 91       	ld	r30, X+
     854:	fc 91       	ld	r31, X
     856:	01 90       	ld	r0, Z+
     858:	f0 81       	ld	r31, Z
     85a:	e0 2d       	mov	r30, r0
     85c:	19 95       	eicall
     85e:	ff 91       	pop	r31
     860:	ef 91       	pop	r30
     862:	bf 91       	pop	r27
     864:	af 91       	pop	r26
     866:	9f 91       	pop	r25
     868:	8f 91       	pop	r24
     86a:	7f 91       	pop	r23
     86c:	6f 91       	pop	r22
     86e:	5f 91       	pop	r21
     870:	4f 91       	pop	r20
     872:	3f 91       	pop	r19
     874:	2f 91       	pop	r18
     876:	0f 90       	pop	r0
     878:	0b be       	out	0x3b, r0	; 59
     87a:	0f 90       	pop	r0
     87c:	0f be       	out	0x3f, r0	; 63
     87e:	0f 90       	pop	r0
     880:	1f 90       	pop	r1
     882:	18 95       	reti

00000884 <__vector_10>:
     884:	1f 92       	push	r1
     886:	0f 92       	push	r0
     888:	0f b6       	in	r0, 0x3f	; 63
     88a:	0f 92       	push	r0
     88c:	11 24       	eor	r1, r1
     88e:	0b b6       	in	r0, 0x3b	; 59
     890:	0f 92       	push	r0
     892:	2f 93       	push	r18
     894:	3f 93       	push	r19
     896:	4f 93       	push	r20
     898:	5f 93       	push	r21
     89a:	6f 93       	push	r22
     89c:	7f 93       	push	r23
     89e:	8f 93       	push	r24
     8a0:	9f 93       	push	r25
     8a2:	af 93       	push	r26
     8a4:	bf 93       	push	r27
     8a6:	ef 93       	push	r30
     8a8:	ff 93       	push	r31
     8aa:	80 91 3f 03 	lds	r24, 0x033F	; 0x80033f <dp_obj+0x4>
     8ae:	90 91 40 03 	lds	r25, 0x0340	; 0x800340 <dp_obj+0x5>
     8b2:	00 97       	sbiw	r24, 0x00	; 0
     8b4:	39 f0       	breq	.+14     	; 0x8c4 <__vector_10+0x40>
     8b6:	dc 01       	movw	r26, r24
     8b8:	ed 91       	ld	r30, X+
     8ba:	fc 91       	ld	r31, X
     8bc:	01 90       	ld	r0, Z+
     8be:	f0 81       	ld	r31, Z
     8c0:	e0 2d       	mov	r30, r0
     8c2:	19 95       	eicall
     8c4:	ff 91       	pop	r31
     8c6:	ef 91       	pop	r30
     8c8:	bf 91       	pop	r27
     8ca:	af 91       	pop	r26
     8cc:	9f 91       	pop	r25
     8ce:	8f 91       	pop	r24
     8d0:	7f 91       	pop	r23
     8d2:	6f 91       	pop	r22
     8d4:	5f 91       	pop	r21
     8d6:	4f 91       	pop	r20
     8d8:	3f 91       	pop	r19
     8da:	2f 91       	pop	r18
     8dc:	0f 90       	pop	r0
     8de:	0b be       	out	0x3b, r0	; 59
     8e0:	0f 90       	pop	r0
     8e2:	0f be       	out	0x3f, r0	; 63
     8e4:	0f 90       	pop	r0
     8e6:	1f 90       	pop	r1
     8e8:	18 95       	reti

000008ea <__vector_11>:
     8ea:	1f 92       	push	r1
     8ec:	0f 92       	push	r0
     8ee:	0f b6       	in	r0, 0x3f	; 63
     8f0:	0f 92       	push	r0
     8f2:	11 24       	eor	r1, r1
     8f4:	0b b6       	in	r0, 0x3b	; 59
     8f6:	0f 92       	push	r0
     8f8:	2f 93       	push	r18
     8fa:	3f 93       	push	r19
     8fc:	4f 93       	push	r20
     8fe:	5f 93       	push	r21
     900:	6f 93       	push	r22
     902:	7f 93       	push	r23
     904:	8f 93       	push	r24
     906:	9f 93       	push	r25
     908:	af 93       	push	r26
     90a:	bf 93       	push	r27
     90c:	ef 93       	push	r30
     90e:	ff 93       	push	r31
     910:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <dp_obj+0x2>
     914:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <dp_obj+0x3>
     918:	00 97       	sbiw	r24, 0x00	; 0
     91a:	39 f0       	breq	.+14     	; 0x92a <__vector_11+0x40>
     91c:	dc 01       	movw	r26, r24
     91e:	ed 91       	ld	r30, X+
     920:	fc 91       	ld	r31, X
     922:	01 90       	ld	r0, Z+
     924:	f0 81       	ld	r31, Z
     926:	e0 2d       	mov	r30, r0
     928:	19 95       	eicall
     92a:	ff 91       	pop	r31
     92c:	ef 91       	pop	r30
     92e:	bf 91       	pop	r27
     930:	af 91       	pop	r26
     932:	9f 91       	pop	r25
     934:	8f 91       	pop	r24
     936:	7f 91       	pop	r23
     938:	6f 91       	pop	r22
     93a:	5f 91       	pop	r21
     93c:	4f 91       	pop	r20
     93e:	3f 91       	pop	r19
     940:	2f 91       	pop	r18
     942:	0f 90       	pop	r0
     944:	0b be       	out	0x3b, r0	; 59
     946:	0f 90       	pop	r0
     948:	0f be       	out	0x3f, r0	; 63
     94a:	0f 90       	pop	r0
     94c:	1f 90       	pop	r1
     94e:	18 95       	reti

00000950 <_ZN12DigiPortIRPTC1EhhhPFvvE>:
     950:	ff 92       	push	r15
     952:	0f 93       	push	r16
     954:	1f 93       	push	r17
     956:	cf 93       	push	r28
     958:	df 93       	push	r29
     95a:	ec 01       	movw	r28, r24
     95c:	f6 2e       	mov	r15, r22
     95e:	02 96       	adiw	r24, 0x02	; 2
     960:	3c df       	rcall	.-392    	; 0x7da <_ZN11DigiPortRawC1Ehhh>
     962:	81 e3       	ldi	r24, 0x31	; 49
     964:	92 e0       	ldi	r25, 0x02	; 2
     966:	99 83       	std	Y+1, r25	; 0x01
     968:	88 83       	st	Y, r24
     96a:	1f 83       	std	Y+7, r17	; 0x07
     96c:	0e 83       	std	Y+6, r16	; 0x06
     96e:	18 86       	std	Y+8, r1	; 0x08
     970:	19 86       	std	Y+9, r1	; 0x09
     972:	1a 86       	std	Y+10, r1	; 0x0a
     974:	81 e0       	ldi	r24, 0x01	; 1
     976:	f8 12       	cpse	r15, r24
     978:	0e c0       	rjmp	.+28     	; 0x996 <_ZN12DigiPortIRPTC1EhhhPFvvE+0x46>
     97a:	d0 93 3c 03 	sts	0x033C, r29	; 0x80033c <dp_obj+0x1>
     97e:	c0 93 3b 03 	sts	0x033B, r28	; 0x80033b <dp_obj>
     982:	e8 e6       	ldi	r30, 0x68	; 104
     984:	f0 e0       	ldi	r31, 0x00	; 0
     986:	80 81       	ld	r24, Z
     988:	81 60       	ori	r24, 0x01	; 1
     98a:	80 83       	st	Z, r24
     98c:	8c 81       	ldd	r24, Y+4	; 0x04
     98e:	80 95       	com	r24
     990:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7c006b>
     994:	22 c0       	rjmp	.+68     	; 0x9da <_ZN12DigiPortIRPTC1EhhhPFvvE+0x8a>
     996:	89 e0       	ldi	r24, 0x09	; 9
     998:	f8 12       	cpse	r15, r24
     99a:	0e c0       	rjmp	.+28     	; 0x9b8 <_ZN12DigiPortIRPTC1EhhhPFvvE+0x68>
     99c:	d0 93 3e 03 	sts	0x033E, r29	; 0x80033e <dp_obj+0x3>
     9a0:	c0 93 3d 03 	sts	0x033D, r28	; 0x80033d <dp_obj+0x2>
     9a4:	e8 e6       	ldi	r30, 0x68	; 104
     9a6:	f0 e0       	ldi	r31, 0x00	; 0
     9a8:	80 81       	ld	r24, Z
     9aa:	84 60       	ori	r24, 0x04	; 4
     9ac:	80 83       	st	Z, r24
     9ae:	8c 81       	ldd	r24, Y+4	; 0x04
     9b0:	80 95       	com	r24
     9b2:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7c006d>
     9b6:	11 c0       	rjmp	.+34     	; 0x9da <_ZN12DigiPortIRPTC1EhhhPFvvE+0x8a>
     9b8:	88 e0       	ldi	r24, 0x08	; 8
     9ba:	f8 12       	cpse	r15, r24
     9bc:	0e c0       	rjmp	.+28     	; 0x9da <_ZN12DigiPortIRPTC1EhhhPFvvE+0x8a>
     9be:	d0 93 40 03 	sts	0x0340, r29	; 0x800340 <dp_obj+0x5>
     9c2:	c0 93 3f 03 	sts	0x033F, r28	; 0x80033f <dp_obj+0x4>
     9c6:	e8 e6       	ldi	r30, 0x68	; 104
     9c8:	f0 e0       	ldi	r31, 0x00	; 0
     9ca:	80 81       	ld	r24, Z
     9cc:	82 60       	ori	r24, 0x02	; 2
     9ce:	80 83       	st	Z, r24
     9d0:	8c 81       	ldd	r24, Y+4	; 0x04
     9d2:	80 95       	com	r24
     9d4:	88 0f       	add	r24, r24
     9d6:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7c006c>
     9da:	df 91       	pop	r29
     9dc:	cf 91       	pop	r28
     9de:	1f 91       	pop	r17
     9e0:	0f 91       	pop	r16
     9e2:	ff 90       	pop	r15
     9e4:	08 95       	ret

000009e6 <_ZN3LCD10wait_readyEv>:
     9e6:	cf 93       	push	r28
     9e8:	df 93       	push	r29
     9ea:	fc 01       	movw	r30, r24
     9ec:	6f b7       	in	r22, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     9ee:	f8 94       	cli
     9f0:	a2 81       	ldd	r26, Z+2	; 0x02
     9f2:	b3 81       	ldd	r27, Z+3	; 0x03
     9f4:	1c 92       	st	X, r1
     9f6:	a2 81       	ldd	r26, Z+2	; 0x02
     9f8:	b3 81       	ldd	r27, Z+3	; 0x03
     9fa:	11 97       	sbiw	r26, 0x01	; 1
     9fc:	80 ef       	ldi	r24, 0xF0	; 240
     9fe:	8c 93       	st	X, r24
     a00:	a2 81       	ldd	r26, Z+2	; 0x02
     a02:	b3 81       	ldd	r27, Z+3	; 0x03
     a04:	8c 91       	ld	r24, X
     a06:	80 62       	ori	r24, 0x20	; 32
     a08:	8c 93       	st	X, r24
     a0a:	81 e0       	ldi	r24, 0x01	; 1
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	a2 81       	ldd	r26, Z+2	; 0x02
     a10:	b3 81       	ldd	r27, Z+3	; 0x03
     a12:	4c 91       	ld	r20, X
     a14:	9c 01       	movw	r18, r24
     a16:	01 84       	ldd	r0, Z+9	; 0x09
     a18:	02 c0       	rjmp	.+4      	; 0xa1e <_ZN3LCD10wait_readyEv+0x38>
     a1a:	22 0f       	add	r18, r18
     a1c:	33 1f       	adc	r19, r19
     a1e:	0a 94       	dec	r0
     a20:	e2 f7       	brpl	.-8      	; 0xa1a <_ZN3LCD10wait_readyEv+0x34>
     a22:	24 27       	eor	r18, r20
     a24:	2c 93       	st	X, r18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a26:	25 e0       	ldi	r18, 0x05	; 5
     a28:	2a 95       	dec	r18
     a2a:	f1 f7       	brne	.-4      	; 0xa28 <_ZN3LCD10wait_readyEv+0x42>
     a2c:	00 00       	nop
     a2e:	a2 81       	ldd	r26, Z+2	; 0x02
     a30:	b3 81       	ldd	r27, Z+3	; 0x03
     a32:	ed 01       	movw	r28, r26
     a34:	22 97       	sbiw	r28, 0x02	; 2
     a36:	28 81       	ld	r18, Y
     a38:	22 95       	swap	r18
     a3a:	20 7f       	andi	r18, 0xF0	; 240
     a3c:	3c 91       	ld	r19, X
     a3e:	ac 01       	movw	r20, r24
     a40:	01 84       	ldd	r0, Z+9	; 0x09
     a42:	02 c0       	rjmp	.+4      	; 0xa48 <_ZN3LCD10wait_readyEv+0x62>
     a44:	44 0f       	add	r20, r20
     a46:	55 1f       	adc	r21, r21
     a48:	0a 94       	dec	r0
     a4a:	e2 f7       	brpl	.-8      	; 0xa44 <_ZN3LCD10wait_readyEv+0x5e>
     a4c:	43 27       	eor	r20, r19
     a4e:	4c 93       	st	X, r20
     a50:	3a e0       	ldi	r19, 0x0A	; 10
     a52:	3a 95       	dec	r19
     a54:	f1 f7       	brne	.-4      	; 0xa52 <_ZN3LCD10wait_readyEv+0x6c>
     a56:	00 c0       	rjmp	.+0      	; 0xa58 <_ZN3LCD10wait_readyEv+0x72>
     a58:	a2 81       	ldd	r26, Z+2	; 0x02
     a5a:	b3 81       	ldd	r27, Z+3	; 0x03
     a5c:	3c 91       	ld	r19, X
     a5e:	ac 01       	movw	r20, r24
     a60:	01 84       	ldd	r0, Z+9	; 0x09
     a62:	02 c0       	rjmp	.+4      	; 0xa68 <_ZN3LCD10wait_readyEv+0x82>
     a64:	44 0f       	add	r20, r20
     a66:	55 1f       	adc	r21, r21
     a68:	0a 94       	dec	r0
     a6a:	e2 f7       	brpl	.-8      	; 0xa64 <_ZN3LCD10wait_readyEv+0x7e>
     a6c:	43 27       	eor	r20, r19
     a6e:	4c 93       	st	X, r20
     a70:	35 e0       	ldi	r19, 0x05	; 5
     a72:	3a 95       	dec	r19
     a74:	f1 f7       	brne	.-4      	; 0xa72 <_ZN3LCD10wait_readyEv+0x8c>
     a76:	00 00       	nop
     a78:	a2 81       	ldd	r26, Z+2	; 0x02
     a7a:	b3 81       	ldd	r27, Z+3	; 0x03
     a7c:	ed 01       	movw	r28, r26
     a7e:	22 97       	sbiw	r28, 0x02	; 2
     a80:	38 81       	ld	r19, Y
     a82:	3c 91       	ld	r19, X
     a84:	ac 01       	movw	r20, r24
     a86:	01 84       	ldd	r0, Z+9	; 0x09
     a88:	02 c0       	rjmp	.+4      	; 0xa8e <_ZN3LCD10wait_readyEv+0xa8>
     a8a:	44 0f       	add	r20, r20
     a8c:	55 1f       	adc	r21, r21
     a8e:	0a 94       	dec	r0
     a90:	e2 f7       	brpl	.-8      	; 0xa8a <_ZN3LCD10wait_readyEv+0xa4>
     a92:	43 27       	eor	r20, r19
     a94:	4c 93       	st	X, r20
     a96:	22 23       	and	r18, r18
     a98:	0c f4       	brge	.+2      	; 0xa9c <_ZN3LCD10wait_readyEv+0xb6>
     a9a:	b9 cf       	rjmp	.-142    	; 0xa0e <_ZN3LCD10wait_readyEv+0x28>
     a9c:	a2 81       	ldd	r26, Z+2	; 0x02
     a9e:	b3 81       	ldd	r27, Z+3	; 0x03
     aa0:	8c 91       	ld	r24, X
     aa2:	8f 7d       	andi	r24, 0xDF	; 223
     aa4:	8c 93       	st	X, r24
     aa6:	02 80       	ldd	r0, Z+2	; 0x02
     aa8:	f3 81       	ldd	r31, Z+3	; 0x03
     aaa:	e0 2d       	mov	r30, r0
     aac:	31 97       	sbiw	r30, 0x01	; 1
     aae:	8f ef       	ldi	r24, 0xFF	; 255
     ab0:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     ab2:	6f bf       	out	0x3f, r22	; 63
     ab4:	df 91       	pop	r29
     ab6:	cf 91       	pop	r28
     ab8:	08 95       	ret

00000aba <_ZN3LCD6enableEv>:
     aba:	fc 01       	movw	r30, r24
     abc:	4f b7       	in	r20, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     abe:	f8 94       	cli
     ac0:	a2 81       	ldd	r26, Z+2	; 0x02
     ac2:	b3 81       	ldd	r27, Z+3	; 0x03
     ac4:	5c 91       	ld	r21, X
     ac6:	21 e0       	ldi	r18, 0x01	; 1
     ac8:	30 e0       	ldi	r19, 0x00	; 0
     aca:	c9 01       	movw	r24, r18
     acc:	01 84       	ldd	r0, Z+9	; 0x09
     ace:	02 c0       	rjmp	.+4      	; 0xad4 <_ZN3LCD6enableEv+0x1a>
     ad0:	88 0f       	add	r24, r24
     ad2:	99 1f       	adc	r25, r25
     ad4:	0a 94       	dec	r0
     ad6:	e2 f7       	brpl	.-8      	; 0xad0 <_ZN3LCD6enableEv+0x16>
     ad8:	85 27       	eor	r24, r21
     ada:	8c 93       	st	X, r24
     adc:	85 e0       	ldi	r24, 0x05	; 5
     ade:	8a 95       	dec	r24
     ae0:	f1 f7       	brne	.-4      	; 0xade <_ZN3LCD6enableEv+0x24>
     ae2:	00 00       	nop
     ae4:	a2 81       	ldd	r26, Z+2	; 0x02
     ae6:	b3 81       	ldd	r27, Z+3	; 0x03
     ae8:	8c 91       	ld	r24, X
     aea:	01 84       	ldd	r0, Z+9	; 0x09
     aec:	02 c0       	rjmp	.+4      	; 0xaf2 <_ZN3LCD6enableEv+0x38>
     aee:	22 0f       	add	r18, r18
     af0:	33 1f       	adc	r19, r19
     af2:	0a 94       	dec	r0
     af4:	e2 f7       	brpl	.-8      	; 0xaee <_ZN3LCD6enableEv+0x34>
     af6:	28 27       	eor	r18, r24
     af8:	2c 93       	st	X, r18
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     afa:	4f bf       	out	0x3f, r20	; 63
    __asm__ volatile ("" ::: "memory");
     afc:	08 95       	ret

00000afe <_ZN3LCD7commandEh>:
     afe:	ef 92       	push	r14
     b00:	ff 92       	push	r15
     b02:	0f 93       	push	r16
     b04:	1f 93       	push	r17
     b06:	cf 93       	push	r28
     b08:	df 93       	push	r29
     b0a:	ec 01       	movw	r28, r24
     b0c:	06 2f       	mov	r16, r22
     b0e:	8c 81       	ldd	r24, Y+4	; 0x04
     b10:	89 30       	cpi	r24, 0x09	; 9
     b12:	11 f0       	breq	.+4      	; 0xb18 <_ZN3LCD7commandEh+0x1a>
     b14:	ce 01       	movw	r24, r28
     b16:	67 df       	rcall	.-306    	; 0x9e6 <_ZN3LCD10wait_readyEv>
     b18:	1f b7       	in	r17, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     b1a:	f8 94       	cli
     b1c:	e0 2e       	mov	r14, r16
     b1e:	f1 2c       	mov	r15, r1
     b20:	f5 94       	asr	r15
     b22:	e7 94       	ror	r14
     b24:	f5 94       	asr	r15
     b26:	e7 94       	ror	r14
     b28:	f5 94       	asr	r15
     b2a:	e7 94       	ror	r14
     b2c:	f5 94       	asr	r15
     b2e:	e7 94       	ror	r14
     b30:	ea 81       	ldd	r30, Y+2	; 0x02
     b32:	fb 81       	ldd	r31, Y+3	; 0x03
     b34:	e0 82       	st	Z, r14
     b36:	ce 01       	movw	r24, r28
     b38:	c0 df       	rcall	.-128    	; 0xaba <_ZN3LCD6enableEv>
     b3a:	0f 70       	andi	r16, 0x0F	; 15
     b3c:	ea 81       	ldd	r30, Y+2	; 0x02
     b3e:	fb 81       	ldd	r31, Y+3	; 0x03
     b40:	00 83       	st	Z, r16
     b42:	ce 01       	movw	r24, r28
     b44:	ba df       	rcall	.-140    	; 0xaba <_ZN3LCD6enableEv>
     b46:	ea 81       	ldd	r30, Y+2	; 0x02
     b48:	fb 81       	ldd	r31, Y+3	; 0x03
     b4a:	10 82       	st	Z, r1
     b4c:	8c 81       	ldd	r24, Y+4	; 0x04
     b4e:	89 30       	cpi	r24, 0x09	; 9
     b50:	31 f5       	brne	.+76     	; 0xb9e <_ZN3LCD7commandEh+0xa0>
     b52:	87 ec       	ldi	r24, 0xC7	; 199
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	01 97       	sbiw	r24, 0x01	; 1
     b58:	f1 f7       	brne	.-4      	; 0xb56 <_ZN3LCD7commandEh+0x58>
     b5a:	00 c0       	rjmp	.+0      	; 0xb5c <_ZN3LCD7commandEh+0x5e>
     b5c:	00 00       	nop
     b5e:	1f c0       	rjmp	.+62     	; 0xb9e <_ZN3LCD7commandEh+0xa0>
     b60:	19 85       	ldd	r17, Y+9	; 0x09
     b62:	14 30       	cpi	r17, 0x04	; 4
     b64:	11 f0       	breq	.+4      	; 0xb6a <_ZN3LCD7commandEh+0x6c>
     b66:	84 e0       	ldi	r24, 0x04	; 4
     b68:	01 c0       	rjmp	.+2      	; 0xb6c <_ZN3LCD7commandEh+0x6e>
     b6a:	87 e0       	ldi	r24, 0x07	; 7
     b6c:	89 87       	std	Y+9, r24	; 0x09
     b6e:	ff b6       	in	r15, 0x3f	; 63
     b70:	f8 94       	cli
     b72:	ea 81       	ldd	r30, Y+2	; 0x02
     b74:	fb 81       	ldd	r31, Y+3	; 0x03
     b76:	e0 82       	st	Z, r14
     b78:	ce 01       	movw	r24, r28
     b7a:	9f df       	rcall	.-194    	; 0xaba <_ZN3LCD6enableEv>
     b7c:	ea 81       	ldd	r30, Y+2	; 0x02
     b7e:	fb 81       	ldd	r31, Y+3	; 0x03
     b80:	00 83       	st	Z, r16
     b82:	ce 01       	movw	r24, r28
     b84:	9a df       	rcall	.-204    	; 0xaba <_ZN3LCD6enableEv>
     b86:	ea 81       	ldd	r30, Y+2	; 0x02
     b88:	fb 81       	ldd	r31, Y+3	; 0x03
     b8a:	10 82       	st	Z, r1
     b8c:	19 87       	std	Y+9, r17	; 0x09
     b8e:	87 ec       	ldi	r24, 0xC7	; 199
     b90:	90 e0       	ldi	r25, 0x00	; 0
     b92:	01 97       	sbiw	r24, 0x01	; 1
     b94:	f1 f7       	brne	.-4      	; 0xb92 <_ZN3LCD7commandEh+0x94>
     b96:	00 c0       	rjmp	.+0      	; 0xb98 <_ZN3LCD7commandEh+0x9a>
     b98:	00 00       	nop
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     b9a:	ff be       	out	0x3f, r15	; 63
     b9c:	04 c0       	rjmp	.+8      	; 0xba6 <_ZN3LCD7commandEh+0xa8>
     b9e:	1f bf       	out	0x3f, r17	; 63
     ba0:	8c 81       	ldd	r24, Y+4	; 0x04
     ba2:	89 30       	cpi	r24, 0x09	; 9
     ba4:	e9 f2       	breq	.-70     	; 0xb60 <_ZN3LCD7commandEh+0x62>
     ba6:	df 91       	pop	r29
     ba8:	cf 91       	pop	r28
     baa:	1f 91       	pop	r17
     bac:	0f 91       	pop	r16
     bae:	ff 90       	pop	r15
     bb0:	ef 90       	pop	r14
     bb2:	08 95       	ret

00000bb4 <_ZN3LCD7set_posEhh>:
     bb4:	cf 93       	push	r28
     bb6:	df 93       	push	r29
     bb8:	fc 01       	movw	r30, r24
     bba:	a5 81       	ldd	r26, Z+5	; 0x05
     bbc:	b6 81       	ldd	r27, Z+6	; 0x06
     bbe:	8c 91       	ld	r24, X
     bc0:	68 17       	cp	r22, r24
     bc2:	f0 f4       	brcc	.+60     	; 0xc00 <_ZN3LCD7set_posEhh+0x4c>
     bc4:	11 96       	adiw	r26, 0x01	; 1
     bc6:	8c 91       	ld	r24, X
     bc8:	11 97       	sbiw	r26, 0x01	; 1
     bca:	48 17       	cp	r20, r24
     bcc:	d8 f4       	brcc	.+54     	; 0xc04 <_ZN3LCD7set_posEhh+0x50>
     bce:	40 87       	std	Z+8, r20	; 0x08
     bd0:	67 83       	std	Z+7, r22	; 0x07
     bd2:	ed 01       	movw	r28, r26
     bd4:	c6 0f       	add	r28, r22
     bd6:	d1 1d       	adc	r29, r1
     bd8:	8a 81       	ldd	r24, Y+2	; 0x02
     bda:	48 0f       	add	r20, r24
     bdc:	84 81       	ldd	r24, Z+4	; 0x04
     bde:	89 30       	cpi	r24, 0x09	; 9
     be0:	39 f4       	brne	.+14     	; 0xbf0 <_ZN3LCD7set_posEhh+0x3c>
     be2:	8c 91       	ld	r24, X
     be4:	86 95       	lsr	r24
     be6:	68 17       	cp	r22, r24
     be8:	18 f0       	brcs	.+6      	; 0xbf0 <_ZN3LCD7set_posEhh+0x3c>
     bea:	87 e0       	ldi	r24, 0x07	; 7
     bec:	81 87       	std	Z+9, r24	; 0x09
     bee:	02 c0       	rjmp	.+4      	; 0xbf4 <_ZN3LCD7set_posEhh+0x40>
     bf0:	84 e0       	ldi	r24, 0x04	; 4
     bf2:	81 87       	std	Z+9, r24	; 0x09
     bf4:	cf 01       	movw	r24, r30
     bf6:	64 2f       	mov	r22, r20
     bf8:	60 68       	ori	r22, 0x80	; 128
     bfa:	81 df       	rcall	.-254    	; 0xafe <_ZN3LCD7commandEh>
     bfc:	81 e0       	ldi	r24, 0x01	; 1
     bfe:	03 c0       	rjmp	.+6      	; 0xc06 <_ZN3LCD7set_posEhh+0x52>
     c00:	80 e0       	ldi	r24, 0x00	; 0
     c02:	01 c0       	rjmp	.+2      	; 0xc06 <_ZN3LCD7set_posEhh+0x52>
     c04:	80 e0       	ldi	r24, 0x00	; 0
     c06:	df 91       	pop	r29
     c08:	cf 91       	pop	r28
     c0a:	08 95       	ret

00000c0c <_ZN3LCD14advance_cursorEv>:
     c0c:	fc 01       	movw	r30, r24
     c0e:	90 85       	ldd	r25, Z+8	; 0x08
     c10:	81 e0       	ldi	r24, 0x01	; 1
     c12:	89 0f       	add	r24, r25
     c14:	80 87       	std	Z+8, r24	; 0x08
     c16:	a5 81       	ldd	r26, Z+5	; 0x05
     c18:	b6 81       	ldd	r27, Z+6	; 0x06
     c1a:	11 96       	adiw	r26, 0x01	; 1
     c1c:	2c 91       	ld	r18, X
     c1e:	11 97       	sbiw	r26, 0x01	; 1
     c20:	82 17       	cp	r24, r18
     c22:	88 f0       	brcs	.+34     	; 0xc46 <_ZN3LCD14advance_cursorEv+0x3a>
     c24:	81 81       	ldd	r24, Z+1	; 0x01
     c26:	88 23       	and	r24, r24
     c28:	49 f0       	breq	.+18     	; 0xc3c <_ZN3LCD14advance_cursorEv+0x30>
     c2a:	10 86       	std	Z+8, r1	; 0x08
     c2c:	87 81       	ldd	r24, Z+7	; 0x07
     c2e:	8f 5f       	subi	r24, 0xFF	; 255
     c30:	87 83       	std	Z+7, r24	; 0x07
     c32:	9c 91       	ld	r25, X
     c34:	89 17       	cp	r24, r25
     c36:	18 f0       	brcs	.+6      	; 0xc3e <_ZN3LCD14advance_cursorEv+0x32>
     c38:	17 82       	std	Z+7, r1	; 0x07
     c3a:	01 c0       	rjmp	.+2      	; 0xc3e <_ZN3LCD14advance_cursorEv+0x32>
     c3c:	90 87       	std	Z+8, r25	; 0x08
     c3e:	40 85       	ldd	r20, Z+8	; 0x08
     c40:	67 81       	ldd	r22, Z+7	; 0x07
     c42:	cf 01       	movw	r24, r30
     c44:	b7 cf       	rjmp	.-146    	; 0xbb4 <_ZN3LCD7set_posEhh>
     c46:	08 95       	ret

00000c48 <_ZN3LCD4initEh>:
     c48:	1f 93       	push	r17
     c4a:	cf 93       	push	r28
     c4c:	df 93       	push	r29
     c4e:	ec 01       	movw	r28, r24
     c50:	16 2f       	mov	r17, r22
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     c52:	2f ef       	ldi	r18, 0xFF	; 255
     c54:	81 ee       	ldi	r24, 0xE1	; 225
     c56:	94 e0       	ldi	r25, 0x04	; 4
     c58:	21 50       	subi	r18, 0x01	; 1
     c5a:	80 40       	sbci	r24, 0x00	; 0
     c5c:	90 40       	sbci	r25, 0x00	; 0
     c5e:	e1 f7       	brne	.-8      	; 0xc58 <_ZN3LCD4initEh+0x10>
     c60:	00 c0       	rjmp	.+0      	; 0xc62 <_ZN3LCD4initEh+0x1a>
     c62:	00 00       	nop
     c64:	ea 81       	ldd	r30, Y+2	; 0x02
     c66:	fb 81       	ldd	r31, Y+3	; 0x03
     c68:	83 e0       	ldi	r24, 0x03	; 3
     c6a:	80 83       	st	Z, r24
     c6c:	ce 01       	movw	r24, r28
     c6e:	25 df       	rcall	.-438    	; 0xaba <_ZN3LCD6enableEv>
     c70:	8f e1       	ldi	r24, 0x1F	; 31
     c72:	9e e4       	ldi	r25, 0x4E	; 78
     c74:	01 97       	sbiw	r24, 0x01	; 1
     c76:	f1 f7       	brne	.-4      	; 0xc74 <_ZN3LCD4initEh+0x2c>
     c78:	00 c0       	rjmp	.+0      	; 0xc7a <_ZN3LCD4initEh+0x32>
     c7a:	00 00       	nop
     c7c:	ce 01       	movw	r24, r28
     c7e:	1d df       	rcall	.-454    	; 0xaba <_ZN3LCD6enableEv>
     c80:	8f e1       	ldi	r24, 0x1F	; 31
     c82:	9e e4       	ldi	r25, 0x4E	; 78
     c84:	01 97       	sbiw	r24, 0x01	; 1
     c86:	f1 f7       	brne	.-4      	; 0xc84 <_ZN3LCD4initEh+0x3c>
     c88:	00 c0       	rjmp	.+0      	; 0xc8a <_ZN3LCD4initEh+0x42>
     c8a:	00 00       	nop
     c8c:	ce 01       	movw	r24, r28
     c8e:	15 df       	rcall	.-470    	; 0xaba <_ZN3LCD6enableEv>
     c90:	8f e1       	ldi	r24, 0x1F	; 31
     c92:	9e e4       	ldi	r25, 0x4E	; 78
     c94:	01 97       	sbiw	r24, 0x01	; 1
     c96:	f1 f7       	brne	.-4      	; 0xc94 <_ZN3LCD4initEh+0x4c>
     c98:	00 c0       	rjmp	.+0      	; 0xc9a <_ZN3LCD4initEh+0x52>
     c9a:	00 00       	nop
     c9c:	ea 81       	ldd	r30, Y+2	; 0x02
     c9e:	fb 81       	ldd	r31, Y+3	; 0x03
     ca0:	82 e0       	ldi	r24, 0x02	; 2
     ca2:	80 83       	st	Z, r24
     ca4:	ce 01       	movw	r24, r28
     ca6:	09 df       	rcall	.-494    	; 0xaba <_ZN3LCD6enableEv>
     ca8:	8f e1       	ldi	r24, 0x1F	; 31
     caa:	9e e4       	ldi	r25, 0x4E	; 78
     cac:	01 97       	sbiw	r24, 0x01	; 1
     cae:	f1 f7       	brne	.-4      	; 0xcac <_ZN3LCD4initEh+0x64>
     cb0:	00 c0       	rjmp	.+0      	; 0xcb2 <_ZN3LCD4initEh+0x6a>
     cb2:	00 00       	nop
     cb4:	61 2f       	mov	r22, r17
     cb6:	ce 01       	movw	r24, r28
     cb8:	22 df       	rcall	.-444    	; 0xafe <_ZN3LCD7commandEh>
     cba:	ed 81       	ldd	r30, Y+5	; 0x05
     cbc:	fe 81       	ldd	r31, Y+6	; 0x06
     cbe:	80 81       	ld	r24, Z
     cc0:	81 30       	cpi	r24, 0x01	; 1
     cc2:	21 f4       	brne	.+8      	; 0xccc <_ZN3LCD4initEh+0x84>
     cc4:	60 e2       	ldi	r22, 0x20	; 32
     cc6:	ce 01       	movw	r24, r28
     cc8:	1a df       	rcall	.-460    	; 0xafe <_ZN3LCD7commandEh>
     cca:	03 c0       	rjmp	.+6      	; 0xcd2 <_ZN3LCD4initEh+0x8a>
     ccc:	68 e2       	ldi	r22, 0x28	; 40
     cce:	ce 01       	movw	r24, r28
     cd0:	16 df       	rcall	.-468    	; 0xafe <_ZN3LCD7commandEh>
     cd2:	61 e0       	ldi	r22, 0x01	; 1
     cd4:	ce 01       	movw	r24, r28
     cd6:	13 df       	rcall	.-474    	; 0xafe <_ZN3LCD7commandEh>
     cd8:	8c 81       	ldd	r24, Y+4	; 0x04
     cda:	89 30       	cpi	r24, 0x09	; 9
     cdc:	31 f4       	brne	.+12     	; 0xcea <_ZN3LCD4initEh+0xa2>
     cde:	8f e1       	ldi	r24, 0x1F	; 31
     ce0:	9e e4       	ldi	r25, 0x4E	; 78
     ce2:	01 97       	sbiw	r24, 0x01	; 1
     ce4:	f1 f7       	brne	.-4      	; 0xce2 <_ZN3LCD4initEh+0x9a>
     ce6:	00 c0       	rjmp	.+0      	; 0xce8 <_ZN3LCD4initEh+0xa0>
     ce8:	00 00       	nop
     cea:	66 e0       	ldi	r22, 0x06	; 6
     cec:	ce 01       	movw	r24, r28
     cee:	07 df       	rcall	.-498    	; 0xafe <_ZN3LCD7commandEh>
     cf0:	8c 81       	ldd	r24, Y+4	; 0x04
     cf2:	89 30       	cpi	r24, 0x09	; 9
     cf4:	09 f0       	breq	.+2      	; 0xcf8 <_ZN3LCD4initEh+0xb0>
     cf6:	3e c0       	rjmp	.+124    	; 0xd74 <_ZN3LCD4initEh+0x12c>
     cf8:	87 e0       	ldi	r24, 0x07	; 7
     cfa:	89 87       	std	Y+9, r24	; 0x09
     cfc:	ea 81       	ldd	r30, Y+2	; 0x02
     cfe:	fb 81       	ldd	r31, Y+3	; 0x03
     d00:	83 e0       	ldi	r24, 0x03	; 3
     d02:	80 83       	st	Z, r24
     d04:	ce 01       	movw	r24, r28
     d06:	d9 de       	rcall	.-590    	; 0xaba <_ZN3LCD6enableEv>
     d08:	8f e1       	ldi	r24, 0x1F	; 31
     d0a:	9e e4       	ldi	r25, 0x4E	; 78
     d0c:	01 97       	sbiw	r24, 0x01	; 1
     d0e:	f1 f7       	brne	.-4      	; 0xd0c <_ZN3LCD4initEh+0xc4>
     d10:	00 c0       	rjmp	.+0      	; 0xd12 <_ZN3LCD4initEh+0xca>
     d12:	00 00       	nop
     d14:	ce 01       	movw	r24, r28
     d16:	d1 de       	rcall	.-606    	; 0xaba <_ZN3LCD6enableEv>
     d18:	8f e1       	ldi	r24, 0x1F	; 31
     d1a:	9e e4       	ldi	r25, 0x4E	; 78
     d1c:	01 97       	sbiw	r24, 0x01	; 1
     d1e:	f1 f7       	brne	.-4      	; 0xd1c <_ZN3LCD4initEh+0xd4>
     d20:	00 c0       	rjmp	.+0      	; 0xd22 <_ZN3LCD4initEh+0xda>
     d22:	00 00       	nop
     d24:	ce 01       	movw	r24, r28
     d26:	c9 de       	rcall	.-622    	; 0xaba <_ZN3LCD6enableEv>
     d28:	8f e1       	ldi	r24, 0x1F	; 31
     d2a:	9e e4       	ldi	r25, 0x4E	; 78
     d2c:	01 97       	sbiw	r24, 0x01	; 1
     d2e:	f1 f7       	brne	.-4      	; 0xd2c <_ZN3LCD4initEh+0xe4>
     d30:	00 c0       	rjmp	.+0      	; 0xd32 <_ZN3LCD4initEh+0xea>
     d32:	00 00       	nop
     d34:	ea 81       	ldd	r30, Y+2	; 0x02
     d36:	fb 81       	ldd	r31, Y+3	; 0x03
     d38:	82 e0       	ldi	r24, 0x02	; 2
     d3a:	80 83       	st	Z, r24
     d3c:	ce 01       	movw	r24, r28
     d3e:	bd de       	rcall	.-646    	; 0xaba <_ZN3LCD6enableEv>
     d40:	8f e1       	ldi	r24, 0x1F	; 31
     d42:	9e e4       	ldi	r25, 0x4E	; 78
     d44:	01 97       	sbiw	r24, 0x01	; 1
     d46:	f1 f7       	brne	.-4      	; 0xd44 <_ZN3LCD4initEh+0xfc>
     d48:	00 c0       	rjmp	.+0      	; 0xd4a <_ZN3LCD4initEh+0x102>
     d4a:	00 00       	nop
     d4c:	61 2f       	mov	r22, r17
     d4e:	ce 01       	movw	r24, r28
     d50:	d6 de       	rcall	.-596    	; 0xafe <_ZN3LCD7commandEh>
     d52:	68 e2       	ldi	r22, 0x28	; 40
     d54:	ce 01       	movw	r24, r28
     d56:	d3 de       	rcall	.-602    	; 0xafe <_ZN3LCD7commandEh>
     d58:	61 e0       	ldi	r22, 0x01	; 1
     d5a:	ce 01       	movw	r24, r28
     d5c:	d0 de       	rcall	.-608    	; 0xafe <_ZN3LCD7commandEh>
     d5e:	8f e1       	ldi	r24, 0x1F	; 31
     d60:	9e e4       	ldi	r25, 0x4E	; 78
     d62:	01 97       	sbiw	r24, 0x01	; 1
     d64:	f1 f7       	brne	.-4      	; 0xd62 <_ZN3LCD4initEh+0x11a>
     d66:	00 c0       	rjmp	.+0      	; 0xd68 <_ZN3LCD4initEh+0x120>
     d68:	00 00       	nop
     d6a:	66 e0       	ldi	r22, 0x06	; 6
     d6c:	ce 01       	movw	r24, r28
     d6e:	c7 de       	rcall	.-626    	; 0xafe <_ZN3LCD7commandEh>
     d70:	84 e0       	ldi	r24, 0x04	; 4
     d72:	89 87       	std	Y+9, r24	; 0x09
     d74:	df 91       	pop	r29
     d76:	cf 91       	pop	r28
     d78:	1f 91       	pop	r17
     d7a:	08 95       	ret

00000d7c <_ZN3LCDC1Eh10LCD_Type_th>:
     d7c:	0f 93       	push	r16
     d7e:	1f 93       	push	r17
     d80:	cf 93       	push	r28
     d82:	df 93       	push	r29
     d84:	ec 01       	movw	r28, r24
     d86:	86 2f       	mov	r24, r22
     d88:	04 2f       	mov	r16, r20
     d8a:	12 2f       	mov	r17, r18
     d8c:	0e 94 3f 11 	call	0x227e	; 0x227e <_Z22port_handle_to_addressh>
     d90:	9c 01       	movw	r18, r24
     d92:	2e 5f       	subi	r18, 0xFE	; 254
     d94:	3f 4f       	sbci	r19, 0xFF	; 255
     d96:	3b 83       	std	Y+3, r19	; 0x03
     d98:	2a 83       	std	Y+2, r18	; 0x02
     d9a:	24 e0       	ldi	r18, 0x04	; 4
     d9c:	29 87       	std	Y+9, r18	; 0x09
     d9e:	0c 83       	std	Y+4, r16	; 0x04
     da0:	40 2f       	mov	r20, r16
     da2:	50 e0       	ldi	r21, 0x00	; 0
     da4:	9a 01       	movw	r18, r20
     da6:	22 0f       	add	r18, r18
     da8:	33 1f       	adc	r19, r19
     daa:	42 0f       	add	r20, r18
     dac:	53 1f       	adc	r21, r19
     dae:	44 0f       	add	r20, r20
     db0:	55 1f       	adc	r21, r21
     db2:	4d 5c       	subi	r20, 0xCD	; 205
     db4:	5d 4f       	sbci	r21, 0xFD	; 253
     db6:	5e 83       	std	Y+6, r21	; 0x06
     db8:	4d 83       	std	Y+5, r20	; 0x05
     dba:	18 86       	std	Y+8, r1	; 0x08
     dbc:	1f 82       	std	Y+7, r1	; 0x07
     dbe:	21 2f       	mov	r18, r17
     dc0:	22 1f       	adc	r18, r18
     dc2:	22 27       	eor	r18, r18
     dc4:	22 1f       	adc	r18, r18
     dc6:	29 83       	std	Y+1, r18	; 0x01
     dc8:	2f ef       	ldi	r18, 0xFF	; 255
     dca:	fc 01       	movw	r30, r24
     dcc:	21 83       	std	Z+1, r18	; 0x01
     dce:	61 2f       	mov	r22, r17
     dd0:	6f 77       	andi	r22, 0x7F	; 127
     dd2:	68 83       	st	Y, r22
     dd4:	ce 01       	movw	r24, r28
     dd6:	38 df       	rcall	.-400    	; 0xc48 <_ZN3LCD4initEh>
     dd8:	df 91       	pop	r29
     dda:	cf 91       	pop	r28
     ddc:	1f 91       	pop	r17
     dde:	0f 91       	pop	r16
     de0:	08 95       	ret

00000de2 <_ZN3LCD10write_charEc>:
     de2:	0f 93       	push	r16
     de4:	1f 93       	push	r17
     de6:	cf 93       	push	r28
     de8:	df 93       	push	r29
     dea:	ec 01       	movw	r28, r24
     dec:	16 2f       	mov	r17, r22
     dee:	8c 81       	ldd	r24, Y+4	; 0x04
     df0:	89 30       	cpi	r24, 0x09	; 9
     df2:	11 f0       	breq	.+4      	; 0xdf8 <_ZN3LCD10write_charEc+0x16>
     df4:	ce 01       	movw	r24, r28
     df6:	f7 dd       	rcall	.-1042   	; 0x9e6 <_ZN3LCD10wait_readyEv>
     df8:	0f b7       	in	r16, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     dfa:	f8 94       	cli
     dfc:	81 2f       	mov	r24, r17
     dfe:	82 95       	swap	r24
     e00:	8f 70       	andi	r24, 0x0F	; 15
     e02:	80 64       	ori	r24, 0x40	; 64
     e04:	ea 81       	ldd	r30, Y+2	; 0x02
     e06:	fb 81       	ldd	r31, Y+3	; 0x03
     e08:	80 83       	st	Z, r24
     e0a:	ce 01       	movw	r24, r28
     e0c:	56 de       	rcall	.-852    	; 0xaba <_ZN3LCD6enableEv>
     e0e:	1f 70       	andi	r17, 0x0F	; 15
     e10:	10 64       	ori	r17, 0x40	; 64
     e12:	ea 81       	ldd	r30, Y+2	; 0x02
     e14:	fb 81       	ldd	r31, Y+3	; 0x03
     e16:	10 83       	st	Z, r17
     e18:	ce 01       	movw	r24, r28
     e1a:	4f de       	rcall	.-866    	; 0xaba <_ZN3LCD6enableEv>
     e1c:	ea 81       	ldd	r30, Y+2	; 0x02
     e1e:	fb 81       	ldd	r31, Y+3	; 0x03
     e20:	10 82       	st	Z, r1
     e22:	8c 81       	ldd	r24, Y+4	; 0x04
     e24:	89 30       	cpi	r24, 0x09	; 9
     e26:	31 f4       	brne	.+12     	; 0xe34 <_ZN3LCD10write_charEc+0x52>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     e28:	87 ec       	ldi	r24, 0xC7	; 199
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	01 97       	sbiw	r24, 0x01	; 1
     e2e:	f1 f7       	brne	.-4      	; 0xe2c <_ZN3LCD10write_charEc+0x4a>
     e30:	00 c0       	rjmp	.+0      	; 0xe32 <_ZN3LCD10write_charEc+0x50>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     e32:	00 00       	nop
     e34:	0f bf       	out	0x3f, r16	; 63
     e36:	ce 01       	movw	r24, r28
     e38:	e9 de       	rcall	.-558    	; 0xc0c <_ZN3LCD14advance_cursorEv>
     e3a:	df 91       	pop	r29
     e3c:	cf 91       	pop	r28
     e3e:	1f 91       	pop	r17
     e40:	0f 91       	pop	r16
     e42:	08 95       	ret

00000e44 <_ZL4idlev>:
     e44:	78 94       	sei
     e46:	83 b7       	in	r24, 0x33	; 51
     e48:	81 7f       	andi	r24, 0xF1	; 241
     e4a:	83 bf       	out	0x33, r24	; 51
     e4c:	83 b7       	in	r24, 0x33	; 51
     e4e:	81 60       	ori	r24, 0x01	; 1
     e50:	83 bf       	out	0x33, r24	; 51
     e52:	88 95       	sleep
     e54:	83 b7       	in	r24, 0x33	; 51
     e56:	8e 7f       	andi	r24, 0xFE	; 254
     e58:	83 bf       	out	0x33, r24	; 51
     e5a:	f4 cf       	rjmp	.-24     	; 0xe44 <_ZL4idlev>

00000e5c <_Z11task_insertPFvvE8Priority>:
     e5c:	78 2f       	mov	r23, r24
     e5e:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <_ZL14active_task_id>
     e62:	8f 3f       	cpi	r24, 0xFF	; 255
     e64:	39 f5       	brne	.+78     	; 0xeb4 <_Z11task_insertPFvvE8Priority+0x58>
     e66:	e3 e8       	ldi	r30, 0x83	; 131
     e68:	f6 e0       	ldi	r31, 0x06	; 6
     e6a:	20 eb       	ldi	r18, 0xB0	; 176
     e6c:	3c e1       	ldi	r19, 0x1C	; 28
     e6e:	80 83       	st	Z, r24
     e70:	e5 5d       	subi	r30, 0xD5	; 213
     e72:	fc 4f       	sbci	r31, 0xFC	; 252
     e74:	2e 17       	cp	r18, r30
     e76:	3f 07       	cpc	r19, r31
     e78:	d1 f7       	brne	.-12     	; 0xe6e <_Z11task_insertPFvvE8Priority+0x12>
     e7a:	4f b7       	in	r20, 0x3f	; 63
     e7c:	f8 94       	cli
     e7e:	e8 e5       	ldi	r30, 0x58	; 88
     e80:	f3 e0       	ldi	r31, 0x03	; 3
     e82:	10 82       	st	Z, r1
     e84:	84 e0       	ldi	r24, 0x04	; 4
     e86:	82 83       	std	Z+2, r24	; 0x02
     e88:	83 83       	std	Z+3, r24	; 0x03
     e8a:	14 82       	std	Z+4, r1	; 0x04
     e8c:	15 82       	std	Z+5, r1	; 0x05
     e8e:	16 82       	std	Z+6, r1	; 0x06
     e90:	17 82       	std	Z+7, r1	; 0x07
     e92:	81 e0       	ldi	r24, 0x01	; 1
     e94:	81 83       	std	Z+1, r24	; 0x01
     e96:	22 e2       	ldi	r18, 0x22	; 34
     e98:	37 e0       	ldi	r19, 0x07	; 7
     e9a:	20 93 82 06 	sts	0x0682, r18	; 0x800682 <_ZL7taskset+0x32a>
     e9e:	30 93 81 06 	sts	0x0681, r19	; 0x800681 <_ZL7taskset+0x329>
     ea2:	10 92 80 06 	sts	0x0680, r1	; 0x800680 <_ZL7taskset+0x328>
     ea6:	2f e5       	ldi	r18, 0x5F	; 95
     ea8:	36 e0       	ldi	r19, 0x06	; 6
     eaa:	32 87       	std	Z+10, r19	; 0x0a
     eac:	21 87       	std	Z+9, r18	; 0x09
     eae:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <_ZL14active_task_id>
     eb2:	4f bf       	out	0x3f, r20	; 63
     eb4:	5f b7       	in	r21, 0x3f	; 63
     eb6:	f8 94       	cli
     eb8:	20 91 83 06 	lds	r18, 0x0683	; 0x800683 <_ZL7taskset+0x32b>
     ebc:	2f 3f       	cpi	r18, 0xFF	; 255
     ebe:	51 f0       	breq	.+20     	; 0xed4 <_Z11task_insertPFvvE8Priority+0x78>
     ec0:	ee ea       	ldi	r30, 0xAE	; 174
     ec2:	f9 e0       	ldi	r31, 0x09	; 9
     ec4:	22 e0       	ldi	r18, 0x02	; 2
     ec6:	30 e0       	ldi	r19, 0x00	; 0
     ec8:	82 2f       	mov	r24, r18
     eca:	d9 01       	movw	r26, r18
     ecc:	40 81       	ld	r20, Z
     ece:	4f 3f       	cpi	r20, 0xFF	; 255
     ed0:	31 f5       	brne	.+76     	; 0xf1e <_Z11task_insertPFvvE8Priority+0xc2>
     ed2:	03 c0       	rjmp	.+6      	; 0xeda <_Z11task_insertPFvvE8Priority+0x7e>
     ed4:	a1 e0       	ldi	r26, 0x01	; 1
     ed6:	b0 e0       	ldi	r27, 0x00	; 0
     ed8:	81 e0       	ldi	r24, 0x01	; 1
     eda:	eb e2       	ldi	r30, 0x2B	; 43
     edc:	f3 e0       	ldi	r31, 0x03	; 3
     ede:	ae 9f       	mul	r26, r30
     ee0:	90 01       	movw	r18, r0
     ee2:	af 9f       	mul	r26, r31
     ee4:	30 0d       	add	r19, r0
     ee6:	be 9f       	mul	r27, r30
     ee8:	30 0d       	add	r19, r0
     eea:	11 24       	eor	r1, r1
     eec:	f9 01       	movw	r30, r18
     eee:	e8 5a       	subi	r30, 0xA8	; 168
     ef0:	fc 4f       	sbci	r31, 0xFC	; 252
     ef2:	80 83       	st	Z, r24
     ef4:	62 83       	std	Z+2, r22	; 0x02
     ef6:	63 83       	std	Z+3, r22	; 0x03
     ef8:	14 82       	std	Z+4, r1	; 0x04
     efa:	15 82       	std	Z+5, r1	; 0x05
     efc:	16 82       	std	Z+6, r1	; 0x06
     efe:	17 82       	std	Z+7, r1	; 0x07
     f00:	41 e0       	ldi	r20, 0x01	; 1
     f02:	41 83       	std	Z+1, r20	; 0x01
     f04:	df 01       	movw	r26, r30
     f06:	a6 5d       	subi	r26, 0xD6	; 214
     f08:	bc 4f       	sbci	r27, 0xFC	; 252
     f0a:	7c 93       	st	X, r23
     f0c:	11 97       	sbiw	r26, 0x01	; 1
     f0e:	9c 93       	st	X, r25
     f10:	11 97       	sbiw	r26, 0x01	; 1
     f12:	1c 92       	st	X, r1
     f14:	21 5a       	subi	r18, 0xA1	; 161
     f16:	39 4f       	sbci	r19, 0xF9	; 249
     f18:	32 87       	std	Z+10, r19	; 0x0a
     f1a:	21 87       	std	Z+9, r18	; 0x09
     f1c:	08 c0       	rjmp	.+16     	; 0xf2e <_Z11task_insertPFvvE8Priority+0xd2>
     f1e:	2f 5f       	subi	r18, 0xFF	; 255
     f20:	3f 4f       	sbci	r19, 0xFF	; 255
     f22:	e5 5d       	subi	r30, 0xD5	; 213
     f24:	fc 4f       	sbci	r31, 0xFC	; 252
     f26:	28 30       	cpi	r18, 0x08	; 8
     f28:	31 05       	cpc	r19, r1
     f2a:	71 f6       	brne	.-100    	; 0xec8 <_Z11task_insertPFvvE8Priority+0x6c>
     f2c:	8f ef       	ldi	r24, 0xFF	; 255
     f2e:	5f bf       	out	0x3f, r21	; 63
     f30:	08 95       	ret

00000f32 <_Z8activateh>:
     f32:	9f ef       	ldi	r25, 0xFF	; 255
     f34:	98 0f       	add	r25, r24
     f36:	97 30       	cpi	r25, 0x07	; 7
     f38:	f8 f4       	brcc	.+62     	; 0xf78 <_Z8activateh+0x46>
     f3a:	4f b7       	in	r20, 0x3f	; 63
     f3c:	f8 94       	cli
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	2b e2       	ldi	r18, 0x2B	; 43
     f42:	33 e0       	ldi	r19, 0x03	; 3
     f44:	82 9f       	mul	r24, r18
     f46:	f0 01       	movw	r30, r0
     f48:	83 9f       	mul	r24, r19
     f4a:	f0 0d       	add	r31, r0
     f4c:	92 9f       	mul	r25, r18
     f4e:	f0 0d       	add	r31, r0
     f50:	11 24       	eor	r1, r1
     f52:	e8 5a       	subi	r30, 0xA8	; 168
     f54:	fc 4f       	sbci	r31, 0xFC	; 252
     f56:	20 81       	ld	r18, Z
     f58:	2f 3f       	cpi	r18, 0xFF	; 255
     f5a:	69 f0       	breq	.+26     	; 0xf76 <_Z8activateh+0x44>
     f5c:	2b e2       	ldi	r18, 0x2B	; 43
     f5e:	33 e0       	ldi	r19, 0x03	; 3
     f60:	82 9f       	mul	r24, r18
     f62:	f0 01       	movw	r30, r0
     f64:	83 9f       	mul	r24, r19
     f66:	f0 0d       	add	r31, r0
     f68:	92 9f       	mul	r25, r18
     f6a:	f0 0d       	add	r31, r0
     f6c:	11 24       	eor	r1, r1
     f6e:	e8 5a       	subi	r30, 0xA8	; 168
     f70:	fc 4f       	sbci	r31, 0xFC	; 252
     f72:	81 e0       	ldi	r24, 0x01	; 1
     f74:	81 83       	std	Z+1, r24	; 0x01
     f76:	4f bf       	out	0x3f, r20	; 63
     f78:	08 95       	ret

00000f7a <_Z9is_activeh>:
     f7a:	9f ef       	ldi	r25, 0xFF	; 255
     f7c:	98 0f       	add	r25, r24
     f7e:	97 30       	cpi	r25, 0x07	; 7
     f80:	78 f4       	brcc	.+30     	; 0xfa0 <_Z9is_activeh+0x26>
     f82:	2b e2       	ldi	r18, 0x2B	; 43
     f84:	33 e0       	ldi	r19, 0x03	; 3
     f86:	82 9f       	mul	r24, r18
     f88:	f0 01       	movw	r30, r0
     f8a:	83 9f       	mul	r24, r19
     f8c:	f0 0d       	add	r31, r0
     f8e:	11 24       	eor	r1, r1
     f90:	e8 5a       	subi	r30, 0xA8	; 168
     f92:	fc 4f       	sbci	r31, 0xFC	; 252
     f94:	81 e0       	ldi	r24, 0x01	; 1
     f96:	91 81       	ldd	r25, Z+1	; 0x01
     f98:	92 30       	cpi	r25, 0x02	; 2
     f9a:	19 f4       	brne	.+6      	; 0xfa2 <_Z9is_activeh+0x28>
     f9c:	80 e0       	ldi	r24, 0x00	; 0
     f9e:	08 95       	ret
     fa0:	80 e0       	ldi	r24, 0x00	; 0
     fa2:	08 95       	ret

00000fa4 <_Z6kernel14SchedulingTypePFvhE>:
     fa4:	80 93 46 03 	sts	0x0346, r24	; 0x800346 <_ZL10sched_type>
     fa8:	70 93 45 03 	sts	0x0345, r23	; 0x800345 <_ZL8exitproc+0x1>
     fac:	60 93 44 03 	sts	0x0344, r22	; 0x800344 <_ZL8exitproc>
     fb0:	6f e0       	ldi	r22, 0x0F	; 15
     fb2:	70 e0       	ldi	r23, 0x00	; 0
     fb4:	87 e4       	ldi	r24, 0x47	; 71
     fb6:	93 e0       	ldi	r25, 0x03	; 3
     fb8:	0e 94 a3 10 	call	0x2146	; 0x2146 <_ZN7OSTimer5startEj>
     fbc:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <_ZL14active_task_id>
     fc0:	10 92 59 03 	sts	0x0359, r1	; 0x800359 <_ZL7taskset+0x1>
     fc4:	78 94       	sei
     fc6:	87 e4       	ldi	r24, 0x47	; 71
     fc8:	93 e0       	ldi	r25, 0x03	; 3
     fca:	0e 94 77 10 	call	0x20ee	; 0x20ee <_ZN7OSTimer13force_timeoutEv>
     fce:	ff cf       	rjmp	.-2      	; 0xfce <_Z6kernel14SchedulingTypePFvhE+0x2a>

00000fd0 <_Z5yieldv>:
     fd0:	80 91 46 03 	lds	r24, 0x0346	; 0x800346 <_ZL10sched_type>
     fd4:	81 30       	cpi	r24, 0x01	; 1
     fd6:	61 f4       	brne	.+24     	; 0xff0 <_Z5yieldv+0x20>
     fd8:	78 94       	sei
     fda:	83 b7       	in	r24, 0x33	; 51
     fdc:	81 7f       	andi	r24, 0xF1	; 241
     fde:	83 bf       	out	0x33, r24	; 51
     fe0:	83 b7       	in	r24, 0x33	; 51
     fe2:	81 60       	ori	r24, 0x01	; 1
     fe4:	83 bf       	out	0x33, r24	; 51
     fe6:	88 95       	sleep
     fe8:	83 b7       	in	r24, 0x33	; 51
     fea:	8e 7f       	andi	r24, 0xFE	; 254
     fec:	83 bf       	out	0x33, r24	; 51
     fee:	08 95       	ret
     ff0:	87 e4       	ldi	r24, 0x47	; 71
     ff2:	93 e0       	ldi	r25, 0x03	; 3
     ff4:	0e 94 77 10 	call	0x20ee	; 0x20ee <_ZN7OSTimer13force_timeoutEv>
     ff8:	90 91 2c 02 	lds	r25, 0x022C	; 0x80022c <_ZL14active_task_id>
     ffc:	2b e2       	ldi	r18, 0x2B	; 43
     ffe:	33 e0       	ldi	r19, 0x03	; 3
    1000:	92 9f       	mul	r25, r18
    1002:	f0 01       	movw	r30, r0
    1004:	93 9f       	mul	r25, r19
    1006:	f0 0d       	add	r31, r0
    1008:	11 24       	eor	r1, r1
    100a:	e8 5a       	subi	r30, 0xA8	; 168
    100c:	fc 4f       	sbci	r31, 0xFC	; 252
    100e:	44 81       	ldd	r20, Z+4	; 0x04
    1010:	55 81       	ldd	r21, Z+5	; 0x05
    1012:	66 81       	ldd	r22, Z+6	; 0x06
    1014:	77 81       	ldd	r23, Z+7	; 0x07
    1016:	48 0f       	add	r20, r24
    1018:	51 1d       	adc	r21, r1
    101a:	61 1d       	adc	r22, r1
    101c:	71 1d       	adc	r23, r1
    101e:	44 83       	std	Z+4, r20	; 0x04
    1020:	55 83       	std	Z+5, r21	; 0x05
    1022:	66 83       	std	Z+6, r22	; 0x06
    1024:	77 83       	std	Z+7, r23	; 0x07
    1026:	08 95       	ret

00001028 <_Z10deactivateh>:
    1028:	9f ef       	ldi	r25, 0xFF	; 255
    102a:	98 0f       	add	r25, r24
    102c:	97 30       	cpi	r25, 0x07	; 7
    102e:	f0 f4       	brcc	.+60     	; 0x106c <_Z10deactivateh+0x44>
    1030:	6f b7       	in	r22, 0x3f	; 63
    1032:	f8 94       	cli
    1034:	28 2f       	mov	r18, r24
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	4b e2       	ldi	r20, 0x2B	; 43
    103a:	53 e0       	ldi	r21, 0x03	; 3
    103c:	24 9f       	mul	r18, r20
    103e:	f0 01       	movw	r30, r0
    1040:	25 9f       	mul	r18, r21
    1042:	f0 0d       	add	r31, r0
    1044:	34 9f       	mul	r19, r20
    1046:	f0 0d       	add	r31, r0
    1048:	11 24       	eor	r1, r1
    104a:	e8 5a       	subi	r30, 0xA8	; 168
    104c:	fc 4f       	sbci	r31, 0xFC	; 252
    104e:	90 81       	ld	r25, Z
    1050:	9f 3f       	cpi	r25, 0xFF	; 255
    1052:	59 f0       	breq	.+22     	; 0x106a <_Z10deactivateh+0x42>
    1054:	24 9f       	mul	r18, r20
    1056:	f0 01       	movw	r30, r0
    1058:	25 9f       	mul	r18, r21
    105a:	f0 0d       	add	r31, r0
    105c:	34 9f       	mul	r19, r20
    105e:	f0 0d       	add	r31, r0
    1060:	11 24       	eor	r1, r1
    1062:	e8 5a       	subi	r30, 0xA8	; 168
    1064:	fc 4f       	sbci	r31, 0xFC	; 252
    1066:	92 e0       	ldi	r25, 0x02	; 2
    1068:	91 83       	std	Z+1, r25	; 0x01
    106a:	6f bf       	out	0x3f, r22	; 63
    106c:	90 91 2c 02 	lds	r25, 0x022C	; 0x80022c <_ZL14active_task_id>
    1070:	89 13       	cpse	r24, r25
    1072:	01 c0       	rjmp	.+2      	; 0x1076 <_Z10deactivateh+0x4e>
    1074:	ad cf       	rjmp	.-166    	; 0xfd0 <_Z5yieldv>
    1076:	08 95       	ret

00001078 <_Z15current_task_idv>:
    1078:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <_ZL14active_task_id>
    107c:	08 95       	ret

0000107e <_Z8sem_waith>:
    107e:	20 91 43 03 	lds	r18, 0x0343	; 0x800343 <_ZL17sem_waiting_count>
    1082:	28 30       	cpi	r18, 0x08	; 8
    1084:	99 f1       	breq	.+102    	; 0x10ec <_Z8sem_waith+0x6e>
    1086:	22 23       	and	r18, r18
    1088:	29 f0       	breq	.+10     	; 0x1094 <_Z8sem_waith+0x16>
    108a:	90 91 24 02 	lds	r25, 0x0224	; 0x800224 <_ZL16sem_waiting_list>
    108e:	89 13       	cpse	r24, r25
    1090:	0b c0       	rjmp	.+22     	; 0x10a8 <_Z8sem_waith+0x2a>
    1092:	08 95       	ret
    1094:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <_ZL16sem_waiting_list>
    1098:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <_ZL18sem_waiting_oldest>
    109c:	81 e0       	ldi	r24, 0x01	; 1
    109e:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <_ZL22sem_waiting_free_index>
    10a2:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <_ZL17sem_waiting_count>
    10a6:	08 95       	ret
    10a8:	e5 e2       	ldi	r30, 0x25	; 37
    10aa:	f2 e0       	ldi	r31, 0x02	; 2
    10ac:	4c e2       	ldi	r20, 0x2C	; 44
    10ae:	52 e0       	ldi	r21, 0x02	; 2
    10b0:	91 91       	ld	r25, Z+
    10b2:	89 17       	cp	r24, r25
    10b4:	d9 f0       	breq	.+54     	; 0x10ec <_Z8sem_waith+0x6e>
    10b6:	e4 17       	cp	r30, r20
    10b8:	f5 07       	cpc	r31, r21
    10ba:	d1 f7       	brne	.-12     	; 0x10b0 <_Z8sem_waith+0x32>
    10bc:	e0 91 42 03 	lds	r30, 0x0342	; 0x800342 <_ZL22sem_waiting_free_index>
    10c0:	e8 30       	cpi	r30, 0x08	; 8
    10c2:	48 f0       	brcs	.+18     	; 0x10d6 <_Z8sem_waith+0x58>
    10c4:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <_ZL16sem_waiting_list>
    10c8:	81 e0       	ldi	r24, 0x01	; 1
    10ca:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <_ZL22sem_waiting_free_index>
    10ce:	2f 5f       	subi	r18, 0xFF	; 255
    10d0:	20 93 43 03 	sts	0x0343, r18	; 0x800343 <_ZL17sem_waiting_count>
    10d4:	08 95       	ret
    10d6:	91 e0       	ldi	r25, 0x01	; 1
    10d8:	9e 0f       	add	r25, r30
    10da:	90 93 42 03 	sts	0x0342, r25	; 0x800342 <_ZL22sem_waiting_free_index>
    10de:	f0 e0       	ldi	r31, 0x00	; 0
    10e0:	ec 5d       	subi	r30, 0xDC	; 220
    10e2:	fd 4f       	sbci	r31, 0xFD	; 253
    10e4:	80 83       	st	Z, r24
    10e6:	2f 5f       	subi	r18, 0xFF	; 255
    10e8:	20 93 43 03 	sts	0x0343, r18	; 0x800343 <_ZL17sem_waiting_count>
    10ec:	08 95       	ret

000010ee <_Z11sem_waitingv>:
    10ee:	90 91 43 03 	lds	r25, 0x0343	; 0x800343 <_ZL17sem_waiting_count>
    10f2:	99 23       	and	r25, r25
    10f4:	a9 f0       	breq	.+42     	; 0x1120 <_Z11sem_waitingv+0x32>
    10f6:	20 91 41 03 	lds	r18, 0x0341	; 0x800341 <_ZL18sem_waiting_oldest>
    10fa:	e2 2f       	mov	r30, r18
    10fc:	f0 e0       	ldi	r31, 0x00	; 0
    10fe:	ec 5d       	subi	r30, 0xDC	; 220
    1100:	fd 4f       	sbci	r31, 0xFD	; 253
    1102:	80 81       	ld	r24, Z
    1104:	3f ef       	ldi	r19, 0xFF	; 255
    1106:	30 83       	st	Z, r19
    1108:	91 50       	subi	r25, 0x01	; 1
    110a:	90 93 43 03 	sts	0x0343, r25	; 0x800343 <_ZL17sem_waiting_count>
    110e:	2f 5f       	subi	r18, 0xFF	; 255
    1110:	28 30       	cpi	r18, 0x08	; 8
    1112:	18 f4       	brcc	.+6      	; 0x111a <_Z11sem_waitingv+0x2c>
    1114:	20 93 41 03 	sts	0x0341, r18	; 0x800341 <_ZL18sem_waiting_oldest>
    1118:	08 95       	ret
    111a:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <_ZL18sem_waiting_oldest>
    111e:	08 95       	ret
    1120:	8f ef       	ldi	r24, 0xFF	; 255
    1122:	08 95       	ret

00001124 <__vector_23>:
    1124:	ff 93       	push	r31
    1126:	ef 93       	push	r30
    1128:	df 93       	push	r29
    112a:	cf 93       	push	r28
    112c:	bf 93       	push	r27
    112e:	af 93       	push	r26
    1130:	9f 93       	push	r25
    1132:	8f 93       	push	r24
    1134:	7f 93       	push	r23
    1136:	6f 93       	push	r22
    1138:	5f 93       	push	r21
    113a:	4f 93       	push	r20
    113c:	3f 93       	push	r19
    113e:	2f 93       	push	r18
    1140:	1f 93       	push	r17
    1142:	0f 93       	push	r16
    1144:	ff 92       	push	r15
    1146:	ef 92       	push	r14
    1148:	df 92       	push	r13
    114a:	cf 92       	push	r12
    114c:	bf 92       	push	r11
    114e:	af 92       	push	r10
    1150:	9f 92       	push	r9
    1152:	8f 92       	push	r8
    1154:	7f 92       	push	r7
    1156:	6f 92       	push	r6
    1158:	5f 92       	push	r5
    115a:	4f 92       	push	r4
    115c:	3f 92       	push	r3
    115e:	2f 92       	push	r2
    1160:	1f 92       	push	r1
    1162:	0f 92       	push	r0
    1164:	c0 91 2c 02 	lds	r28, 0x022C	; 0x80022c <_ZL14active_task_id>
    1168:	2c 2f       	mov	r18, r28
    116a:	30 e0       	ldi	r19, 0x00	; 0
    116c:	8f b7       	in	r24, 0x3f	; 63
    116e:	4b e2       	ldi	r20, 0x2B	; 43
    1170:	53 e0       	ldi	r21, 0x03	; 3
    1172:	24 9f       	mul	r18, r20
    1174:	f0 01       	movw	r30, r0
    1176:	25 9f       	mul	r18, r21
    1178:	f0 0d       	add	r31, r0
    117a:	34 9f       	mul	r19, r20
    117c:	f0 0d       	add	r31, r0
    117e:	11 24       	eor	r1, r1
    1180:	e8 5a       	subi	r30, 0xA8	; 168
    1182:	fc 4f       	sbci	r31, 0xFC	; 252
    1184:	80 87       	std	Z+8, r24	; 0x08
    1186:	8d b7       	in	r24, 0x3d	; 61
    1188:	9e b7       	in	r25, 0x3e	; 62
    118a:	92 87       	std	Z+10, r25	; 0x0a
    118c:	81 87       	std	Z+9, r24	; 0x09
    118e:	84 81       	ldd	r24, Z+4	; 0x04
    1190:	95 81       	ldd	r25, Z+5	; 0x05
    1192:	a6 81       	ldd	r26, Z+6	; 0x06
    1194:	b7 81       	ldd	r27, Z+7	; 0x07
    1196:	8f 51       	subi	r24, 0x1F	; 31
    1198:	9f 4f       	sbci	r25, 0xFF	; 255
    119a:	af 4f       	sbci	r26, 0xFF	; 255
    119c:	bf 4f       	sbci	r27, 0xFF	; 255
    119e:	84 83       	std	Z+4, r24	; 0x04
    11a0:	95 83       	std	Z+5, r25	; 0x05
    11a2:	a6 83       	std	Z+6, r26	; 0x06
    11a4:	b7 83       	std	Z+7, r27	; 0x07
    11a6:	81 81       	ldd	r24, Z+1	; 0x01
    11a8:	81 11       	cpse	r24, r1
    11aa:	0d c0       	rjmp	.+26     	; 0x11c6 <__vector_23+0xa2>
    11ac:	8b e2       	ldi	r24, 0x2B	; 43
    11ae:	93 e0       	ldi	r25, 0x03	; 3
    11b0:	28 9f       	mul	r18, r24
    11b2:	f0 01       	movw	r30, r0
    11b4:	29 9f       	mul	r18, r25
    11b6:	f0 0d       	add	r31, r0
    11b8:	38 9f       	mul	r19, r24
    11ba:	f0 0d       	add	r31, r0
    11bc:	11 24       	eor	r1, r1
    11be:	e8 5a       	subi	r30, 0xA8	; 168
    11c0:	fc 4f       	sbci	r31, 0xFC	; 252
    11c2:	81 e0       	ldi	r24, 0x01	; 1
    11c4:	81 83       	std	Z+1, r24	; 0x01
    11c6:	93 df       	rcall	.-218    	; 0x10ee <_Z11sem_waitingv>
    11c8:	8f 3f       	cpi	r24, 0xFF	; 255
    11ca:	19 f0       	breq	.+6      	; 0x11d2 <__vector_23+0xae>
    11cc:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <_ZL14active_task_id>
    11d0:	41 c0       	rjmp	.+130    	; 0x1254 <__vector_23+0x130>
    11d2:	8c 2f       	mov	r24, r28
    11d4:	4b e2       	ldi	r20, 0x2B	; 43
    11d6:	53 e0       	ldi	r21, 0x03	; 3
    11d8:	8f 5f       	subi	r24, 0xFF	; 255
    11da:	88 30       	cpi	r24, 0x08	; 8
    11dc:	08 f0       	brcs	.+2      	; 0x11e0 <__vector_23+0xbc>
    11de:	81 e0       	ldi	r24, 0x01	; 1
    11e0:	28 2f       	mov	r18, r24
    11e2:	30 e0       	ldi	r19, 0x00	; 0
    11e4:	24 9f       	mul	r18, r20
    11e6:	f0 01       	movw	r30, r0
    11e8:	25 9f       	mul	r18, r21
    11ea:	f0 0d       	add	r31, r0
    11ec:	34 9f       	mul	r19, r20
    11ee:	f0 0d       	add	r31, r0
    11f0:	11 24       	eor	r1, r1
    11f2:	e8 5a       	subi	r30, 0xA8	; 168
    11f4:	fc 4f       	sbci	r31, 0xFC	; 252
    11f6:	91 81       	ldd	r25, Z+1	; 0x01
    11f8:	91 30       	cpi	r25, 0x01	; 1
    11fa:	41 f5       	brne	.+80     	; 0x124c <__vector_23+0x128>
    11fc:	24 9f       	mul	r18, r20
    11fe:	f0 01       	movw	r30, r0
    1200:	25 9f       	mul	r18, r21
    1202:	f0 0d       	add	r31, r0
    1204:	34 9f       	mul	r19, r20
    1206:	f0 0d       	add	r31, r0
    1208:	11 24       	eor	r1, r1
    120a:	e8 5a       	subi	r30, 0xA8	; 168
    120c:	fc 4f       	sbci	r31, 0xFC	; 252
    120e:	93 81       	ldd	r25, Z+3	; 0x03
    1210:	99 23       	and	r25, r25
    1212:	61 f0       	breq	.+24     	; 0x122c <__vector_23+0x108>
    1214:	24 9f       	mul	r18, r20
    1216:	f0 01       	movw	r30, r0
    1218:	25 9f       	mul	r18, r21
    121a:	f0 0d       	add	r31, r0
    121c:	34 9f       	mul	r19, r20
    121e:	f0 0d       	add	r31, r0
    1220:	11 24       	eor	r1, r1
    1222:	e8 5a       	subi	r30, 0xA8	; 168
    1224:	fc 4f       	sbci	r31, 0xFC	; 252
    1226:	91 50       	subi	r25, 0x01	; 1
    1228:	93 83       	std	Z+3, r25	; 0x03
    122a:	d6 cf       	rjmp	.-84     	; 0x11d8 <__vector_23+0xb4>
    122c:	4b e2       	ldi	r20, 0x2B	; 43
    122e:	53 e0       	ldi	r21, 0x03	; 3
    1230:	24 9f       	mul	r18, r20
    1232:	f0 01       	movw	r30, r0
    1234:	25 9f       	mul	r18, r21
    1236:	f0 0d       	add	r31, r0
    1238:	34 9f       	mul	r19, r20
    123a:	f0 0d       	add	r31, r0
    123c:	11 24       	eor	r1, r1
    123e:	e8 5a       	subi	r30, 0xA8	; 168
    1240:	fc 4f       	sbci	r31, 0xFC	; 252
    1242:	92 81       	ldd	r25, Z+2	; 0x02
    1244:	93 83       	std	Z+3, r25	; 0x03
    1246:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <_ZL14active_task_id>
    124a:	04 c0       	rjmp	.+8      	; 0x1254 <__vector_23+0x130>
    124c:	8c 13       	cpse	r24, r28
    124e:	c4 cf       	rjmp	.-120    	; 0x11d8 <__vector_23+0xb4>
    1250:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <_ZL14active_task_id>
    1254:	20 91 2c 02 	lds	r18, 0x022C	; 0x80022c <_ZL14active_task_id>
    1258:	8b e2       	ldi	r24, 0x2B	; 43
    125a:	93 e0       	ldi	r25, 0x03	; 3
    125c:	28 9f       	mul	r18, r24
    125e:	f0 01       	movw	r30, r0
    1260:	29 9f       	mul	r18, r25
    1262:	f0 0d       	add	r31, r0
    1264:	11 24       	eor	r1, r1
    1266:	e8 5a       	subi	r30, 0xA8	; 168
    1268:	fc 4f       	sbci	r31, 0xFC	; 252
    126a:	11 82       	std	Z+1, r1	; 0x01
    126c:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    126e:	f8 94       	cli
    1270:	40 91 49 03 	lds	r20, 0x0349	; 0x800349 <_ZL8OS_timer+0x2>
    1274:	50 91 4a 03 	lds	r21, 0x034A	; 0x80034a <_ZL8OS_timer+0x3>
    1278:	20 91 a7 02 	lds	r18, 0x02A7	; 0x8002a7 <tc_vect>
    127c:	30 91 a8 02 	lds	r19, 0x02A8	; 0x8002a8 <tc_vect+0x1>
    1280:	42 17       	cp	r20, r18
    1282:	53 07       	cpc	r21, r19
    1284:	51 f4       	brne	.+20     	; 0x129a <__vector_23+0x176>
    1286:	e7 e4       	ldi	r30, 0x47	; 71
    1288:	f3 e0       	ldi	r31, 0x03	; 3
    128a:	a4 81       	ldd	r26, Z+4	; 0x04
    128c:	b5 81       	ldd	r27, Z+5	; 0x05
    128e:	8c 91       	ld	r24, X
    1290:	85 60       	ori	r24, 0x05	; 5
    1292:	8c 93       	st	X, r24
    1294:	80 89       	ldd	r24, Z+16	; 0x10
    1296:	86 bd       	out	0x26, r24	; 38
    1298:	0a c0       	rjmp	.+20     	; 0x12ae <__vector_23+0x18a>
    129a:	e7 e4       	ldi	r30, 0x47	; 71
    129c:	f3 e0       	ldi	r31, 0x03	; 3
    129e:	a4 81       	ldd	r26, Z+4	; 0x04
    12a0:	b5 81       	ldd	r27, Z+5	; 0x05
    12a2:	8c 91       	ld	r24, X
    12a4:	87 60       	ori	r24, 0x07	; 7
    12a6:	8c 93       	st	X, r24
    12a8:	80 89       	ldd	r24, Z+16	; 0x10
    12aa:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    12ae:	9f bf       	out	0x3f, r25	; 63
    12b0:	20 91 2c 02 	lds	r18, 0x022C	; 0x80022c <_ZL14active_task_id>
    12b4:	8b e2       	ldi	r24, 0x2B	; 43
    12b6:	93 e0       	ldi	r25, 0x03	; 3
    12b8:	28 9f       	mul	r18, r24
    12ba:	f0 01       	movw	r30, r0
    12bc:	29 9f       	mul	r18, r25
    12be:	f0 0d       	add	r31, r0
    12c0:	11 24       	eor	r1, r1
    12c2:	e8 5a       	subi	r30, 0xA8	; 168
    12c4:	fc 4f       	sbci	r31, 0xFC	; 252
    12c6:	20 85       	ldd	r18, Z+8	; 0x08
    12c8:	2f bf       	out	0x3f, r18	; 63
    12ca:	20 91 2c 02 	lds	r18, 0x022C	; 0x80022c <_ZL14active_task_id>
    12ce:	28 9f       	mul	r18, r24
    12d0:	f0 01       	movw	r30, r0
    12d2:	29 9f       	mul	r18, r25
    12d4:	f0 0d       	add	r31, r0
    12d6:	11 24       	eor	r1, r1
    12d8:	e8 5a       	subi	r30, 0xA8	; 168
    12da:	fc 4f       	sbci	r31, 0xFC	; 252
    12dc:	81 85       	ldd	r24, Z+9	; 0x09
    12de:	92 85       	ldd	r25, Z+10	; 0x0a
    12e0:	9e bf       	out	0x3e, r25	; 62
    12e2:	8d bf       	out	0x3d, r24	; 61
    12e4:	0f 90       	pop	r0
    12e6:	1f 90       	pop	r1
    12e8:	2f 90       	pop	r2
    12ea:	3f 90       	pop	r3
    12ec:	4f 90       	pop	r4
    12ee:	5f 90       	pop	r5
    12f0:	6f 90       	pop	r6
    12f2:	7f 90       	pop	r7
    12f4:	8f 90       	pop	r8
    12f6:	9f 90       	pop	r9
    12f8:	af 90       	pop	r10
    12fa:	bf 90       	pop	r11
    12fc:	cf 90       	pop	r12
    12fe:	df 90       	pop	r13
    1300:	ef 90       	pop	r14
    1302:	ff 90       	pop	r15
    1304:	0f 91       	pop	r16
    1306:	1f 91       	pop	r17
    1308:	2f 91       	pop	r18
    130a:	3f 91       	pop	r19
    130c:	4f 91       	pop	r20
    130e:	5f 91       	pop	r21
    1310:	6f 91       	pop	r22
    1312:	7f 91       	pop	r23
    1314:	8f 91       	pop	r24
    1316:	9f 91       	pop	r25
    1318:	af 91       	pop	r26
    131a:	bf 91       	pop	r27
    131c:	cf 91       	pop	r28
    131e:	df 91       	pop	r29
    1320:	ef 91       	pop	r30
    1322:	ff 91       	pop	r31
    1324:	18 95       	reti

00001326 <_GLOBAL__sub_I__Z11task_insertPFvvE8Priority>:
    1326:	60 e0       	ldi	r22, 0x00	; 0
    1328:	87 e4       	ldi	r24, 0x47	; 71
    132a:	93 e0       	ldi	r25, 0x03	; 3
    132c:	bc c6       	rjmp	.+3448   	; 0x20a6 <_ZN7OSTimerC1Eh>
    132e:	08 95       	ret

00001330 <_ZN6Timer88notify_AEv>:
    1330:	cf 93       	push	r28
    1332:	df 93       	push	r29
    1334:	ec 01       	movw	r28, r24
    1336:	e8 85       	ldd	r30, Y+8	; 0x08
    1338:	f9 85       	ldd	r31, Y+9	; 0x09
    133a:	30 97       	sbiw	r30, 0x00	; 0
    133c:	09 f0       	breq	.+2      	; 0x1340 <_ZN6Timer88notify_AEv+0x10>
    133e:	19 95       	eicall
    1340:	8a 85       	ldd	r24, Y+10	; 0x0a
    1342:	9b 85       	ldd	r25, Y+11	; 0x0b
    1344:	89 2b       	or	r24, r25
    1346:	39 f4       	brne	.+14     	; 0x1356 <_ZN6Timer88notify_AEv+0x26>
    1348:	e8 81       	ld	r30, Y
    134a:	f9 81       	ldd	r31, Y+1	; 0x01
    134c:	01 90       	ld	r0, Z+
    134e:	f0 81       	ld	r31, Z
    1350:	e0 2d       	mov	r30, r0
    1352:	ce 01       	movw	r24, r28
    1354:	19 95       	eicall
    1356:	df 91       	pop	r29
    1358:	cf 91       	pop	r28
    135a:	08 95       	ret

0000135c <_ZN6Timer88notify_BEv>:
    135c:	cf 93       	push	r28
    135e:	df 93       	push	r29
    1360:	ec 01       	movw	r28, r24
    1362:	ea 85       	ldd	r30, Y+10	; 0x0a
    1364:	fb 85       	ldd	r31, Y+11	; 0x0b
    1366:	30 97       	sbiw	r30, 0x00	; 0
    1368:	09 f0       	breq	.+2      	; 0x136c <_ZN6Timer88notify_BEv+0x10>
    136a:	19 95       	eicall
    136c:	8e 85       	ldd	r24, Y+14	; 0x0e
    136e:	9f 85       	ldd	r25, Y+15	; 0x0f
    1370:	89 2b       	or	r24, r25
    1372:	39 f4       	brne	.+14     	; 0x1382 <_ZN6Timer88notify_BEv+0x26>
    1374:	e8 81       	ld	r30, Y
    1376:	f9 81       	ldd	r31, Y+1	; 0x01
    1378:	01 90       	ld	r0, Z+
    137a:	f0 81       	ld	r31, Z
    137c:	e0 2d       	mov	r30, r0
    137e:	ce 01       	movw	r24, r28
    1380:	19 95       	eicall
    1382:	df 91       	pop	r29
    1384:	cf 91       	pop	r28
    1386:	08 95       	ret

00001388 <_ZN6Timer88notify_CEv>:
    1388:	08 95       	ret

0000138a <_ZN6Timer88notify_OEv>:
    138a:	cf 93       	push	r28
    138c:	df 93       	push	r29
    138e:	ec 01       	movw	r28, r24
    1390:	ee 85       	ldd	r30, Y+14	; 0x0e
    1392:	ff 85       	ldd	r31, Y+15	; 0x0f
    1394:	30 97       	sbiw	r30, 0x00	; 0
    1396:	09 f0       	breq	.+2      	; 0x139a <_ZN6Timer88notify_OEv+0x10>
    1398:	19 95       	eicall
    139a:	e8 81       	ld	r30, Y
    139c:	f9 81       	ldd	r31, Y+1	; 0x01
    139e:	01 90       	ld	r0, Z+
    13a0:	f0 81       	ld	r31, Z
    13a2:	e0 2d       	mov	r30, r0
    13a4:	ce 01       	movw	r24, r28
    13a6:	19 95       	eicall
    13a8:	df 91       	pop	r29
    13aa:	cf 91       	pop	r28
    13ac:	08 95       	ret

000013ae <_ZN7OSTimer5resetEv>:
    13ae:	dc 01       	movw	r26, r24
    13b0:	2f b7       	in	r18, 0x3f	; 63
    13b2:	f8 94       	cli
    13b4:	12 96       	adiw	r26, 0x02	; 2
    13b6:	4d 91       	ld	r20, X+
    13b8:	5c 91       	ld	r21, X
    13ba:	13 97       	sbiw	r26, 0x03	; 3
    13bc:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <tc_vect>
    13c0:	90 91 a8 02 	lds	r25, 0x02A8	; 0x8002a8 <tc_vect+0x1>
    13c4:	48 17       	cp	r20, r24
    13c6:	59 07       	cpc	r21, r25
    13c8:	59 f4       	brne	.+22     	; 0x13e0 <_ZN7OSTimer5resetEv+0x32>
    13ca:	14 96       	adiw	r26, 0x04	; 4
    13cc:	ed 91       	ld	r30, X+
    13ce:	fc 91       	ld	r31, X
    13d0:	15 97       	sbiw	r26, 0x05	; 5
    13d2:	80 81       	ld	r24, Z
    13d4:	85 60       	ori	r24, 0x05	; 5
    13d6:	80 83       	st	Z, r24
    13d8:	50 96       	adiw	r26, 0x10	; 16
    13da:	8c 91       	ld	r24, X
    13dc:	86 bd       	out	0x26, r24	; 38
    13de:	0b c0       	rjmp	.+22     	; 0x13f6 <_ZN7OSTimer5resetEv+0x48>
    13e0:	14 96       	adiw	r26, 0x04	; 4
    13e2:	ed 91       	ld	r30, X+
    13e4:	fc 91       	ld	r31, X
    13e6:	15 97       	sbiw	r26, 0x05	; 5
    13e8:	90 81       	ld	r25, Z
    13ea:	97 60       	ori	r25, 0x07	; 7
    13ec:	90 83       	st	Z, r25
    13ee:	50 96       	adiw	r26, 0x10	; 16
    13f0:	8c 91       	ld	r24, X
    13f2:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    13f6:	2f bf       	out	0x3f, r18	; 63
    13f8:	08 95       	ret

000013fa <_ZN7Timer168notify_AEv>:
    13fa:	cf 93       	push	r28
    13fc:	df 93       	push	r29
    13fe:	ec 01       	movw	r28, r24
    1400:	e8 85       	ldd	r30, Y+8	; 0x08
    1402:	f9 85       	ldd	r31, Y+9	; 0x09
    1404:	30 97       	sbiw	r30, 0x00	; 0
    1406:	09 f0       	breq	.+2      	; 0x140a <_ZN7Timer168notify_AEv+0x10>
    1408:	19 95       	eicall
    140a:	8a 85       	ldd	r24, Y+10	; 0x0a
    140c:	9b 85       	ldd	r25, Y+11	; 0x0b
    140e:	89 2b       	or	r24, r25
    1410:	39 f4       	brne	.+14     	; 0x1420 <_ZN7Timer168notify_AEv+0x26>
    1412:	e8 81       	ld	r30, Y
    1414:	f9 81       	ldd	r31, Y+1	; 0x01
    1416:	01 90       	ld	r0, Z+
    1418:	f0 81       	ld	r31, Z
    141a:	e0 2d       	mov	r30, r0
    141c:	ce 01       	movw	r24, r28
    141e:	19 95       	eicall
    1420:	df 91       	pop	r29
    1422:	cf 91       	pop	r28
    1424:	08 95       	ret

00001426 <_ZN7Timer168notify_BEv>:
    1426:	cf 93       	push	r28
    1428:	df 93       	push	r29
    142a:	ec 01       	movw	r28, r24
    142c:	ea 85       	ldd	r30, Y+10	; 0x0a
    142e:	fb 85       	ldd	r31, Y+11	; 0x0b
    1430:	30 97       	sbiw	r30, 0x00	; 0
    1432:	09 f0       	breq	.+2      	; 0x1436 <_ZN7Timer168notify_BEv+0x10>
    1434:	19 95       	eicall
    1436:	8c 85       	ldd	r24, Y+12	; 0x0c
    1438:	9d 85       	ldd	r25, Y+13	; 0x0d
    143a:	89 2b       	or	r24, r25
    143c:	39 f4       	brne	.+14     	; 0x144c <_ZN7Timer168notify_BEv+0x26>
    143e:	e8 81       	ld	r30, Y
    1440:	f9 81       	ldd	r31, Y+1	; 0x01
    1442:	01 90       	ld	r0, Z+
    1444:	f0 81       	ld	r31, Z
    1446:	e0 2d       	mov	r30, r0
    1448:	ce 01       	movw	r24, r28
    144a:	19 95       	eicall
    144c:	df 91       	pop	r29
    144e:	cf 91       	pop	r28
    1450:	08 95       	ret

00001452 <_ZN7Timer168notify_CEv>:
    1452:	cf 93       	push	r28
    1454:	df 93       	push	r29
    1456:	ec 01       	movw	r28, r24
    1458:	ec 85       	ldd	r30, Y+12	; 0x0c
    145a:	fd 85       	ldd	r31, Y+13	; 0x0d
    145c:	30 97       	sbiw	r30, 0x00	; 0
    145e:	09 f0       	breq	.+2      	; 0x1462 <_ZN7Timer168notify_CEv+0x10>
    1460:	19 95       	eicall
    1462:	8e 85       	ldd	r24, Y+14	; 0x0e
    1464:	9f 85       	ldd	r25, Y+15	; 0x0f
    1466:	89 2b       	or	r24, r25
    1468:	39 f4       	brne	.+14     	; 0x1478 <_ZN7Timer168notify_CEv+0x26>
    146a:	e8 81       	ld	r30, Y
    146c:	f9 81       	ldd	r31, Y+1	; 0x01
    146e:	01 90       	ld	r0, Z+
    1470:	f0 81       	ld	r31, Z
    1472:	e0 2d       	mov	r30, r0
    1474:	ce 01       	movw	r24, r28
    1476:	19 95       	eicall
    1478:	df 91       	pop	r29
    147a:	cf 91       	pop	r28
    147c:	08 95       	ret

0000147e <_ZN7Timer168notify_OEv>:
    147e:	cf 93       	push	r28
    1480:	df 93       	push	r29
    1482:	ec 01       	movw	r28, r24
    1484:	ee 85       	ldd	r30, Y+14	; 0x0e
    1486:	ff 85       	ldd	r31, Y+15	; 0x0f
    1488:	30 97       	sbiw	r30, 0x00	; 0
    148a:	09 f0       	breq	.+2      	; 0x148e <_ZN7Timer168notify_OEv+0x10>
    148c:	19 95       	eicall
    148e:	e8 81       	ld	r30, Y
    1490:	f9 81       	ldd	r31, Y+1	; 0x01
    1492:	01 90       	ld	r0, Z+
    1494:	f0 81       	ld	r31, Z
    1496:	e0 2d       	mov	r30, r0
    1498:	ce 01       	movw	r24, r28
    149a:	19 95       	eicall
    149c:	df 91       	pop	r29
    149e:	cf 91       	pop	r28
    14a0:	08 95       	ret

000014a2 <__cxa_pure_virtual>:
    14a2:	ff cf       	rjmp	.-2      	; 0x14a2 <__cxa_pure_virtual>

000014a4 <__vector_21>:
    14a4:	1f 92       	push	r1
    14a6:	0f 92       	push	r0
    14a8:	0f b6       	in	r0, 0x3f	; 63
    14aa:	0f 92       	push	r0
    14ac:	11 24       	eor	r1, r1
    14ae:	0b b6       	in	r0, 0x3b	; 59
    14b0:	0f 92       	push	r0
    14b2:	2f 93       	push	r18
    14b4:	3f 93       	push	r19
    14b6:	4f 93       	push	r20
    14b8:	5f 93       	push	r21
    14ba:	6f 93       	push	r22
    14bc:	7f 93       	push	r23
    14be:	8f 93       	push	r24
    14c0:	9f 93       	push	r25
    14c2:	af 93       	push	r26
    14c4:	bf 93       	push	r27
    14c6:	ef 93       	push	r30
    14c8:	ff 93       	push	r31
    14ca:	80 91 b0 1c 	lds	r24, 0x1CB0	; 0x801cb0 <timer_obj>
    14ce:	90 91 b1 1c 	lds	r25, 0x1CB1	; 0x801cb1 <timer_obj+0x1>
    14d2:	00 97       	sbiw	r24, 0x00	; 0
    14d4:	39 f0       	breq	.+14     	; 0x14e4 <__vector_21+0x40>
    14d6:	dc 01       	movw	r26, r24
    14d8:	ed 91       	ld	r30, X+
    14da:	fc 91       	ld	r31, X
    14dc:	02 80       	ldd	r0, Z+2	; 0x02
    14de:	f3 81       	ldd	r31, Z+3	; 0x03
    14e0:	e0 2d       	mov	r30, r0
    14e2:	19 95       	eicall
    14e4:	ff 91       	pop	r31
    14e6:	ef 91       	pop	r30
    14e8:	bf 91       	pop	r27
    14ea:	af 91       	pop	r26
    14ec:	9f 91       	pop	r25
    14ee:	8f 91       	pop	r24
    14f0:	7f 91       	pop	r23
    14f2:	6f 91       	pop	r22
    14f4:	5f 91       	pop	r21
    14f6:	4f 91       	pop	r20
    14f8:	3f 91       	pop	r19
    14fa:	2f 91       	pop	r18
    14fc:	0f 90       	pop	r0
    14fe:	0b be       	out	0x3b, r0	; 59
    1500:	0f 90       	pop	r0
    1502:	0f be       	out	0x3f, r0	; 63
    1504:	0f 90       	pop	r0
    1506:	1f 90       	pop	r1
    1508:	18 95       	reti

0000150a <__vector_22>:
    150a:	1f 92       	push	r1
    150c:	0f 92       	push	r0
    150e:	0f b6       	in	r0, 0x3f	; 63
    1510:	0f 92       	push	r0
    1512:	11 24       	eor	r1, r1
    1514:	0b b6       	in	r0, 0x3b	; 59
    1516:	0f 92       	push	r0
    1518:	2f 93       	push	r18
    151a:	3f 93       	push	r19
    151c:	4f 93       	push	r20
    151e:	5f 93       	push	r21
    1520:	6f 93       	push	r22
    1522:	7f 93       	push	r23
    1524:	8f 93       	push	r24
    1526:	9f 93       	push	r25
    1528:	af 93       	push	r26
    152a:	bf 93       	push	r27
    152c:	ef 93       	push	r30
    152e:	ff 93       	push	r31
    1530:	80 91 b0 1c 	lds	r24, 0x1CB0	; 0x801cb0 <timer_obj>
    1534:	90 91 b1 1c 	lds	r25, 0x1CB1	; 0x801cb1 <timer_obj+0x1>
    1538:	00 97       	sbiw	r24, 0x00	; 0
    153a:	39 f0       	breq	.+14     	; 0x154a <__vector_22+0x40>
    153c:	dc 01       	movw	r26, r24
    153e:	ed 91       	ld	r30, X+
    1540:	fc 91       	ld	r31, X
    1542:	04 80       	ldd	r0, Z+4	; 0x04
    1544:	f5 81       	ldd	r31, Z+5	; 0x05
    1546:	e0 2d       	mov	r30, r0
    1548:	19 95       	eicall
    154a:	ff 91       	pop	r31
    154c:	ef 91       	pop	r30
    154e:	bf 91       	pop	r27
    1550:	af 91       	pop	r26
    1552:	9f 91       	pop	r25
    1554:	8f 91       	pop	r24
    1556:	7f 91       	pop	r23
    1558:	6f 91       	pop	r22
    155a:	5f 91       	pop	r21
    155c:	4f 91       	pop	r20
    155e:	3f 91       	pop	r19
    1560:	2f 91       	pop	r18
    1562:	0f 90       	pop	r0
    1564:	0b be       	out	0x3b, r0	; 59
    1566:	0f 90       	pop	r0
    1568:	0f be       	out	0x3f, r0	; 63
    156a:	0f 90       	pop	r0
    156c:	1f 90       	pop	r1
    156e:	18 95       	reti

00001570 <__vector_13>:
    1570:	1f 92       	push	r1
    1572:	0f 92       	push	r0
    1574:	0f b6       	in	r0, 0x3f	; 63
    1576:	0f 92       	push	r0
    1578:	11 24       	eor	r1, r1
    157a:	0b b6       	in	r0, 0x3b	; 59
    157c:	0f 92       	push	r0
    157e:	2f 93       	push	r18
    1580:	3f 93       	push	r19
    1582:	4f 93       	push	r20
    1584:	5f 93       	push	r21
    1586:	6f 93       	push	r22
    1588:	7f 93       	push	r23
    158a:	8f 93       	push	r24
    158c:	9f 93       	push	r25
    158e:	af 93       	push	r26
    1590:	bf 93       	push	r27
    1592:	ef 93       	push	r30
    1594:	ff 93       	push	r31
    1596:	80 91 b4 1c 	lds	r24, 0x1CB4	; 0x801cb4 <timer_obj+0x4>
    159a:	90 91 b5 1c 	lds	r25, 0x1CB5	; 0x801cb5 <timer_obj+0x5>
    159e:	00 97       	sbiw	r24, 0x00	; 0
    15a0:	39 f0       	breq	.+14     	; 0x15b0 <__vector_13+0x40>
    15a2:	dc 01       	movw	r26, r24
    15a4:	ed 91       	ld	r30, X+
    15a6:	fc 91       	ld	r31, X
    15a8:	02 80       	ldd	r0, Z+2	; 0x02
    15aa:	f3 81       	ldd	r31, Z+3	; 0x03
    15ac:	e0 2d       	mov	r30, r0
    15ae:	19 95       	eicall
    15b0:	ff 91       	pop	r31
    15b2:	ef 91       	pop	r30
    15b4:	bf 91       	pop	r27
    15b6:	af 91       	pop	r26
    15b8:	9f 91       	pop	r25
    15ba:	8f 91       	pop	r24
    15bc:	7f 91       	pop	r23
    15be:	6f 91       	pop	r22
    15c0:	5f 91       	pop	r21
    15c2:	4f 91       	pop	r20
    15c4:	3f 91       	pop	r19
    15c6:	2f 91       	pop	r18
    15c8:	0f 90       	pop	r0
    15ca:	0b be       	out	0x3b, r0	; 59
    15cc:	0f 90       	pop	r0
    15ce:	0f be       	out	0x3f, r0	; 63
    15d0:	0f 90       	pop	r0
    15d2:	1f 90       	pop	r1
    15d4:	18 95       	reti

000015d6 <__vector_14>:
    15d6:	1f 92       	push	r1
    15d8:	0f 92       	push	r0
    15da:	0f b6       	in	r0, 0x3f	; 63
    15dc:	0f 92       	push	r0
    15de:	11 24       	eor	r1, r1
    15e0:	0b b6       	in	r0, 0x3b	; 59
    15e2:	0f 92       	push	r0
    15e4:	2f 93       	push	r18
    15e6:	3f 93       	push	r19
    15e8:	4f 93       	push	r20
    15ea:	5f 93       	push	r21
    15ec:	6f 93       	push	r22
    15ee:	7f 93       	push	r23
    15f0:	8f 93       	push	r24
    15f2:	9f 93       	push	r25
    15f4:	af 93       	push	r26
    15f6:	bf 93       	push	r27
    15f8:	ef 93       	push	r30
    15fa:	ff 93       	push	r31
    15fc:	80 91 b4 1c 	lds	r24, 0x1CB4	; 0x801cb4 <timer_obj+0x4>
    1600:	90 91 b5 1c 	lds	r25, 0x1CB5	; 0x801cb5 <timer_obj+0x5>
    1604:	00 97       	sbiw	r24, 0x00	; 0
    1606:	39 f0       	breq	.+14     	; 0x1616 <__vector_14+0x40>
    1608:	dc 01       	movw	r26, r24
    160a:	ed 91       	ld	r30, X+
    160c:	fc 91       	ld	r31, X
    160e:	04 80       	ldd	r0, Z+4	; 0x04
    1610:	f5 81       	ldd	r31, Z+5	; 0x05
    1612:	e0 2d       	mov	r30, r0
    1614:	19 95       	eicall
    1616:	ff 91       	pop	r31
    1618:	ef 91       	pop	r30
    161a:	bf 91       	pop	r27
    161c:	af 91       	pop	r26
    161e:	9f 91       	pop	r25
    1620:	8f 91       	pop	r24
    1622:	7f 91       	pop	r23
    1624:	6f 91       	pop	r22
    1626:	5f 91       	pop	r21
    1628:	4f 91       	pop	r20
    162a:	3f 91       	pop	r19
    162c:	2f 91       	pop	r18
    162e:	0f 90       	pop	r0
    1630:	0b be       	out	0x3b, r0	; 59
    1632:	0f 90       	pop	r0
    1634:	0f be       	out	0x3f, r0	; 63
    1636:	0f 90       	pop	r0
    1638:	1f 90       	pop	r1
    163a:	18 95       	reti

0000163c <__vector_17>:
    163c:	1f 92       	push	r1
    163e:	0f 92       	push	r0
    1640:	0f b6       	in	r0, 0x3f	; 63
    1642:	0f 92       	push	r0
    1644:	11 24       	eor	r1, r1
    1646:	0b b6       	in	r0, 0x3b	; 59
    1648:	0f 92       	push	r0
    164a:	2f 93       	push	r18
    164c:	3f 93       	push	r19
    164e:	4f 93       	push	r20
    1650:	5f 93       	push	r21
    1652:	6f 93       	push	r22
    1654:	7f 93       	push	r23
    1656:	8f 93       	push	r24
    1658:	9f 93       	push	r25
    165a:	af 93       	push	r26
    165c:	bf 93       	push	r27
    165e:	ef 93       	push	r30
    1660:	ff 93       	push	r31
    1662:	80 91 b2 1c 	lds	r24, 0x1CB2	; 0x801cb2 <timer_obj+0x2>
    1666:	90 91 b3 1c 	lds	r25, 0x1CB3	; 0x801cb3 <timer_obj+0x3>
    166a:	00 97       	sbiw	r24, 0x00	; 0
    166c:	39 f0       	breq	.+14     	; 0x167c <__vector_17+0x40>
    166e:	dc 01       	movw	r26, r24
    1670:	ed 91       	ld	r30, X+
    1672:	fc 91       	ld	r31, X
    1674:	02 80       	ldd	r0, Z+2	; 0x02
    1676:	f3 81       	ldd	r31, Z+3	; 0x03
    1678:	e0 2d       	mov	r30, r0
    167a:	19 95       	eicall
    167c:	ff 91       	pop	r31
    167e:	ef 91       	pop	r30
    1680:	bf 91       	pop	r27
    1682:	af 91       	pop	r26
    1684:	9f 91       	pop	r25
    1686:	8f 91       	pop	r24
    1688:	7f 91       	pop	r23
    168a:	6f 91       	pop	r22
    168c:	5f 91       	pop	r21
    168e:	4f 91       	pop	r20
    1690:	3f 91       	pop	r19
    1692:	2f 91       	pop	r18
    1694:	0f 90       	pop	r0
    1696:	0b be       	out	0x3b, r0	; 59
    1698:	0f 90       	pop	r0
    169a:	0f be       	out	0x3f, r0	; 63
    169c:	0f 90       	pop	r0
    169e:	1f 90       	pop	r1
    16a0:	18 95       	reti

000016a2 <__vector_18>:
    16a2:	1f 92       	push	r1
    16a4:	0f 92       	push	r0
    16a6:	0f b6       	in	r0, 0x3f	; 63
    16a8:	0f 92       	push	r0
    16aa:	11 24       	eor	r1, r1
    16ac:	0b b6       	in	r0, 0x3b	; 59
    16ae:	0f 92       	push	r0
    16b0:	2f 93       	push	r18
    16b2:	3f 93       	push	r19
    16b4:	4f 93       	push	r20
    16b6:	5f 93       	push	r21
    16b8:	6f 93       	push	r22
    16ba:	7f 93       	push	r23
    16bc:	8f 93       	push	r24
    16be:	9f 93       	push	r25
    16c0:	af 93       	push	r26
    16c2:	bf 93       	push	r27
    16c4:	ef 93       	push	r30
    16c6:	ff 93       	push	r31
    16c8:	80 91 b2 1c 	lds	r24, 0x1CB2	; 0x801cb2 <timer_obj+0x2>
    16cc:	90 91 b3 1c 	lds	r25, 0x1CB3	; 0x801cb3 <timer_obj+0x3>
    16d0:	00 97       	sbiw	r24, 0x00	; 0
    16d2:	39 f0       	breq	.+14     	; 0x16e2 <__vector_18+0x40>
    16d4:	dc 01       	movw	r26, r24
    16d6:	ed 91       	ld	r30, X+
    16d8:	fc 91       	ld	r31, X
    16da:	04 80       	ldd	r0, Z+4	; 0x04
    16dc:	f5 81       	ldd	r31, Z+5	; 0x05
    16de:	e0 2d       	mov	r30, r0
    16e0:	19 95       	eicall
    16e2:	ff 91       	pop	r31
    16e4:	ef 91       	pop	r30
    16e6:	bf 91       	pop	r27
    16e8:	af 91       	pop	r26
    16ea:	9f 91       	pop	r25
    16ec:	8f 91       	pop	r24
    16ee:	7f 91       	pop	r23
    16f0:	6f 91       	pop	r22
    16f2:	5f 91       	pop	r21
    16f4:	4f 91       	pop	r20
    16f6:	3f 91       	pop	r19
    16f8:	2f 91       	pop	r18
    16fa:	0f 90       	pop	r0
    16fc:	0b be       	out	0x3b, r0	; 59
    16fe:	0f 90       	pop	r0
    1700:	0f be       	out	0x3f, r0	; 63
    1702:	0f 90       	pop	r0
    1704:	1f 90       	pop	r1
    1706:	18 95       	reti

00001708 <__vector_19>:
    1708:	1f 92       	push	r1
    170a:	0f 92       	push	r0
    170c:	0f b6       	in	r0, 0x3f	; 63
    170e:	0f 92       	push	r0
    1710:	11 24       	eor	r1, r1
    1712:	0b b6       	in	r0, 0x3b	; 59
    1714:	0f 92       	push	r0
    1716:	2f 93       	push	r18
    1718:	3f 93       	push	r19
    171a:	4f 93       	push	r20
    171c:	5f 93       	push	r21
    171e:	6f 93       	push	r22
    1720:	7f 93       	push	r23
    1722:	8f 93       	push	r24
    1724:	9f 93       	push	r25
    1726:	af 93       	push	r26
    1728:	bf 93       	push	r27
    172a:	ef 93       	push	r30
    172c:	ff 93       	push	r31
    172e:	80 91 b2 1c 	lds	r24, 0x1CB2	; 0x801cb2 <timer_obj+0x2>
    1732:	90 91 b3 1c 	lds	r25, 0x1CB3	; 0x801cb3 <timer_obj+0x3>
    1736:	00 97       	sbiw	r24, 0x00	; 0
    1738:	39 f0       	breq	.+14     	; 0x1748 <__vector_19+0x40>
    173a:	dc 01       	movw	r26, r24
    173c:	ed 91       	ld	r30, X+
    173e:	fc 91       	ld	r31, X
    1740:	06 80       	ldd	r0, Z+6	; 0x06
    1742:	f7 81       	ldd	r31, Z+7	; 0x07
    1744:	e0 2d       	mov	r30, r0
    1746:	19 95       	eicall
    1748:	ff 91       	pop	r31
    174a:	ef 91       	pop	r30
    174c:	bf 91       	pop	r27
    174e:	af 91       	pop	r26
    1750:	9f 91       	pop	r25
    1752:	8f 91       	pop	r24
    1754:	7f 91       	pop	r23
    1756:	6f 91       	pop	r22
    1758:	5f 91       	pop	r21
    175a:	4f 91       	pop	r20
    175c:	3f 91       	pop	r19
    175e:	2f 91       	pop	r18
    1760:	0f 90       	pop	r0
    1762:	0b be       	out	0x3b, r0	; 59
    1764:	0f 90       	pop	r0
    1766:	0f be       	out	0x3f, r0	; 63
    1768:	0f 90       	pop	r0
    176a:	1f 90       	pop	r1
    176c:	18 95       	reti

0000176e <__vector_20>:
    176e:	1f 92       	push	r1
    1770:	0f 92       	push	r0
    1772:	0f b6       	in	r0, 0x3f	; 63
    1774:	0f 92       	push	r0
    1776:	11 24       	eor	r1, r1
    1778:	0b b6       	in	r0, 0x3b	; 59
    177a:	0f 92       	push	r0
    177c:	2f 93       	push	r18
    177e:	3f 93       	push	r19
    1780:	4f 93       	push	r20
    1782:	5f 93       	push	r21
    1784:	6f 93       	push	r22
    1786:	7f 93       	push	r23
    1788:	8f 93       	push	r24
    178a:	9f 93       	push	r25
    178c:	af 93       	push	r26
    178e:	bf 93       	push	r27
    1790:	ef 93       	push	r30
    1792:	ff 93       	push	r31
    1794:	80 91 b2 1c 	lds	r24, 0x1CB2	; 0x801cb2 <timer_obj+0x2>
    1798:	90 91 b3 1c 	lds	r25, 0x1CB3	; 0x801cb3 <timer_obj+0x3>
    179c:	00 97       	sbiw	r24, 0x00	; 0
    179e:	39 f0       	breq	.+14     	; 0x17ae <__vector_20+0x40>
    17a0:	dc 01       	movw	r26, r24
    17a2:	ed 91       	ld	r30, X+
    17a4:	fc 91       	ld	r31, X
    17a6:	00 84       	ldd	r0, Z+8	; 0x08
    17a8:	f1 85       	ldd	r31, Z+9	; 0x09
    17aa:	e0 2d       	mov	r30, r0
    17ac:	19 95       	eicall
    17ae:	ff 91       	pop	r31
    17b0:	ef 91       	pop	r30
    17b2:	bf 91       	pop	r27
    17b4:	af 91       	pop	r26
    17b6:	9f 91       	pop	r25
    17b8:	8f 91       	pop	r24
    17ba:	7f 91       	pop	r23
    17bc:	6f 91       	pop	r22
    17be:	5f 91       	pop	r21
    17c0:	4f 91       	pop	r20
    17c2:	3f 91       	pop	r19
    17c4:	2f 91       	pop	r18
    17c6:	0f 90       	pop	r0
    17c8:	0b be       	out	0x3b, r0	; 59
    17ca:	0f 90       	pop	r0
    17cc:	0f be       	out	0x3f, r0	; 63
    17ce:	0f 90       	pop	r0
    17d0:	1f 90       	pop	r1
    17d2:	18 95       	reti

000017d4 <__vector_32>:
    17d4:	1f 92       	push	r1
    17d6:	0f 92       	push	r0
    17d8:	0f b6       	in	r0, 0x3f	; 63
    17da:	0f 92       	push	r0
    17dc:	11 24       	eor	r1, r1
    17de:	0b b6       	in	r0, 0x3b	; 59
    17e0:	0f 92       	push	r0
    17e2:	2f 93       	push	r18
    17e4:	3f 93       	push	r19
    17e6:	4f 93       	push	r20
    17e8:	5f 93       	push	r21
    17ea:	6f 93       	push	r22
    17ec:	7f 93       	push	r23
    17ee:	8f 93       	push	r24
    17f0:	9f 93       	push	r25
    17f2:	af 93       	push	r26
    17f4:	bf 93       	push	r27
    17f6:	ef 93       	push	r30
    17f8:	ff 93       	push	r31
    17fa:	80 91 b6 1c 	lds	r24, 0x1CB6	; 0x801cb6 <timer_obj+0x6>
    17fe:	90 91 b7 1c 	lds	r25, 0x1CB7	; 0x801cb7 <timer_obj+0x7>
    1802:	00 97       	sbiw	r24, 0x00	; 0
    1804:	39 f0       	breq	.+14     	; 0x1814 <__vector_32+0x40>
    1806:	dc 01       	movw	r26, r24
    1808:	ed 91       	ld	r30, X+
    180a:	fc 91       	ld	r31, X
    180c:	02 80       	ldd	r0, Z+2	; 0x02
    180e:	f3 81       	ldd	r31, Z+3	; 0x03
    1810:	e0 2d       	mov	r30, r0
    1812:	19 95       	eicall
    1814:	ff 91       	pop	r31
    1816:	ef 91       	pop	r30
    1818:	bf 91       	pop	r27
    181a:	af 91       	pop	r26
    181c:	9f 91       	pop	r25
    181e:	8f 91       	pop	r24
    1820:	7f 91       	pop	r23
    1822:	6f 91       	pop	r22
    1824:	5f 91       	pop	r21
    1826:	4f 91       	pop	r20
    1828:	3f 91       	pop	r19
    182a:	2f 91       	pop	r18
    182c:	0f 90       	pop	r0
    182e:	0b be       	out	0x3b, r0	; 59
    1830:	0f 90       	pop	r0
    1832:	0f be       	out	0x3f, r0	; 63
    1834:	0f 90       	pop	r0
    1836:	1f 90       	pop	r1
    1838:	18 95       	reti

0000183a <__vector_33>:
    183a:	1f 92       	push	r1
    183c:	0f 92       	push	r0
    183e:	0f b6       	in	r0, 0x3f	; 63
    1840:	0f 92       	push	r0
    1842:	11 24       	eor	r1, r1
    1844:	0b b6       	in	r0, 0x3b	; 59
    1846:	0f 92       	push	r0
    1848:	2f 93       	push	r18
    184a:	3f 93       	push	r19
    184c:	4f 93       	push	r20
    184e:	5f 93       	push	r21
    1850:	6f 93       	push	r22
    1852:	7f 93       	push	r23
    1854:	8f 93       	push	r24
    1856:	9f 93       	push	r25
    1858:	af 93       	push	r26
    185a:	bf 93       	push	r27
    185c:	ef 93       	push	r30
    185e:	ff 93       	push	r31
    1860:	80 91 b6 1c 	lds	r24, 0x1CB6	; 0x801cb6 <timer_obj+0x6>
    1864:	90 91 b7 1c 	lds	r25, 0x1CB7	; 0x801cb7 <timer_obj+0x7>
    1868:	00 97       	sbiw	r24, 0x00	; 0
    186a:	39 f0       	breq	.+14     	; 0x187a <__vector_33+0x40>
    186c:	dc 01       	movw	r26, r24
    186e:	ed 91       	ld	r30, X+
    1870:	fc 91       	ld	r31, X
    1872:	04 80       	ldd	r0, Z+4	; 0x04
    1874:	f5 81       	ldd	r31, Z+5	; 0x05
    1876:	e0 2d       	mov	r30, r0
    1878:	19 95       	eicall
    187a:	ff 91       	pop	r31
    187c:	ef 91       	pop	r30
    187e:	bf 91       	pop	r27
    1880:	af 91       	pop	r26
    1882:	9f 91       	pop	r25
    1884:	8f 91       	pop	r24
    1886:	7f 91       	pop	r23
    1888:	6f 91       	pop	r22
    188a:	5f 91       	pop	r21
    188c:	4f 91       	pop	r20
    188e:	3f 91       	pop	r19
    1890:	2f 91       	pop	r18
    1892:	0f 90       	pop	r0
    1894:	0b be       	out	0x3b, r0	; 59
    1896:	0f 90       	pop	r0
    1898:	0f be       	out	0x3f, r0	; 63
    189a:	0f 90       	pop	r0
    189c:	1f 90       	pop	r1
    189e:	18 95       	reti

000018a0 <__vector_34>:
    18a0:	1f 92       	push	r1
    18a2:	0f 92       	push	r0
    18a4:	0f b6       	in	r0, 0x3f	; 63
    18a6:	0f 92       	push	r0
    18a8:	11 24       	eor	r1, r1
    18aa:	0b b6       	in	r0, 0x3b	; 59
    18ac:	0f 92       	push	r0
    18ae:	2f 93       	push	r18
    18b0:	3f 93       	push	r19
    18b2:	4f 93       	push	r20
    18b4:	5f 93       	push	r21
    18b6:	6f 93       	push	r22
    18b8:	7f 93       	push	r23
    18ba:	8f 93       	push	r24
    18bc:	9f 93       	push	r25
    18be:	af 93       	push	r26
    18c0:	bf 93       	push	r27
    18c2:	ef 93       	push	r30
    18c4:	ff 93       	push	r31
    18c6:	80 91 b6 1c 	lds	r24, 0x1CB6	; 0x801cb6 <timer_obj+0x6>
    18ca:	90 91 b7 1c 	lds	r25, 0x1CB7	; 0x801cb7 <timer_obj+0x7>
    18ce:	00 97       	sbiw	r24, 0x00	; 0
    18d0:	39 f0       	breq	.+14     	; 0x18e0 <__vector_34+0x40>
    18d2:	dc 01       	movw	r26, r24
    18d4:	ed 91       	ld	r30, X+
    18d6:	fc 91       	ld	r31, X
    18d8:	06 80       	ldd	r0, Z+6	; 0x06
    18da:	f7 81       	ldd	r31, Z+7	; 0x07
    18dc:	e0 2d       	mov	r30, r0
    18de:	19 95       	eicall
    18e0:	ff 91       	pop	r31
    18e2:	ef 91       	pop	r30
    18e4:	bf 91       	pop	r27
    18e6:	af 91       	pop	r26
    18e8:	9f 91       	pop	r25
    18ea:	8f 91       	pop	r24
    18ec:	7f 91       	pop	r23
    18ee:	6f 91       	pop	r22
    18f0:	5f 91       	pop	r21
    18f2:	4f 91       	pop	r20
    18f4:	3f 91       	pop	r19
    18f6:	2f 91       	pop	r18
    18f8:	0f 90       	pop	r0
    18fa:	0b be       	out	0x3b, r0	; 59
    18fc:	0f 90       	pop	r0
    18fe:	0f be       	out	0x3f, r0	; 63
    1900:	0f 90       	pop	r0
    1902:	1f 90       	pop	r1
    1904:	18 95       	reti

00001906 <__vector_35>:
    1906:	1f 92       	push	r1
    1908:	0f 92       	push	r0
    190a:	0f b6       	in	r0, 0x3f	; 63
    190c:	0f 92       	push	r0
    190e:	11 24       	eor	r1, r1
    1910:	0b b6       	in	r0, 0x3b	; 59
    1912:	0f 92       	push	r0
    1914:	2f 93       	push	r18
    1916:	3f 93       	push	r19
    1918:	4f 93       	push	r20
    191a:	5f 93       	push	r21
    191c:	6f 93       	push	r22
    191e:	7f 93       	push	r23
    1920:	8f 93       	push	r24
    1922:	9f 93       	push	r25
    1924:	af 93       	push	r26
    1926:	bf 93       	push	r27
    1928:	ef 93       	push	r30
    192a:	ff 93       	push	r31
    192c:	80 91 b6 1c 	lds	r24, 0x1CB6	; 0x801cb6 <timer_obj+0x6>
    1930:	90 91 b7 1c 	lds	r25, 0x1CB7	; 0x801cb7 <timer_obj+0x7>
    1934:	00 97       	sbiw	r24, 0x00	; 0
    1936:	39 f0       	breq	.+14     	; 0x1946 <__vector_35+0x40>
    1938:	dc 01       	movw	r26, r24
    193a:	ed 91       	ld	r30, X+
    193c:	fc 91       	ld	r31, X
    193e:	00 84       	ldd	r0, Z+8	; 0x08
    1940:	f1 85       	ldd	r31, Z+9	; 0x09
    1942:	e0 2d       	mov	r30, r0
    1944:	19 95       	eicall
    1946:	ff 91       	pop	r31
    1948:	ef 91       	pop	r30
    194a:	bf 91       	pop	r27
    194c:	af 91       	pop	r26
    194e:	9f 91       	pop	r25
    1950:	8f 91       	pop	r24
    1952:	7f 91       	pop	r23
    1954:	6f 91       	pop	r22
    1956:	5f 91       	pop	r21
    1958:	4f 91       	pop	r20
    195a:	3f 91       	pop	r19
    195c:	2f 91       	pop	r18
    195e:	0f 90       	pop	r0
    1960:	0b be       	out	0x3b, r0	; 59
    1962:	0f 90       	pop	r0
    1964:	0f be       	out	0x3f, r0	; 63
    1966:	0f 90       	pop	r0
    1968:	1f 90       	pop	r1
    196a:	18 95       	reti

0000196c <__vector_42>:
    196c:	1f 92       	push	r1
    196e:	0f 92       	push	r0
    1970:	0f b6       	in	r0, 0x3f	; 63
    1972:	0f 92       	push	r0
    1974:	11 24       	eor	r1, r1
    1976:	0b b6       	in	r0, 0x3b	; 59
    1978:	0f 92       	push	r0
    197a:	2f 93       	push	r18
    197c:	3f 93       	push	r19
    197e:	4f 93       	push	r20
    1980:	5f 93       	push	r21
    1982:	6f 93       	push	r22
    1984:	7f 93       	push	r23
    1986:	8f 93       	push	r24
    1988:	9f 93       	push	r25
    198a:	af 93       	push	r26
    198c:	bf 93       	push	r27
    198e:	ef 93       	push	r30
    1990:	ff 93       	push	r31
    1992:	80 91 b8 1c 	lds	r24, 0x1CB8	; 0x801cb8 <timer_obj+0x8>
    1996:	90 91 b9 1c 	lds	r25, 0x1CB9	; 0x801cb9 <timer_obj+0x9>
    199a:	00 97       	sbiw	r24, 0x00	; 0
    199c:	39 f0       	breq	.+14     	; 0x19ac <__vector_42+0x40>
    199e:	dc 01       	movw	r26, r24
    19a0:	ed 91       	ld	r30, X+
    19a2:	fc 91       	ld	r31, X
    19a4:	02 80       	ldd	r0, Z+2	; 0x02
    19a6:	f3 81       	ldd	r31, Z+3	; 0x03
    19a8:	e0 2d       	mov	r30, r0
    19aa:	19 95       	eicall
    19ac:	ff 91       	pop	r31
    19ae:	ef 91       	pop	r30
    19b0:	bf 91       	pop	r27
    19b2:	af 91       	pop	r26
    19b4:	9f 91       	pop	r25
    19b6:	8f 91       	pop	r24
    19b8:	7f 91       	pop	r23
    19ba:	6f 91       	pop	r22
    19bc:	5f 91       	pop	r21
    19be:	4f 91       	pop	r20
    19c0:	3f 91       	pop	r19
    19c2:	2f 91       	pop	r18
    19c4:	0f 90       	pop	r0
    19c6:	0b be       	out	0x3b, r0	; 59
    19c8:	0f 90       	pop	r0
    19ca:	0f be       	out	0x3f, r0	; 63
    19cc:	0f 90       	pop	r0
    19ce:	1f 90       	pop	r1
    19d0:	18 95       	reti

000019d2 <__vector_43>:
    19d2:	1f 92       	push	r1
    19d4:	0f 92       	push	r0
    19d6:	0f b6       	in	r0, 0x3f	; 63
    19d8:	0f 92       	push	r0
    19da:	11 24       	eor	r1, r1
    19dc:	0b b6       	in	r0, 0x3b	; 59
    19de:	0f 92       	push	r0
    19e0:	2f 93       	push	r18
    19e2:	3f 93       	push	r19
    19e4:	4f 93       	push	r20
    19e6:	5f 93       	push	r21
    19e8:	6f 93       	push	r22
    19ea:	7f 93       	push	r23
    19ec:	8f 93       	push	r24
    19ee:	9f 93       	push	r25
    19f0:	af 93       	push	r26
    19f2:	bf 93       	push	r27
    19f4:	ef 93       	push	r30
    19f6:	ff 93       	push	r31
    19f8:	80 91 b8 1c 	lds	r24, 0x1CB8	; 0x801cb8 <timer_obj+0x8>
    19fc:	90 91 b9 1c 	lds	r25, 0x1CB9	; 0x801cb9 <timer_obj+0x9>
    1a00:	00 97       	sbiw	r24, 0x00	; 0
    1a02:	39 f0       	breq	.+14     	; 0x1a12 <__vector_43+0x40>
    1a04:	dc 01       	movw	r26, r24
    1a06:	ed 91       	ld	r30, X+
    1a08:	fc 91       	ld	r31, X
    1a0a:	04 80       	ldd	r0, Z+4	; 0x04
    1a0c:	f5 81       	ldd	r31, Z+5	; 0x05
    1a0e:	e0 2d       	mov	r30, r0
    1a10:	19 95       	eicall
    1a12:	ff 91       	pop	r31
    1a14:	ef 91       	pop	r30
    1a16:	bf 91       	pop	r27
    1a18:	af 91       	pop	r26
    1a1a:	9f 91       	pop	r25
    1a1c:	8f 91       	pop	r24
    1a1e:	7f 91       	pop	r23
    1a20:	6f 91       	pop	r22
    1a22:	5f 91       	pop	r21
    1a24:	4f 91       	pop	r20
    1a26:	3f 91       	pop	r19
    1a28:	2f 91       	pop	r18
    1a2a:	0f 90       	pop	r0
    1a2c:	0b be       	out	0x3b, r0	; 59
    1a2e:	0f 90       	pop	r0
    1a30:	0f be       	out	0x3f, r0	; 63
    1a32:	0f 90       	pop	r0
    1a34:	1f 90       	pop	r1
    1a36:	18 95       	reti

00001a38 <__vector_44>:
    1a38:	1f 92       	push	r1
    1a3a:	0f 92       	push	r0
    1a3c:	0f b6       	in	r0, 0x3f	; 63
    1a3e:	0f 92       	push	r0
    1a40:	11 24       	eor	r1, r1
    1a42:	0b b6       	in	r0, 0x3b	; 59
    1a44:	0f 92       	push	r0
    1a46:	2f 93       	push	r18
    1a48:	3f 93       	push	r19
    1a4a:	4f 93       	push	r20
    1a4c:	5f 93       	push	r21
    1a4e:	6f 93       	push	r22
    1a50:	7f 93       	push	r23
    1a52:	8f 93       	push	r24
    1a54:	9f 93       	push	r25
    1a56:	af 93       	push	r26
    1a58:	bf 93       	push	r27
    1a5a:	ef 93       	push	r30
    1a5c:	ff 93       	push	r31
    1a5e:	80 91 b8 1c 	lds	r24, 0x1CB8	; 0x801cb8 <timer_obj+0x8>
    1a62:	90 91 b9 1c 	lds	r25, 0x1CB9	; 0x801cb9 <timer_obj+0x9>
    1a66:	00 97       	sbiw	r24, 0x00	; 0
    1a68:	39 f0       	breq	.+14     	; 0x1a78 <__vector_44+0x40>
    1a6a:	dc 01       	movw	r26, r24
    1a6c:	ed 91       	ld	r30, X+
    1a6e:	fc 91       	ld	r31, X
    1a70:	06 80       	ldd	r0, Z+6	; 0x06
    1a72:	f7 81       	ldd	r31, Z+7	; 0x07
    1a74:	e0 2d       	mov	r30, r0
    1a76:	19 95       	eicall
    1a78:	ff 91       	pop	r31
    1a7a:	ef 91       	pop	r30
    1a7c:	bf 91       	pop	r27
    1a7e:	af 91       	pop	r26
    1a80:	9f 91       	pop	r25
    1a82:	8f 91       	pop	r24
    1a84:	7f 91       	pop	r23
    1a86:	6f 91       	pop	r22
    1a88:	5f 91       	pop	r21
    1a8a:	4f 91       	pop	r20
    1a8c:	3f 91       	pop	r19
    1a8e:	2f 91       	pop	r18
    1a90:	0f 90       	pop	r0
    1a92:	0b be       	out	0x3b, r0	; 59
    1a94:	0f 90       	pop	r0
    1a96:	0f be       	out	0x3f, r0	; 63
    1a98:	0f 90       	pop	r0
    1a9a:	1f 90       	pop	r1
    1a9c:	18 95       	reti

00001a9e <__vector_45>:
    1a9e:	1f 92       	push	r1
    1aa0:	0f 92       	push	r0
    1aa2:	0f b6       	in	r0, 0x3f	; 63
    1aa4:	0f 92       	push	r0
    1aa6:	11 24       	eor	r1, r1
    1aa8:	0b b6       	in	r0, 0x3b	; 59
    1aaa:	0f 92       	push	r0
    1aac:	2f 93       	push	r18
    1aae:	3f 93       	push	r19
    1ab0:	4f 93       	push	r20
    1ab2:	5f 93       	push	r21
    1ab4:	6f 93       	push	r22
    1ab6:	7f 93       	push	r23
    1ab8:	8f 93       	push	r24
    1aba:	9f 93       	push	r25
    1abc:	af 93       	push	r26
    1abe:	bf 93       	push	r27
    1ac0:	ef 93       	push	r30
    1ac2:	ff 93       	push	r31
    1ac4:	80 91 b8 1c 	lds	r24, 0x1CB8	; 0x801cb8 <timer_obj+0x8>
    1ac8:	90 91 b9 1c 	lds	r25, 0x1CB9	; 0x801cb9 <timer_obj+0x9>
    1acc:	00 97       	sbiw	r24, 0x00	; 0
    1ace:	39 f0       	breq	.+14     	; 0x1ade <__vector_45+0x40>
    1ad0:	dc 01       	movw	r26, r24
    1ad2:	ed 91       	ld	r30, X+
    1ad4:	fc 91       	ld	r31, X
    1ad6:	00 84       	ldd	r0, Z+8	; 0x08
    1ad8:	f1 85       	ldd	r31, Z+9	; 0x09
    1ada:	e0 2d       	mov	r30, r0
    1adc:	19 95       	eicall
    1ade:	ff 91       	pop	r31
    1ae0:	ef 91       	pop	r30
    1ae2:	bf 91       	pop	r27
    1ae4:	af 91       	pop	r26
    1ae6:	9f 91       	pop	r25
    1ae8:	8f 91       	pop	r24
    1aea:	7f 91       	pop	r23
    1aec:	6f 91       	pop	r22
    1aee:	5f 91       	pop	r21
    1af0:	4f 91       	pop	r20
    1af2:	3f 91       	pop	r19
    1af4:	2f 91       	pop	r18
    1af6:	0f 90       	pop	r0
    1af8:	0b be       	out	0x3b, r0	; 59
    1afa:	0f 90       	pop	r0
    1afc:	0f be       	out	0x3f, r0	; 63
    1afe:	0f 90       	pop	r0
    1b00:	1f 90       	pop	r1
    1b02:	18 95       	reti

00001b04 <__vector_47>:
    1b04:	1f 92       	push	r1
    1b06:	0f 92       	push	r0
    1b08:	0f b6       	in	r0, 0x3f	; 63
    1b0a:	0f 92       	push	r0
    1b0c:	11 24       	eor	r1, r1
    1b0e:	0b b6       	in	r0, 0x3b	; 59
    1b10:	0f 92       	push	r0
    1b12:	2f 93       	push	r18
    1b14:	3f 93       	push	r19
    1b16:	4f 93       	push	r20
    1b18:	5f 93       	push	r21
    1b1a:	6f 93       	push	r22
    1b1c:	7f 93       	push	r23
    1b1e:	8f 93       	push	r24
    1b20:	9f 93       	push	r25
    1b22:	af 93       	push	r26
    1b24:	bf 93       	push	r27
    1b26:	ef 93       	push	r30
    1b28:	ff 93       	push	r31
    1b2a:	80 91 ba 1c 	lds	r24, 0x1CBA	; 0x801cba <timer_obj+0xa>
    1b2e:	90 91 bb 1c 	lds	r25, 0x1CBB	; 0x801cbb <timer_obj+0xb>
    1b32:	00 97       	sbiw	r24, 0x00	; 0
    1b34:	39 f0       	breq	.+14     	; 0x1b44 <__vector_47+0x40>
    1b36:	dc 01       	movw	r26, r24
    1b38:	ed 91       	ld	r30, X+
    1b3a:	fc 91       	ld	r31, X
    1b3c:	02 80       	ldd	r0, Z+2	; 0x02
    1b3e:	f3 81       	ldd	r31, Z+3	; 0x03
    1b40:	e0 2d       	mov	r30, r0
    1b42:	19 95       	eicall
    1b44:	ff 91       	pop	r31
    1b46:	ef 91       	pop	r30
    1b48:	bf 91       	pop	r27
    1b4a:	af 91       	pop	r26
    1b4c:	9f 91       	pop	r25
    1b4e:	8f 91       	pop	r24
    1b50:	7f 91       	pop	r23
    1b52:	6f 91       	pop	r22
    1b54:	5f 91       	pop	r21
    1b56:	4f 91       	pop	r20
    1b58:	3f 91       	pop	r19
    1b5a:	2f 91       	pop	r18
    1b5c:	0f 90       	pop	r0
    1b5e:	0b be       	out	0x3b, r0	; 59
    1b60:	0f 90       	pop	r0
    1b62:	0f be       	out	0x3f, r0	; 63
    1b64:	0f 90       	pop	r0
    1b66:	1f 90       	pop	r1
    1b68:	18 95       	reti

00001b6a <__vector_48>:
    1b6a:	1f 92       	push	r1
    1b6c:	0f 92       	push	r0
    1b6e:	0f b6       	in	r0, 0x3f	; 63
    1b70:	0f 92       	push	r0
    1b72:	11 24       	eor	r1, r1
    1b74:	0b b6       	in	r0, 0x3b	; 59
    1b76:	0f 92       	push	r0
    1b78:	2f 93       	push	r18
    1b7a:	3f 93       	push	r19
    1b7c:	4f 93       	push	r20
    1b7e:	5f 93       	push	r21
    1b80:	6f 93       	push	r22
    1b82:	7f 93       	push	r23
    1b84:	8f 93       	push	r24
    1b86:	9f 93       	push	r25
    1b88:	af 93       	push	r26
    1b8a:	bf 93       	push	r27
    1b8c:	ef 93       	push	r30
    1b8e:	ff 93       	push	r31
    1b90:	80 91 ba 1c 	lds	r24, 0x1CBA	; 0x801cba <timer_obj+0xa>
    1b94:	90 91 bb 1c 	lds	r25, 0x1CBB	; 0x801cbb <timer_obj+0xb>
    1b98:	00 97       	sbiw	r24, 0x00	; 0
    1b9a:	39 f0       	breq	.+14     	; 0x1baa <__vector_48+0x40>
    1b9c:	dc 01       	movw	r26, r24
    1b9e:	ed 91       	ld	r30, X+
    1ba0:	fc 91       	ld	r31, X
    1ba2:	04 80       	ldd	r0, Z+4	; 0x04
    1ba4:	f5 81       	ldd	r31, Z+5	; 0x05
    1ba6:	e0 2d       	mov	r30, r0
    1ba8:	19 95       	eicall
    1baa:	ff 91       	pop	r31
    1bac:	ef 91       	pop	r30
    1bae:	bf 91       	pop	r27
    1bb0:	af 91       	pop	r26
    1bb2:	9f 91       	pop	r25
    1bb4:	8f 91       	pop	r24
    1bb6:	7f 91       	pop	r23
    1bb8:	6f 91       	pop	r22
    1bba:	5f 91       	pop	r21
    1bbc:	4f 91       	pop	r20
    1bbe:	3f 91       	pop	r19
    1bc0:	2f 91       	pop	r18
    1bc2:	0f 90       	pop	r0
    1bc4:	0b be       	out	0x3b, r0	; 59
    1bc6:	0f 90       	pop	r0
    1bc8:	0f be       	out	0x3f, r0	; 63
    1bca:	0f 90       	pop	r0
    1bcc:	1f 90       	pop	r1
    1bce:	18 95       	reti

00001bd0 <__vector_49>:
    1bd0:	1f 92       	push	r1
    1bd2:	0f 92       	push	r0
    1bd4:	0f b6       	in	r0, 0x3f	; 63
    1bd6:	0f 92       	push	r0
    1bd8:	11 24       	eor	r1, r1
    1bda:	0b b6       	in	r0, 0x3b	; 59
    1bdc:	0f 92       	push	r0
    1bde:	2f 93       	push	r18
    1be0:	3f 93       	push	r19
    1be2:	4f 93       	push	r20
    1be4:	5f 93       	push	r21
    1be6:	6f 93       	push	r22
    1be8:	7f 93       	push	r23
    1bea:	8f 93       	push	r24
    1bec:	9f 93       	push	r25
    1bee:	af 93       	push	r26
    1bf0:	bf 93       	push	r27
    1bf2:	ef 93       	push	r30
    1bf4:	ff 93       	push	r31
    1bf6:	80 91 ba 1c 	lds	r24, 0x1CBA	; 0x801cba <timer_obj+0xa>
    1bfa:	90 91 bb 1c 	lds	r25, 0x1CBB	; 0x801cbb <timer_obj+0xb>
    1bfe:	00 97       	sbiw	r24, 0x00	; 0
    1c00:	39 f0       	breq	.+14     	; 0x1c10 <__vector_49+0x40>
    1c02:	dc 01       	movw	r26, r24
    1c04:	ed 91       	ld	r30, X+
    1c06:	fc 91       	ld	r31, X
    1c08:	06 80       	ldd	r0, Z+6	; 0x06
    1c0a:	f7 81       	ldd	r31, Z+7	; 0x07
    1c0c:	e0 2d       	mov	r30, r0
    1c0e:	19 95       	eicall
    1c10:	ff 91       	pop	r31
    1c12:	ef 91       	pop	r30
    1c14:	bf 91       	pop	r27
    1c16:	af 91       	pop	r26
    1c18:	9f 91       	pop	r25
    1c1a:	8f 91       	pop	r24
    1c1c:	7f 91       	pop	r23
    1c1e:	6f 91       	pop	r22
    1c20:	5f 91       	pop	r21
    1c22:	4f 91       	pop	r20
    1c24:	3f 91       	pop	r19
    1c26:	2f 91       	pop	r18
    1c28:	0f 90       	pop	r0
    1c2a:	0b be       	out	0x3b, r0	; 59
    1c2c:	0f 90       	pop	r0
    1c2e:	0f be       	out	0x3f, r0	; 63
    1c30:	0f 90       	pop	r0
    1c32:	1f 90       	pop	r1
    1c34:	18 95       	reti

00001c36 <__vector_50>:
    1c36:	1f 92       	push	r1
    1c38:	0f 92       	push	r0
    1c3a:	0f b6       	in	r0, 0x3f	; 63
    1c3c:	0f 92       	push	r0
    1c3e:	11 24       	eor	r1, r1
    1c40:	0b b6       	in	r0, 0x3b	; 59
    1c42:	0f 92       	push	r0
    1c44:	2f 93       	push	r18
    1c46:	3f 93       	push	r19
    1c48:	4f 93       	push	r20
    1c4a:	5f 93       	push	r21
    1c4c:	6f 93       	push	r22
    1c4e:	7f 93       	push	r23
    1c50:	8f 93       	push	r24
    1c52:	9f 93       	push	r25
    1c54:	af 93       	push	r26
    1c56:	bf 93       	push	r27
    1c58:	ef 93       	push	r30
    1c5a:	ff 93       	push	r31
    1c5c:	80 91 ba 1c 	lds	r24, 0x1CBA	; 0x801cba <timer_obj+0xa>
    1c60:	90 91 bb 1c 	lds	r25, 0x1CBB	; 0x801cbb <timer_obj+0xb>
    1c64:	00 97       	sbiw	r24, 0x00	; 0
    1c66:	39 f0       	breq	.+14     	; 0x1c76 <__vector_50+0x40>
    1c68:	dc 01       	movw	r26, r24
    1c6a:	ed 91       	ld	r30, X+
    1c6c:	fc 91       	ld	r31, X
    1c6e:	00 84       	ldd	r0, Z+8	; 0x08
    1c70:	f1 85       	ldd	r31, Z+9	; 0x09
    1c72:	e0 2d       	mov	r30, r0
    1c74:	19 95       	eicall
    1c76:	ff 91       	pop	r31
    1c78:	ef 91       	pop	r30
    1c7a:	bf 91       	pop	r27
    1c7c:	af 91       	pop	r26
    1c7e:	9f 91       	pop	r25
    1c80:	8f 91       	pop	r24
    1c82:	7f 91       	pop	r23
    1c84:	6f 91       	pop	r22
    1c86:	5f 91       	pop	r21
    1c88:	4f 91       	pop	r20
    1c8a:	3f 91       	pop	r19
    1c8c:	2f 91       	pop	r18
    1c8e:	0f 90       	pop	r0
    1c90:	0b be       	out	0x3b, r0	; 59
    1c92:	0f 90       	pop	r0
    1c94:	0f be       	out	0x3f, r0	; 63
    1c96:	0f 90       	pop	r0
    1c98:	1f 90       	pop	r1
    1c9a:	18 95       	reti

00001c9c <_ZN7Timer16C1EhPFvvES1_S1_S1_>:
    1c9c:	9f 92       	push	r9
    1c9e:	af 92       	push	r10
    1ca0:	bf 92       	push	r11
    1ca2:	cf 92       	push	r12
    1ca4:	df 92       	push	r13
    1ca6:	ef 92       	push	r14
    1ca8:	ff 92       	push	r15
    1caa:	0f 93       	push	r16
    1cac:	1f 93       	push	r17
    1cae:	cf 93       	push	r28
    1cb0:	df 93       	push	r29
    1cb2:	ec 01       	movw	r28, r24
    1cb4:	96 2e       	mov	r9, r22
    1cb6:	5a 01       	movw	r10, r20
    1cb8:	69 01       	movw	r12, r18
    1cba:	83 e7       	ldi	r24, 0x73	; 115
    1cbc:	92 e0       	ldi	r25, 0x02	; 2
    1cbe:	99 83       	std	Y+1, r25	; 0x01
    1cc0:	88 83       	st	Y, r24
    1cc2:	86 2f       	mov	r24, r22
    1cc4:	00 d3       	rcall	.+1536   	; 0x22c6 <_Z20tc_handle_to_addressh>
    1cc6:	9b 83       	std	Y+3, r25	; 0x03
    1cc8:	8a 83       	std	Y+2, r24	; 0x02
    1cca:	e9 2d       	mov	r30, r9
    1ccc:	f0 e0       	ldi	r31, 0x00	; 0
    1cce:	ee 0f       	add	r30, r30
    1cd0:	ff 1f       	adc	r31, r31
    1cd2:	e9 55       	subi	r30, 0x59	; 89
    1cd4:	fd 4f       	sbci	r31, 0xFD	; 253
    1cd6:	80 81       	ld	r24, Z
    1cd8:	91 81       	ldd	r25, Z+1	; 0x01
    1cda:	01 96       	adiw	r24, 0x01	; 1
    1cdc:	9d 83       	std	Y+5, r25	; 0x05
    1cde:	8c 83       	std	Y+4, r24	; 0x04
    1ce0:	8d e9       	ldi	r24, 0x9D	; 157
    1ce2:	92 e0       	ldi	r25, 0x02	; 2
    1ce4:	99 83       	std	Y+1, r25	; 0x01
    1ce6:	88 83       	st	Y, r24
    1ce8:	81 e0       	ldi	r24, 0x01	; 1
    1cea:	98 12       	cpse	r9, r24
    1cec:	26 c0       	rjmp	.+76     	; 0x1d3a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x9e>
    1cee:	d0 93 b3 1c 	sts	0x1CB3, r29	; 0x801cb3 <timer_obj+0x3>
    1cf2:	c0 93 b2 1c 	sts	0x1CB2, r28	; 0x801cb2 <timer_obj+0x2>
    1cf6:	a1 14       	cp	r10, r1
    1cf8:	b1 04       	cpc	r11, r1
    1cfa:	29 f0       	breq	.+10     	; 0x1d06 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x6a>
    1cfc:	ef e6       	ldi	r30, 0x6F	; 111
    1cfe:	f0 e0       	ldi	r31, 0x00	; 0
    1d00:	80 81       	ld	r24, Z
    1d02:	82 60       	ori	r24, 0x02	; 2
    1d04:	80 83       	st	Z, r24
    1d06:	c1 14       	cp	r12, r1
    1d08:	d1 04       	cpc	r13, r1
    1d0a:	29 f0       	breq	.+10     	; 0x1d16 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x7a>
    1d0c:	ef e6       	ldi	r30, 0x6F	; 111
    1d0e:	f0 e0       	ldi	r31, 0x00	; 0
    1d10:	80 81       	ld	r24, Z
    1d12:	84 60       	ori	r24, 0x04	; 4
    1d14:	80 83       	st	Z, r24
    1d16:	01 15       	cp	r16, r1
    1d18:	11 05       	cpc	r17, r1
    1d1a:	29 f0       	breq	.+10     	; 0x1d26 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x8a>
    1d1c:	ef e6       	ldi	r30, 0x6F	; 111
    1d1e:	f0 e0       	ldi	r31, 0x00	; 0
    1d20:	80 81       	ld	r24, Z
    1d22:	88 60       	ori	r24, 0x08	; 8
    1d24:	80 83       	st	Z, r24
    1d26:	e1 14       	cp	r14, r1
    1d28:	f1 04       	cpc	r15, r1
    1d2a:	09 f4       	brne	.+2      	; 0x1d2e <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x92>
    1d2c:	7e c0       	rjmp	.+252    	; 0x1e2a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1d2e:	ef e6       	ldi	r30, 0x6F	; 111
    1d30:	f0 e0       	ldi	r31, 0x00	; 0
    1d32:	80 81       	ld	r24, Z
    1d34:	81 60       	ori	r24, 0x01	; 1
    1d36:	80 83       	st	Z, r24
    1d38:	78 c0       	rjmp	.+240    	; 0x1e2a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1d3a:	83 e0       	ldi	r24, 0x03	; 3
    1d3c:	98 12       	cpse	r9, r24
    1d3e:	26 c0       	rjmp	.+76     	; 0x1d8c <_ZN7Timer16C1EhPFvvES1_S1_S1_+0xf0>
    1d40:	d0 93 b7 1c 	sts	0x1CB7, r29	; 0x801cb7 <timer_obj+0x7>
    1d44:	c0 93 b6 1c 	sts	0x1CB6, r28	; 0x801cb6 <timer_obj+0x6>
    1d48:	a1 14       	cp	r10, r1
    1d4a:	b1 04       	cpc	r11, r1
    1d4c:	29 f0       	breq	.+10     	; 0x1d58 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0xbc>
    1d4e:	e1 e7       	ldi	r30, 0x71	; 113
    1d50:	f0 e0       	ldi	r31, 0x00	; 0
    1d52:	80 81       	ld	r24, Z
    1d54:	82 60       	ori	r24, 0x02	; 2
    1d56:	80 83       	st	Z, r24
    1d58:	c1 14       	cp	r12, r1
    1d5a:	d1 04       	cpc	r13, r1
    1d5c:	29 f0       	breq	.+10     	; 0x1d68 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0xcc>
    1d5e:	e1 e7       	ldi	r30, 0x71	; 113
    1d60:	f0 e0       	ldi	r31, 0x00	; 0
    1d62:	80 81       	ld	r24, Z
    1d64:	84 60       	ori	r24, 0x04	; 4
    1d66:	80 83       	st	Z, r24
    1d68:	01 15       	cp	r16, r1
    1d6a:	11 05       	cpc	r17, r1
    1d6c:	29 f0       	breq	.+10     	; 0x1d78 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0xdc>
    1d6e:	e1 e7       	ldi	r30, 0x71	; 113
    1d70:	f0 e0       	ldi	r31, 0x00	; 0
    1d72:	80 81       	ld	r24, Z
    1d74:	88 60       	ori	r24, 0x08	; 8
    1d76:	80 83       	st	Z, r24
    1d78:	e1 14       	cp	r14, r1
    1d7a:	f1 04       	cpc	r15, r1
    1d7c:	09 f4       	brne	.+2      	; 0x1d80 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0xe4>
    1d7e:	55 c0       	rjmp	.+170    	; 0x1e2a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1d80:	e1 e7       	ldi	r30, 0x71	; 113
    1d82:	f0 e0       	ldi	r31, 0x00	; 0
    1d84:	80 81       	ld	r24, Z
    1d86:	81 60       	ori	r24, 0x01	; 1
    1d88:	80 83       	st	Z, r24
    1d8a:	4f c0       	rjmp	.+158    	; 0x1e2a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1d8c:	84 e0       	ldi	r24, 0x04	; 4
    1d8e:	98 12       	cpse	r9, r24
    1d90:	25 c0       	rjmp	.+74     	; 0x1ddc <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x140>
    1d92:	d0 93 b9 1c 	sts	0x1CB9, r29	; 0x801cb9 <timer_obj+0x9>
    1d96:	c0 93 b8 1c 	sts	0x1CB8, r28	; 0x801cb8 <timer_obj+0x8>
    1d9a:	a1 14       	cp	r10, r1
    1d9c:	b1 04       	cpc	r11, r1
    1d9e:	29 f0       	breq	.+10     	; 0x1daa <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x10e>
    1da0:	e2 e7       	ldi	r30, 0x72	; 114
    1da2:	f0 e0       	ldi	r31, 0x00	; 0
    1da4:	80 81       	ld	r24, Z
    1da6:	82 60       	ori	r24, 0x02	; 2
    1da8:	80 83       	st	Z, r24
    1daa:	c1 14       	cp	r12, r1
    1dac:	d1 04       	cpc	r13, r1
    1dae:	29 f0       	breq	.+10     	; 0x1dba <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x11e>
    1db0:	e2 e7       	ldi	r30, 0x72	; 114
    1db2:	f0 e0       	ldi	r31, 0x00	; 0
    1db4:	80 81       	ld	r24, Z
    1db6:	84 60       	ori	r24, 0x04	; 4
    1db8:	80 83       	st	Z, r24
    1dba:	01 15       	cp	r16, r1
    1dbc:	11 05       	cpc	r17, r1
    1dbe:	29 f0       	breq	.+10     	; 0x1dca <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x12e>
    1dc0:	e2 e7       	ldi	r30, 0x72	; 114
    1dc2:	f0 e0       	ldi	r31, 0x00	; 0
    1dc4:	80 81       	ld	r24, Z
    1dc6:	88 60       	ori	r24, 0x08	; 8
    1dc8:	80 83       	st	Z, r24
    1dca:	e1 14       	cp	r14, r1
    1dcc:	f1 04       	cpc	r15, r1
    1dce:	69 f1       	breq	.+90     	; 0x1e2a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1dd0:	e2 e7       	ldi	r30, 0x72	; 114
    1dd2:	f0 e0       	ldi	r31, 0x00	; 0
    1dd4:	80 81       	ld	r24, Z
    1dd6:	81 60       	ori	r24, 0x01	; 1
    1dd8:	80 83       	st	Z, r24
    1dda:	27 c0       	rjmp	.+78     	; 0x1e2a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1ddc:	85 e0       	ldi	r24, 0x05	; 5
    1dde:	98 12       	cpse	r9, r24
    1de0:	2e c0       	rjmp	.+92     	; 0x1e3e <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x1a2>
    1de2:	d0 93 bb 1c 	sts	0x1CBB, r29	; 0x801cbb <timer_obj+0xb>
    1de6:	c0 93 ba 1c 	sts	0x1CBA, r28	; 0x801cba <timer_obj+0xa>
    1dea:	a1 14       	cp	r10, r1
    1dec:	b1 04       	cpc	r11, r1
    1dee:	29 f0       	breq	.+10     	; 0x1dfa <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x15e>
    1df0:	e3 e7       	ldi	r30, 0x73	; 115
    1df2:	f0 e0       	ldi	r31, 0x00	; 0
    1df4:	80 81       	ld	r24, Z
    1df6:	82 60       	ori	r24, 0x02	; 2
    1df8:	80 83       	st	Z, r24
    1dfa:	c1 14       	cp	r12, r1
    1dfc:	d1 04       	cpc	r13, r1
    1dfe:	29 f0       	breq	.+10     	; 0x1e0a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x16e>
    1e00:	e3 e7       	ldi	r30, 0x73	; 115
    1e02:	f0 e0       	ldi	r31, 0x00	; 0
    1e04:	80 81       	ld	r24, Z
    1e06:	84 60       	ori	r24, 0x04	; 4
    1e08:	80 83       	st	Z, r24
    1e0a:	01 15       	cp	r16, r1
    1e0c:	11 05       	cpc	r17, r1
    1e0e:	29 f0       	breq	.+10     	; 0x1e1a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x17e>
    1e10:	e3 e7       	ldi	r30, 0x73	; 115
    1e12:	f0 e0       	ldi	r31, 0x00	; 0
    1e14:	80 81       	ld	r24, Z
    1e16:	88 60       	ori	r24, 0x08	; 8
    1e18:	80 83       	st	Z, r24
    1e1a:	e1 14       	cp	r14, r1
    1e1c:	f1 04       	cpc	r15, r1
    1e1e:	29 f0       	breq	.+10     	; 0x1e2a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1e20:	e3 e7       	ldi	r30, 0x73	; 115
    1e22:	f0 e0       	ldi	r31, 0x00	; 0
    1e24:	80 81       	ld	r24, Z
    1e26:	81 60       	ori	r24, 0x01	; 1
    1e28:	80 83       	st	Z, r24
    1e2a:	b9 86       	std	Y+9, r11	; 0x09
    1e2c:	a8 86       	std	Y+8, r10	; 0x08
    1e2e:	db 86       	std	Y+11, r13	; 0x0b
    1e30:	ca 86       	std	Y+10, r12	; 0x0a
    1e32:	1d 87       	std	Y+13, r17	; 0x0d
    1e34:	0c 87       	std	Y+12, r16	; 0x0c
    1e36:	ff 86       	std	Y+15, r15	; 0x0f
    1e38:	ee 86       	std	Y+14, r14	; 0x0e
    1e3a:	1e 82       	std	Y+6, r1	; 0x06
    1e3c:	1f 82       	std	Y+7, r1	; 0x07
    1e3e:	df 91       	pop	r29
    1e40:	cf 91       	pop	r28
    1e42:	1f 91       	pop	r17
    1e44:	0f 91       	pop	r16
    1e46:	ff 90       	pop	r15
    1e48:	ef 90       	pop	r14
    1e4a:	df 90       	pop	r13
    1e4c:	cf 90       	pop	r12
    1e4e:	bf 90       	pop	r11
    1e50:	af 90       	pop	r10
    1e52:	9f 90       	pop	r9
    1e54:	08 95       	ret

00001e56 <_ZN7Timer168start_msEjjjjh>:
    1e56:	ef 92       	push	r14
    1e58:	ff 92       	push	r15
    1e5a:	0f 93       	push	r16
    1e5c:	1f 93       	push	r17
    1e5e:	cf 93       	push	r28
    1e60:	df 93       	push	r29
    1e62:	fc 01       	movw	r30, r24
    1e64:	ff b6       	in	r15, 0x3f	; 63
    1e66:	f8 94       	cli
    1e68:	a4 81       	ldd	r26, Z+4	; 0x04
    1e6a:	b5 81       	ldd	r27, Z+5	; 0x05
    1e6c:	8c 91       	ld	r24, X
    1e6e:	88 7f       	andi	r24, 0xF8	; 248
    1e70:	8c 93       	st	X, r24
    1e72:	a4 81       	ldd	r26, Z+4	; 0x04
    1e74:	b5 81       	ldd	r27, Z+5	; 0x05
    1e76:	8c 91       	ld	r24, X
    1e78:	85 60       	ori	r24, 0x05	; 5
    1e7a:	8c 93       	st	X, r24
    1e7c:	a6 2f       	mov	r26, r22
    1e7e:	b7 2f       	mov	r27, r23
    1e80:	a2 31       	cpi	r26, 0x12	; 18
    1e82:	81 e1       	ldi	r24, 0x11	; 17
    1e84:	b8 07       	cpc	r27, r24
    1e86:	10 f0       	brcs	.+4      	; 0x1e8c <_ZN7Timer168start_msEjjjjh+0x36>
    1e88:	a1 e1       	ldi	r26, 0x11	; 17
    1e8a:	b1 e1       	ldi	r27, 0x11	; 17
    1e8c:	8f e0       	ldi	r24, 0x0F	; 15
    1e8e:	8a 9f       	mul	r24, r26
    1e90:	e0 01       	movw	r28, r0
    1e92:	8b 9f       	mul	r24, r27
    1e94:	d0 0d       	add	r29, r0
    1e96:	11 24       	eor	r1, r1
    1e98:	64 2f       	mov	r22, r20
    1e9a:	75 2f       	mov	r23, r21
    1e9c:	62 31       	cpi	r22, 0x12	; 18
    1e9e:	81 e1       	ldi	r24, 0x11	; 17
    1ea0:	78 07       	cpc	r23, r24
    1ea2:	10 f0       	brcs	.+4      	; 0x1ea8 <_ZN7Timer168start_msEjjjjh+0x52>
    1ea4:	61 e1       	ldi	r22, 0x11	; 17
    1ea6:	71 e1       	ldi	r23, 0x11	; 17
    1ea8:	8f e0       	ldi	r24, 0x0F	; 15
    1eaa:	86 9f       	mul	r24, r22
    1eac:	d0 01       	movw	r26, r0
    1eae:	87 9f       	mul	r24, r23
    1eb0:	b0 0d       	add	r27, r0
    1eb2:	11 24       	eor	r1, r1
    1eb4:	42 2f       	mov	r20, r18
    1eb6:	53 2f       	mov	r21, r19
    1eb8:	42 31       	cpi	r20, 0x12	; 18
    1eba:	81 e1       	ldi	r24, 0x11	; 17
    1ebc:	58 07       	cpc	r21, r24
    1ebe:	10 f0       	brcs	.+4      	; 0x1ec4 <_ZN7Timer168start_msEjjjjh+0x6e>
    1ec0:	41 e1       	ldi	r20, 0x11	; 17
    1ec2:	51 e1       	ldi	r21, 0x11	; 17
    1ec4:	8f e0       	ldi	r24, 0x0F	; 15
    1ec6:	84 9f       	mul	r24, r20
    1ec8:	b0 01       	movw	r22, r0
    1eca:	85 9f       	mul	r24, r21
    1ecc:	70 0d       	add	r23, r0
    1ece:	11 24       	eor	r1, r1
    1ed0:	20 2f       	mov	r18, r16
    1ed2:	31 2f       	mov	r19, r17
    1ed4:	22 31       	cpi	r18, 0x12	; 18
    1ed6:	81 e1       	ldi	r24, 0x11	; 17
    1ed8:	38 07       	cpc	r19, r24
    1eda:	10 f0       	brcs	.+4      	; 0x1ee0 <_ZN7Timer168start_msEjjjjh+0x8a>
    1edc:	21 e1       	ldi	r18, 0x11	; 17
    1ede:	31 e1       	ldi	r19, 0x11	; 17
    1ee0:	8f e0       	ldi	r24, 0x0F	; 15
    1ee2:	82 9f       	mul	r24, r18
    1ee4:	a0 01       	movw	r20, r0
    1ee6:	83 9f       	mul	r24, r19
    1ee8:	50 0d       	add	r21, r0
    1eea:	11 24       	eor	r1, r1
    1eec:	51 8b       	std	Z+17, r21	; 0x11
    1eee:	40 8b       	std	Z+16, r20	; 0x10
    1ef0:	82 81       	ldd	r24, Z+2	; 0x02
    1ef2:	93 81       	ldd	r25, Z+3	; 0x03
    1ef4:	20 91 a9 02 	lds	r18, 0x02A9	; 0x8002a9 <tc_vect+0x2>
    1ef8:	30 91 aa 02 	lds	r19, 0x02AA	; 0x8002aa <tc_vect+0x3>
    1efc:	82 17       	cp	r24, r18
    1efe:	93 07       	cpc	r25, r19
    1f00:	89 f4       	brne	.+34     	; 0x1f24 <_ZN7Timer168start_msEjjjjh+0xce>
    1f02:	d0 93 89 00 	sts	0x0089, r29	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
    1f06:	c0 93 88 00 	sts	0x0088, r28	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
    1f0a:	b0 93 8b 00 	sts	0x008B, r27	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
    1f0e:	a0 93 8a 00 	sts	0x008A, r26	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
    1f12:	70 93 8d 00 	sts	0x008D, r23	; 0x80008d <__TEXT_REGION_LENGTH__+0x7c008d>
    1f16:	60 93 8c 00 	sts	0x008C, r22	; 0x80008c <__TEXT_REGION_LENGTH__+0x7c008c>
    1f1a:	50 93 85 00 	sts	0x0085, r21	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
    1f1e:	40 93 84 00 	sts	0x0084, r20	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
    1f22:	40 c0       	rjmp	.+128    	; 0x1fa4 <_ZN7Timer168start_msEjjjjh+0x14e>
    1f24:	20 91 ad 02 	lds	r18, 0x02AD	; 0x8002ad <tc_vect+0x6>
    1f28:	30 91 ae 02 	lds	r19, 0x02AE	; 0x8002ae <tc_vect+0x7>
    1f2c:	82 17       	cp	r24, r18
    1f2e:	93 07       	cpc	r25, r19
    1f30:	89 f4       	brne	.+34     	; 0x1f54 <_ZN7Timer168start_msEjjjjh+0xfe>
    1f32:	d0 93 99 00 	sts	0x0099, r29	; 0x800099 <__TEXT_REGION_LENGTH__+0x7c0099>
    1f36:	c0 93 98 00 	sts	0x0098, r28	; 0x800098 <__TEXT_REGION_LENGTH__+0x7c0098>
    1f3a:	b0 93 9b 00 	sts	0x009B, r27	; 0x80009b <__TEXT_REGION_LENGTH__+0x7c009b>
    1f3e:	a0 93 9a 00 	sts	0x009A, r26	; 0x80009a <__TEXT_REGION_LENGTH__+0x7c009a>
    1f42:	70 93 9d 00 	sts	0x009D, r23	; 0x80009d <__TEXT_REGION_LENGTH__+0x7c009d>
    1f46:	60 93 9c 00 	sts	0x009C, r22	; 0x80009c <__TEXT_REGION_LENGTH__+0x7c009c>
    1f4a:	50 93 95 00 	sts	0x0095, r21	; 0x800095 <__TEXT_REGION_LENGTH__+0x7c0095>
    1f4e:	40 93 94 00 	sts	0x0094, r20	; 0x800094 <__TEXT_REGION_LENGTH__+0x7c0094>
    1f52:	28 c0       	rjmp	.+80     	; 0x1fa4 <_ZN7Timer168start_msEjjjjh+0x14e>
    1f54:	20 91 af 02 	lds	r18, 0x02AF	; 0x8002af <tc_vect+0x8>
    1f58:	30 91 b0 02 	lds	r19, 0x02B0	; 0x8002b0 <tc_vect+0x9>
    1f5c:	82 17       	cp	r24, r18
    1f5e:	93 07       	cpc	r25, r19
    1f60:	89 f4       	brne	.+34     	; 0x1f84 <_ZN7Timer168start_msEjjjjh+0x12e>
    1f62:	d0 93 a9 00 	sts	0x00A9, r29	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
    1f66:	c0 93 a8 00 	sts	0x00A8, r28	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
    1f6a:	b0 93 ab 00 	sts	0x00AB, r27	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
    1f6e:	a0 93 aa 00 	sts	0x00AA, r26	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
    1f72:	70 93 ad 00 	sts	0x00AD, r23	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
    1f76:	60 93 ac 00 	sts	0x00AC, r22	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
    1f7a:	50 93 a5 00 	sts	0x00A5, r21	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7c00a5>
    1f7e:	40 93 a4 00 	sts	0x00A4, r20	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7c00a4>
    1f82:	10 c0       	rjmp	.+32     	; 0x1fa4 <_ZN7Timer168start_msEjjjjh+0x14e>
    1f84:	d0 93 29 01 	sts	0x0129, r29	; 0x800129 <__TEXT_REGION_LENGTH__+0x7c0129>
    1f88:	c0 93 28 01 	sts	0x0128, r28	; 0x800128 <__TEXT_REGION_LENGTH__+0x7c0128>
    1f8c:	b0 93 2b 01 	sts	0x012B, r27	; 0x80012b <__TEXT_REGION_LENGTH__+0x7c012b>
    1f90:	a0 93 2a 01 	sts	0x012A, r26	; 0x80012a <__TEXT_REGION_LENGTH__+0x7c012a>
    1f94:	70 93 2d 01 	sts	0x012D, r23	; 0x80012d <__TEXT_REGION_LENGTH__+0x7c012d>
    1f98:	60 93 2c 01 	sts	0x012C, r22	; 0x80012c <__TEXT_REGION_LENGTH__+0x7c012c>
    1f9c:	50 93 25 01 	sts	0x0125, r21	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
    1fa0:	40 93 24 01 	sts	0x0124, r20	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
    1fa4:	e6 82       	std	Z+6, r14	; 0x06
    1fa6:	81 e0       	ldi	r24, 0x01	; 1
    1fa8:	87 83       	std	Z+7, r24	; 0x07
    1faa:	ff be       	out	0x3f, r15	; 63
    1fac:	df 91       	pop	r29
    1fae:	cf 91       	pop	r28
    1fb0:	1f 91       	pop	r17
    1fb2:	0f 91       	pop	r16
    1fb4:	ff 90       	pop	r15
    1fb6:	ef 90       	pop	r14
    1fb8:	08 95       	ret

00001fba <_ZN6Timer8C1EhPFvvES1_S1_>:
    1fba:	bf 92       	push	r11
    1fbc:	cf 92       	push	r12
    1fbe:	df 92       	push	r13
    1fc0:	ef 92       	push	r14
    1fc2:	ff 92       	push	r15
    1fc4:	0f 93       	push	r16
    1fc6:	1f 93       	push	r17
    1fc8:	cf 93       	push	r28
    1fca:	df 93       	push	r29
    1fcc:	ec 01       	movw	r28, r24
    1fce:	b6 2e       	mov	r11, r22
    1fd0:	6a 01       	movw	r12, r20
    1fd2:	79 01       	movw	r14, r18
    1fd4:	83 e7       	ldi	r24, 0x73	; 115
    1fd6:	92 e0       	ldi	r25, 0x02	; 2
    1fd8:	99 83       	std	Y+1, r25	; 0x01
    1fda:	88 83       	st	Y, r24
    1fdc:	86 2f       	mov	r24, r22
    1fde:	73 d1       	rcall	.+742    	; 0x22c6 <_Z20tc_handle_to_addressh>
    1fe0:	9b 83       	std	Y+3, r25	; 0x03
    1fe2:	8a 83       	std	Y+2, r24	; 0x02
    1fe4:	eb 2d       	mov	r30, r11
    1fe6:	f0 e0       	ldi	r31, 0x00	; 0
    1fe8:	ee 0f       	add	r30, r30
    1fea:	ff 1f       	adc	r31, r31
    1fec:	e9 55       	subi	r30, 0x59	; 89
    1fee:	fd 4f       	sbci	r31, 0xFD	; 253
    1ff0:	80 81       	ld	r24, Z
    1ff2:	91 81       	ldd	r25, Z+1	; 0x01
    1ff4:	01 96       	adiw	r24, 0x01	; 1
    1ff6:	9d 83       	std	Y+5, r25	; 0x05
    1ff8:	8c 83       	std	Y+4, r24	; 0x04
    1ffa:	81 e8       	ldi	r24, 0x81	; 129
    1ffc:	92 e0       	ldi	r25, 0x02	; 2
    1ffe:	99 83       	std	Y+1, r25	; 0x01
    2000:	88 83       	st	Y, r24
    2002:	b1 10       	cpse	r11, r1
    2004:	1d c0       	rjmp	.+58     	; 0x2040 <__DATA_REGION_LENGTH__+0x40>
    2006:	d0 93 b1 1c 	sts	0x1CB1, r29	; 0x801cb1 <timer_obj+0x1>
    200a:	c0 93 b0 1c 	sts	0x1CB0, r28	; 0x801cb0 <timer_obj>
    200e:	c1 14       	cp	r12, r1
    2010:	d1 04       	cpc	r13, r1
    2012:	29 f0       	breq	.+10     	; 0x201e <__DATA_REGION_LENGTH__+0x1e>
    2014:	ee e6       	ldi	r30, 0x6E	; 110
    2016:	f0 e0       	ldi	r31, 0x00	; 0
    2018:	80 81       	ld	r24, Z
    201a:	82 60       	ori	r24, 0x02	; 2
    201c:	80 83       	st	Z, r24
    201e:	e1 14       	cp	r14, r1
    2020:	f1 04       	cpc	r15, r1
    2022:	29 f0       	breq	.+10     	; 0x202e <__DATA_REGION_LENGTH__+0x2e>
    2024:	ee e6       	ldi	r30, 0x6E	; 110
    2026:	f0 e0       	ldi	r31, 0x00	; 0
    2028:	80 81       	ld	r24, Z
    202a:	84 60       	ori	r24, 0x04	; 4
    202c:	80 83       	st	Z, r24
    202e:	01 15       	cp	r16, r1
    2030:	11 05       	cpc	r17, r1
    2032:	29 f1       	breq	.+74     	; 0x207e <__DATA_REGION_LENGTH__+0x7e>
    2034:	ee e6       	ldi	r30, 0x6E	; 110
    2036:	f0 e0       	ldi	r31, 0x00	; 0
    2038:	80 81       	ld	r24, Z
    203a:	81 60       	ori	r24, 0x01	; 1
    203c:	80 83       	st	Z, r24
    203e:	1f c0       	rjmp	.+62     	; 0x207e <__DATA_REGION_LENGTH__+0x7e>
    2040:	82 e0       	ldi	r24, 0x02	; 2
    2042:	b8 12       	cpse	r11, r24
    2044:	26 c0       	rjmp	.+76     	; 0x2092 <__DATA_REGION_LENGTH__+0x92>
    2046:	d0 93 b5 1c 	sts	0x1CB5, r29	; 0x801cb5 <timer_obj+0x5>
    204a:	c0 93 b4 1c 	sts	0x1CB4, r28	; 0x801cb4 <timer_obj+0x4>
    204e:	c1 14       	cp	r12, r1
    2050:	d1 04       	cpc	r13, r1
    2052:	29 f0       	breq	.+10     	; 0x205e <__DATA_REGION_LENGTH__+0x5e>
    2054:	e0 e7       	ldi	r30, 0x70	; 112
    2056:	f0 e0       	ldi	r31, 0x00	; 0
    2058:	80 81       	ld	r24, Z
    205a:	82 60       	ori	r24, 0x02	; 2
    205c:	80 83       	st	Z, r24
    205e:	e1 14       	cp	r14, r1
    2060:	f1 04       	cpc	r15, r1
    2062:	29 f0       	breq	.+10     	; 0x206e <__DATA_REGION_LENGTH__+0x6e>
    2064:	e0 e7       	ldi	r30, 0x70	; 112
    2066:	f0 e0       	ldi	r31, 0x00	; 0
    2068:	80 81       	ld	r24, Z
    206a:	84 60       	ori	r24, 0x04	; 4
    206c:	80 83       	st	Z, r24
    206e:	01 15       	cp	r16, r1
    2070:	11 05       	cpc	r17, r1
    2072:	29 f0       	breq	.+10     	; 0x207e <__DATA_REGION_LENGTH__+0x7e>
    2074:	e0 e7       	ldi	r30, 0x70	; 112
    2076:	f0 e0       	ldi	r31, 0x00	; 0
    2078:	80 81       	ld	r24, Z
    207a:	81 60       	ori	r24, 0x01	; 1
    207c:	80 83       	st	Z, r24
    207e:	d9 86       	std	Y+9, r13	; 0x09
    2080:	c8 86       	std	Y+8, r12	; 0x08
    2082:	fb 86       	std	Y+11, r15	; 0x0b
    2084:	ea 86       	std	Y+10, r14	; 0x0a
    2086:	1d 86       	std	Y+13, r1	; 0x0d
    2088:	1c 86       	std	Y+12, r1	; 0x0c
    208a:	1f 87       	std	Y+15, r17	; 0x0f
    208c:	0e 87       	std	Y+14, r16	; 0x0e
    208e:	1e 82       	std	Y+6, r1	; 0x06
    2090:	1f 82       	std	Y+7, r1	; 0x07
    2092:	df 91       	pop	r29
    2094:	cf 91       	pop	r28
    2096:	1f 91       	pop	r17
    2098:	0f 91       	pop	r16
    209a:	ff 90       	pop	r15
    209c:	ef 90       	pop	r14
    209e:	df 90       	pop	r13
    20a0:	cf 90       	pop	r12
    20a2:	bf 90       	pop	r11
    20a4:	08 95       	ret

000020a6 <_ZN7OSTimerC1Eh>:
    20a6:	ef 92       	push	r14
    20a8:	ff 92       	push	r15
    20aa:	0f 93       	push	r16
    20ac:	1f 93       	push	r17
    20ae:	cf 93       	push	r28
    20b0:	7c 01       	movw	r14, r24
    20b2:	c6 2f       	mov	r28, r22
    20b4:	00 e0       	ldi	r16, 0x00	; 0
    20b6:	10 e0       	ldi	r17, 0x00	; 0
    20b8:	20 e0       	ldi	r18, 0x00	; 0
    20ba:	30 e0       	ldi	r19, 0x00	; 0
    20bc:	40 e0       	ldi	r20, 0x00	; 0
    20be:	50 e0       	ldi	r21, 0x00	; 0
    20c0:	7c df       	rcall	.-264    	; 0x1fba <_ZN6Timer8C1EhPFvvES1_S1_>
    20c2:	8f e8       	ldi	r24, 0x8F	; 143
    20c4:	92 e0       	ldi	r25, 0x02	; 2
    20c6:	f7 01       	movw	r30, r14
    20c8:	91 83       	std	Z+1, r25	; 0x01
    20ca:	80 83       	st	Z, r24
    20cc:	c1 11       	cpse	r28, r1
    20ce:	04 c0       	rjmp	.+8      	; 0x20d8 <_ZN7OSTimerC1Eh+0x32>
    20d0:	81 e0       	ldi	r24, 0x01	; 1
    20d2:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
    20d6:	05 c0       	rjmp	.+10     	; 0x20e2 <_ZN7OSTimerC1Eh+0x3c>
    20d8:	c2 30       	cpi	r28, 0x02	; 2
    20da:	19 f4       	brne	.+6      	; 0x20e2 <_ZN7OSTimerC1Eh+0x3c>
    20dc:	81 e0       	ldi	r24, 0x01	; 1
    20de:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7c0070>
    20e2:	cf 91       	pop	r28
    20e4:	1f 91       	pop	r17
    20e6:	0f 91       	pop	r16
    20e8:	ff 90       	pop	r15
    20ea:	ef 90       	pop	r14
    20ec:	08 95       	ret

000020ee <_ZN7OSTimer13force_timeoutEv>:
    20ee:	dc 01       	movw	r26, r24
    20f0:	2f b7       	in	r18, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    20f2:	f8 94       	cli
    20f4:	83 b7       	in	r24, 0x33	; 51
    20f6:	81 7f       	andi	r24, 0xF1	; 241
    20f8:	83 bf       	out	0x33, r24	; 51
    20fa:	12 96       	adiw	r26, 0x02	; 2
    20fc:	4d 91       	ld	r20, X+
    20fe:	5c 91       	ld	r21, X
    2100:	13 97       	sbiw	r26, 0x03	; 3
    2102:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <tc_vect>
    2106:	90 91 a8 02 	lds	r25, 0x02A8	; 0x8002a8 <tc_vect+0x1>
    210a:	48 17       	cp	r20, r24
    210c:	59 07       	cpc	r21, r25
    210e:	21 f4       	brne	.+8      	; 0x2118 <_ZN7OSTimer13force_timeoutEv+0x2a>
    2110:	86 b5       	in	r24, 0x26	; 38
    2112:	9f ef       	ldi	r25, 0xFF	; 255
    2114:	96 bd       	out	0x26, r25	; 38
    2116:	05 c0       	rjmp	.+10     	; 0x2122 <_ZN7OSTimer13force_timeoutEv+0x34>
    2118:	e2 eb       	ldi	r30, 0xB2	; 178
    211a:	f0 e0       	ldi	r31, 0x00	; 0
    211c:	80 81       	ld	r24, Z
    211e:	9f ef       	ldi	r25, 0xFF	; 255
    2120:	90 83       	st	Z, r25
    2122:	14 96       	adiw	r26, 0x04	; 4
    2124:	ed 91       	ld	r30, X+
    2126:	fc 91       	ld	r31, X
    2128:	15 97       	sbiw	r26, 0x05	; 5
    212a:	91 e0       	ldi	r25, 0x01	; 1
    212c:	90 83       	st	Z, r25
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    212e:	2f bf       	out	0x3f, r18	; 63
    2130:	93 b7       	in	r25, 0x33	; 51
    2132:	91 60       	ori	r25, 0x01	; 1
    2134:	93 bf       	out	0x33, r25	; 51
    2136:	88 95       	sleep
    2138:	93 b7       	in	r25, 0x33	; 51
    213a:	9e 7f       	andi	r25, 0xFE	; 254
    213c:	93 bf       	out	0x33, r25	; 51
    213e:	50 96       	adiw	r26, 0x10	; 16
    2140:	9c 91       	ld	r25, X
    2142:	89 1b       	sub	r24, r25
    2144:	08 95       	ret

00002146 <_ZN7OSTimer5startEj>:
    2146:	fc 01       	movw	r30, r24
    2148:	4f b7       	in	r20, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    214a:	f8 94       	cli
    214c:	a4 81       	ldd	r26, Z+4	; 0x04
    214e:	b5 81       	ldd	r27, Z+5	; 0x05
    2150:	8c 91       	ld	r24, X
    2152:	88 7f       	andi	r24, 0xF8	; 248
    2154:	8c 93       	st	X, r24
    2156:	86 2f       	mov	r24, r22
    2158:	97 2f       	mov	r25, r23
    215a:	82 31       	cpi	r24, 0x12	; 18
    215c:	91 05       	cpc	r25, r1
    215e:	10 f0       	brcs	.+4      	; 0x2164 <_ZN7OSTimer5startEj+0x1e>
    2160:	81 e1       	ldi	r24, 0x11	; 17
    2162:	90 e0       	ldi	r25, 0x00	; 0
    2164:	98 2f       	mov	r25, r24
    2166:	99 0f       	add	r25, r25
    2168:	89 0f       	add	r24, r25
    216a:	98 2f       	mov	r25, r24
    216c:	99 0f       	add	r25, r25
    216e:	99 0f       	add	r25, r25
    2170:	89 0f       	add	r24, r25
    2172:	80 95       	com	r24
    2174:	80 8b       	std	Z+16, r24	; 0x10
    2176:	22 81       	ldd	r18, Z+2	; 0x02
    2178:	33 81       	ldd	r19, Z+3	; 0x03
    217a:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <tc_vect>
    217e:	90 91 a8 02 	lds	r25, 0x02A8	; 0x8002a8 <tc_vect+0x1>
    2182:	28 17       	cp	r18, r24
    2184:	39 07       	cpc	r19, r25
    2186:	41 f4       	brne	.+16     	; 0x2198 <_ZN7OSTimer5startEj+0x52>
    2188:	a4 81       	ldd	r26, Z+4	; 0x04
    218a:	b5 81       	ldd	r27, Z+5	; 0x05
    218c:	8c 91       	ld	r24, X
    218e:	85 60       	ori	r24, 0x05	; 5
    2190:	8c 93       	st	X, r24
    2192:	80 89       	ldd	r24, Z+16	; 0x10
    2194:	86 bd       	out	0x26, r24	; 38
    2196:	08 c0       	rjmp	.+16     	; 0x21a8 <_ZN7OSTimer5startEj+0x62>
    2198:	a4 81       	ldd	r26, Z+4	; 0x04
    219a:	b5 81       	ldd	r27, Z+5	; 0x05
    219c:	8c 91       	ld	r24, X
    219e:	87 60       	ori	r24, 0x07	; 7
    21a0:	8c 93       	st	X, r24
    21a2:	80 89       	ldd	r24, Z+16	; 0x10
    21a4:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    21a8:	8f ef       	ldi	r24, 0xFF	; 255
    21aa:	86 83       	std	Z+6, r24	; 0x06
    21ac:	81 e0       	ldi	r24, 0x01	; 1
    21ae:	87 83       	std	Z+7, r24	; 0x07
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    21b0:	4f bf       	out	0x3f, r20	; 63
    __asm__ volatile ("" ::: "memory");
    21b2:	08 95       	ret

000021b4 <_ZN5Timer4stopEv>:
    21b4:	fc 01       	movw	r30, r24
    21b6:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    21b8:	f8 94       	cli
    21ba:	a4 81       	ldd	r26, Z+4	; 0x04
    21bc:	b5 81       	ldd	r27, Z+5	; 0x05
    21be:	8c 91       	ld	r24, X
    21c0:	88 7f       	andi	r24, 0xF8	; 248
    21c2:	8c 93       	st	X, r24
    21c4:	16 82       	std	Z+6, r1	; 0x06
    21c6:	17 82       	std	Z+7, r1	; 0x07
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    21c8:	9f bf       	out	0x3f, r25	; 63
    __asm__ volatile ("" ::: "memory");
    21ca:	08 95       	ret

000021cc <_ZN7Timer165resetEv>:
    21cc:	fc 01       	movw	r30, r24
    21ce:	86 81       	ldd	r24, Z+6	; 0x06
    21d0:	82 30       	cpi	r24, 0x02	; 2
    21d2:	b8 f1       	brcs	.+110    	; 0x2242 <__stack+0x43>
    21d4:	8f 3f       	cpi	r24, 0xFF	; 255
    21d6:	11 f0       	breq	.+4      	; 0x21dc <_ZN7Timer165resetEv+0x10>
    21d8:	81 50       	subi	r24, 0x01	; 1
    21da:	86 83       	std	Z+6, r24	; 0x06
    21dc:	82 81       	ldd	r24, Z+2	; 0x02
    21de:	93 81       	ldd	r25, Z+3	; 0x03
    21e0:	20 91 a9 02 	lds	r18, 0x02A9	; 0x8002a9 <tc_vect+0x2>
    21e4:	30 91 aa 02 	lds	r19, 0x02AA	; 0x8002aa <tc_vect+0x3>
    21e8:	82 17       	cp	r24, r18
    21ea:	93 07       	cpc	r25, r19
    21ec:	39 f4       	brne	.+14     	; 0x21fc <_ZN7Timer165resetEv+0x30>
    21ee:	80 89       	ldd	r24, Z+16	; 0x10
    21f0:	91 89       	ldd	r25, Z+17	; 0x11
    21f2:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
    21f6:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
    21fa:	08 95       	ret
    21fc:	20 91 ad 02 	lds	r18, 0x02AD	; 0x8002ad <tc_vect+0x6>
    2200:	30 91 ae 02 	lds	r19, 0x02AE	; 0x8002ae <tc_vect+0x7>
    2204:	82 17       	cp	r24, r18
    2206:	93 07       	cpc	r25, r19
    2208:	39 f4       	brne	.+14     	; 0x2218 <__stack+0x19>
    220a:	80 89       	ldd	r24, Z+16	; 0x10
    220c:	91 89       	ldd	r25, Z+17	; 0x11
    220e:	90 93 95 00 	sts	0x0095, r25	; 0x800095 <__TEXT_REGION_LENGTH__+0x7c0095>
    2212:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <__TEXT_REGION_LENGTH__+0x7c0094>
    2216:	08 95       	ret
    2218:	20 91 af 02 	lds	r18, 0x02AF	; 0x8002af <tc_vect+0x8>
    221c:	30 91 b0 02 	lds	r19, 0x02B0	; 0x8002b0 <tc_vect+0x9>
    2220:	82 17       	cp	r24, r18
    2222:	93 07       	cpc	r25, r19
    2224:	39 f4       	brne	.+14     	; 0x2234 <__stack+0x35>
    2226:	80 89       	ldd	r24, Z+16	; 0x10
    2228:	91 89       	ldd	r25, Z+17	; 0x11
    222a:	90 93 a5 00 	sts	0x00A5, r25	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7c00a5>
    222e:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7c00a4>
    2232:	08 95       	ret
    2234:	80 89       	ldd	r24, Z+16	; 0x10
    2236:	91 89       	ldd	r25, Z+17	; 0x11
    2238:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
    223c:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
    2240:	08 95       	ret
    2242:	cf 01       	movw	r24, r30
    2244:	b7 cf       	rjmp	.-146    	; 0x21b4 <_ZN5Timer4stopEv>
    2246:	08 95       	ret

00002248 <_ZN6Timer85resetEv>:
    2248:	fc 01       	movw	r30, r24
    224a:	86 81       	ldd	r24, Z+6	; 0x06
    224c:	82 30       	cpi	r24, 0x02	; 2
    224e:	a0 f0       	brcs	.+40     	; 0x2278 <_ZN6Timer85resetEv+0x30>
    2250:	8f 3f       	cpi	r24, 0xFF	; 255
    2252:	11 f0       	breq	.+4      	; 0x2258 <_ZN6Timer85resetEv+0x10>
    2254:	81 50       	subi	r24, 0x01	; 1
    2256:	86 83       	std	Z+6, r24	; 0x06
    2258:	22 81       	ldd	r18, Z+2	; 0x02
    225a:	33 81       	ldd	r19, Z+3	; 0x03
    225c:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <tc_vect>
    2260:	90 91 a8 02 	lds	r25, 0x02A8	; 0x8002a8 <tc_vect+0x1>
    2264:	28 17       	cp	r18, r24
    2266:	39 07       	cpc	r19, r25
    2268:	19 f4       	brne	.+6      	; 0x2270 <_ZN6Timer85resetEv+0x28>
    226a:	80 89       	ldd	r24, Z+16	; 0x10
    226c:	86 bd       	out	0x26, r24	; 38
    226e:	08 95       	ret
    2270:	80 89       	ldd	r24, Z+16	; 0x10
    2272:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    2276:	08 95       	ret
    2278:	cf 01       	movw	r24, r30
    227a:	9c cf       	rjmp	.-200    	; 0x21b4 <_ZN5Timer4stopEv>
    227c:	08 95       	ret

0000227e <_Z22port_handle_to_addressh>:
    227e:	28 2f       	mov	r18, r24
    2280:	30 e0       	ldi	r19, 0x00	; 0
    2282:	41 e0       	ldi	r20, 0x01	; 1
    2284:	50 e0       	ldi	r21, 0x00	; 0
    2286:	ba 01       	movw	r22, r20
    2288:	02 c0       	rjmp	.+4      	; 0x228e <_Z22port_handle_to_addressh+0x10>
    228a:	66 0f       	add	r22, r22
    228c:	77 1f       	adc	r23, r23
    228e:	8a 95       	dec	r24
    2290:	e2 f7       	brpl	.-8      	; 0x228a <_Z22port_handle_to_addressh+0xc>
    2292:	cb 01       	movw	r24, r22
    2294:	40 91 bd 1c 	lds	r20, 0x1CBD	; 0x801cbd <_ZL10port_usage>
    2298:	50 91 be 1c 	lds	r21, 0x1CBE	; 0x801cbe <_ZL10port_usage+0x1>
    229c:	64 23       	and	r22, r20
    229e:	75 23       	and	r23, r21
    22a0:	67 2b       	or	r22, r23
    22a2:	71 f4       	brne	.+28     	; 0x22c0 <_Z22port_handle_to_addressh+0x42>
    22a4:	84 2b       	or	r24, r20
    22a6:	95 2b       	or	r25, r21
    22a8:	90 93 be 1c 	sts	0x1CBE, r25	; 0x801cbe <_ZL10port_usage+0x1>
    22ac:	80 93 bd 1c 	sts	0x1CBD, r24	; 0x801cbd <_ZL10port_usage>
    22b0:	22 0f       	add	r18, r18
    22b2:	33 1f       	adc	r19, r19
    22b4:	f9 01       	movw	r30, r18
    22b6:	ed 54       	subi	r30, 0x4D	; 77
    22b8:	fd 4f       	sbci	r31, 0xFD	; 253
    22ba:	80 81       	ld	r24, Z
    22bc:	91 81       	ldd	r25, Z+1	; 0x01
    22be:	08 95       	ret
    22c0:	80 e0       	ldi	r24, 0x00	; 0
    22c2:	90 e0       	ldi	r25, 0x00	; 0
    22c4:	08 95       	ret

000022c6 <_Z20tc_handle_to_addressh>:
    22c6:	60 91 bc 1c 	lds	r22, 0x1CBC	; 0x801cbc <_ZL8tc_usage>
    22ca:	28 2f       	mov	r18, r24
    22cc:	30 e0       	ldi	r19, 0x00	; 0
    22ce:	46 2f       	mov	r20, r22
    22d0:	50 e0       	ldi	r21, 0x00	; 0
    22d2:	08 2e       	mov	r0, r24
    22d4:	02 c0       	rjmp	.+4      	; 0x22da <_Z20tc_handle_to_addressh+0x14>
    22d6:	55 95       	asr	r21
    22d8:	47 95       	ror	r20
    22da:	0a 94       	dec	r0
    22dc:	e2 f7       	brpl	.-8      	; 0x22d6 <_Z20tc_handle_to_addressh+0x10>
    22de:	40 fd       	sbrc	r20, 0
    22e0:	14 c0       	rjmp	.+40     	; 0x230a <_Z20tc_handle_to_addressh+0x44>
    22e2:	41 e0       	ldi	r20, 0x01	; 1
    22e4:	50 e0       	ldi	r21, 0x00	; 0
    22e6:	fa 01       	movw	r30, r20
    22e8:	02 c0       	rjmp	.+4      	; 0x22ee <_Z20tc_handle_to_addressh+0x28>
    22ea:	ee 0f       	add	r30, r30
    22ec:	ff 1f       	adc	r31, r31
    22ee:	8a 95       	dec	r24
    22f0:	e2 f7       	brpl	.-8      	; 0x22ea <_Z20tc_handle_to_addressh+0x24>
    22f2:	cf 01       	movw	r24, r30
    22f4:	86 2b       	or	r24, r22
    22f6:	80 93 bc 1c 	sts	0x1CBC, r24	; 0x801cbc <_ZL8tc_usage>
    22fa:	22 0f       	add	r18, r18
    22fc:	33 1f       	adc	r19, r19
    22fe:	f9 01       	movw	r30, r18
    2300:	e9 55       	subi	r30, 0x59	; 89
    2302:	fd 4f       	sbci	r31, 0xFD	; 253
    2304:	80 81       	ld	r24, Z
    2306:	91 81       	ldd	r25, Z+1	; 0x01
    2308:	08 95       	ret
    230a:	80 e0       	ldi	r24, 0x00	; 0
    230c:	90 e0       	ldi	r25, 0x00	; 0
    230e:	08 95       	ret

00002310 <__tablejump2__>:
    2310:	ee 0f       	add	r30, r30
    2312:	ff 1f       	adc	r31, r31
    2314:	88 1f       	adc	r24, r24
    2316:	8b bf       	out	0x3b, r24	; 59
    2318:	07 90       	elpm	r0, Z+
    231a:	f6 91       	elpm	r31, Z
    231c:	e0 2d       	mov	r30, r0
    231e:	19 94       	eijmp

00002320 <_exit>:
    2320:	f8 94       	cli

00002322 <__stop_program>:
    2322:	ff cf       	rjmp	.-2      	; 0x2322 <__stop_program>
